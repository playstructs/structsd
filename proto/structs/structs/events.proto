syntax = "proto3";


package structs.structs;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "structs/structs/params.proto";

import "structs/structs/address.proto";
import "structs/structs/allocation.proto";
import "structs/structs/grid.proto";
import "structs/structs/guild.proto";
import "structs/structs/infusion.proto";
import "structs/structs/keys.proto";
import "structs/structs/permission.proto";
import "structs/structs/player.proto";
import "structs/structs/planet.proto";
import "structs/structs/reactor.proto";
import "structs/structs/struct.proto";
import "structs/structs/substation.proto";

option go_package = "structs/x/structs/types";


/*
 * These all take the form of Container{ Object{} } rather than
 * using Object{ attrA: "val", attrB: "lav"} so that when they
 * are added to the database as an index record, it ads a single
 * json blob for the object, rather than one line per attribute.
 *
 * The only time Object{} should be used as an event without a
 * container, is when there is only a single attribute in
 * the results, such as EventDelete{ string objectId = 1; }
 */

message EventAllocation   { Allocation allocation = 1; }
message EventGuild        { Guild guild = 1; }
message EventInfusion     { Infusion infusion = 1; }
message EventPlanet       { Planet planet = 1; }
message EventPlayer       { Player player = 1; }
message EventReactor      { Reactor reactor = 1; }
message EventStruct       { Struct structure = 1; }
message EventStructType   { StructType structType = 1; }
message EventSubstation   { Substation substation = 1; }

message EventPermission { PermissionRecord permissionRecord = 1; }
message EventGrid { GridRecord gridRecord = 1; }

message EventDelete { string objectId = 1; }

message EventAddressAssociation { AddressAssociation addressAssociation = 1; }
message EventAddressActivity { AddressActivity addressActivity = 1; }

message EventGuildMembershipApplication { GuildMembershipApplication guildMembershipApplication = 1; }


