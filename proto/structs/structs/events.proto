syntax = "proto3";

package structs;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "structs/structs/params.proto";
import "structs/structs/keys.proto";

import "structs/structs/allocation.proto";
import "structs/structs/guild.proto";
import "structs/structs/infusion.proto";
import "structs/structs/planet.proto";
import "structs/structs/player.proto";
import "structs/structs/reactor.proto";
import "structs/structs/struct.proto";
import "structs/structs/substation.proto";



option go_package = "structs/x/structs/types";


message EventAllocation {
  Allocation allocation = 1;
}

message EventGuild {
  Guild guild = 1;
}

message EventGuildPermission {
  EventPermissionBodyKeyPair body = 1;
}

message EventInfusion {
  Infusion infusion = 1;
}

message EventPlanet {
  Planet planet = 1;
}

message EventPlanetRefinementCount {
  EventBodyKeyPair body = 1;
}

message EventPlanetOreCount {
  EventBodyKeyPair body = 1;
}

message EventPlayer {
  Player player = 1;
}

message EventPlayerPermission {
  EventPermissionBodyKeyPair body = 1;
}

message EventPlayerLoad {
  EventBodyKeyPair body = 1;
}

message EventReactor {
  Reactor reactor = 1;
}

message EventReactorPermission {
  EventPermissionBodyKeyPair body = 1;
}


message EventReactorFuel {
  EventBodyKeyPair body = 1;
}

message EventReactorEnergy {
  EventBodyKeyPair body = 1;
}

message EventReactorLoad {
  EventBodyKeyPair body = 1;
}

message EventStruct {
  Struct structure = 1;
}


message EventStructFuel {
  EventBodyKeyPair body = 1;
}
message EventStructEnergy {
  EventBodyKeyPair body = 1;
}

message EventStructLoad {
  EventBodyKeyPair body = 1;
}


message EventSubstation {
  Substation substation = 1;
}

message EventSubstationPermission {
  EventPermissionBodyKeyPair body = 1;
}

message EventSubstationEnergy {
  EventBodyKeyPair body = 1;
}

message EventSubstationLoad {
  EventBodyKeyPair body = 1;
}

message EventBodyKeyPair {
  uint64 key    = 1;
  uint64 value  = 2;
}

message EventPermissionBodyKeyPair {
  string objectId = 1;
  string playerId = 2;
  uint64 value    = 3;
}


message EventAllocationDelete {
  uint64 allocationId = 1;
}

message EventGuildDelete {
  uint64 guildId = 1;
}

message EventInfusionDelete {
  objectType  destinationType   = 1;
  uint64      destinationId     = 2;
  string      address           = 3;
}

message EventReactorDelete {
  uint64 reactorId = 1;
}

message EventStructDelete {
  uint64 structId  = 1;
}

message EventSubstationDelete {
  uint64 substationId = 1;
}

message EventAddressAssociation {
  EventAddressBody address = 1;
}

message EventAddressRegistrationRequest {
  EventAddressBody address = 1;
}

message EventAddressBody {
  string address = 1;
  uint64 playerId = 2;
}

message EventAddressPermissionChange {
  EventAddressPermissionBody address = 1;
}

message EventAddressPermissionBody {
  string address = 1;
  uint64 permissionRecord = 2;
}

