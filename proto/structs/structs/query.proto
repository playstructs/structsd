syntax = "proto3";

package structs;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "structs/structs/params.proto";
import "structs/structs/reactor.proto";
import "structs/structs/substation.proto";
import "structs/structs/allocation.proto";
import "structs/structs/guild.proto";
import "structs/structs/squad.proto";
import "structs/structs/player.proto";
import "structs/structs/planet.proto";
import "structs/structs/struct.proto";
import "structs/structs/infusion.proto";
import "structs/structs/keys.proto";

option go_package = "structs/x/structs/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc GetBlockHeight (QueryBlockHeight) returns (QueryBlockHeightResponse) {
    option (google.api.http).get = "/blockheight";
  }

  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/structs/params";
  }
  
  // Queries a list of Reactor items.
  rpc Reactor    (QueryGetReactorRequest) returns (QueryGetReactorResponse) {
    option (google.api.http).get = "/structs/reactor/{id}";
  }

  rpc ReactorAll (QueryAllReactorRequest) returns (QueryAllReactorResponse) {
    option (google.api.http).get = "/structs/reactor";
  }

  // Queries a list of Reactor Permission items.
  rpc ReactorPermission    (QueryGetReactorPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/reactor/{reactorId}";
  }

  rpc ReactorPlayerPermission    (QueryGetReactorPlayerPermissionRequest) returns (QueryPermissionResponse) {
    option (google.api.http).get = "/structs/permission/reactor/{reactorId}/{playerId}";
  }

  rpc ReactorPermissionAll (QueryAllReactorPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/reactor";
  }

  
  // Queries a list of Substation items.
  rpc Substation    (QueryGetSubstationRequest) returns (QueryGetSubstationResponse) {
    option (google.api.http).get = "/structs/substation/{id}";
  }

  rpc SubstationAll (QueryAllSubstationRequest) returns (QueryAllSubstationResponse) {
    option (google.api.http).get = "/structs/substation";
  }

  // Queries a list of Substation Permission items.
  rpc SubstationPermission    (QueryGetSubstationPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/substation/{substationId}";
  }

  rpc SubstationPlayerPermission    (QueryGetSubstationPlayerPermissionRequest) returns (QueryPermissionResponse) {
    option (google.api.http).get = "/structs/permission/substation/{substationId}/{playerId}";
  }
  rpc SubstationPermissionAll (QueryAllSubstationPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/substation";
  }

  // Queries a list of Allocation items.
  rpc Allocation    (QueryGetAllocationRequest) returns (QueryGetAllocationResponse) {
    option (google.api.http).get = "/structs/allocation/{id}";
  }

  rpc AllocationAll (QueryAllAllocationRequest) returns (QueryAllAllocationResponse) {
    option (google.api.http).get = "/structs/allocation";
  }
  
  // Queries a list of Guild items.
  rpc Guild    (QueryGetGuildRequest) returns (QueryGetGuildResponse) {
    option (google.api.http).get = "/structs/guild/{id}";
  }

  rpc GuildAll (QueryAllGuildRequest) returns (QueryAllGuildResponse) {
    option (google.api.http).get = "/structs/guild";
  }

  // Queries a list of Guild Permission items.
  rpc GuildPermission    (QueryGetGuildPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/guild/{guildId}";
  }

  rpc GuildPlayerPermission    (QueryGetGuildPlayerPermissionRequest) returns (QueryPermissionResponse) {
    option (google.api.http).get = "/structs/permission/guild/{guildId}/{playerId}";
  }

  rpc GuildPermissionAll (QueryAllGuildPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/guild";
  }
  
  // Queries a list of Player items.
  rpc Player    (QueryGetPlayerRequest) returns (QueryGetPlayerResponse) {
    option (google.api.http).get = "/structs/player/{id}";
  }

  rpc PlayerAll (QueryAllPlayerRequest) returns (QueryAllPlayerResponse) {
    option (google.api.http).get = "/structs/player";
  }

  // Queries a list of Player Permission items.
  rpc PlayerPermission    (QueryGetPlayerPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/player/{playerId}";
  }

  rpc PlayerPlayerPermission    (QueryGetPlayerPlayerPermissionRequest) returns (QueryPermissionResponse) {
    option (google.api.http).get = "/structs/permission/player/{targetPlayerId}/{playerId}";
  }

  rpc PlayerPermissionAll (QueryAllPlayerPermissionRequest) returns (QueryGetMultiplePermissionResponse) {
    option (google.api.http).get = "/structs/permission/player";
  }

  // Queries a list of Allocation items.
  rpc Infusion    (QueryGetInfusionRequest) returns (QueryGetInfusionResponse) {
    option (google.api.http).get = "/structs/infusion/{destinationType}/{destinationId}/{address}";
  }

  rpc InfusionAll (QueryAllInfusionRequest) returns (QueryAllInfusionResponse) {
    option (google.api.http).get = "/structs/infusion";
  }

  // Queries a list of Planet items.
  rpc Planet    (QueryGetPlanetRequest) returns (QueryGetPlanetResponse) {
    option (google.api.http).get = "/structs/planet/{id}";
  }

  rpc PlanetAll (QueryAllPlanetRequest) returns (QueryAllPlanetResponse) {
    option (google.api.http).get = "/structs/planet";
  }

  // Queries a list of Structs items.
  rpc Struct    (QueryGetStructRequest) returns (QueryGetStructResponse) {
    option (google.api.http).get = "/structs/struct/{id}";
  }

  rpc StructAll (QueryAllStructRequest) returns (QueryAllStructResponse) {
    option (google.api.http).get = "/structs/struct";
  }

  // Queries a list of Guild Permission items.
  rpc Address    (QueryGetAddressRequest) returns (QueryAddressResponse) {
    option (google.api.http).get = "/structs/address/{address}";
  }

  rpc AddressAll (QueryAllAddressRequest) returns (QueryAllAddressResponse) {
    option (google.api.http).get = "/structs/address";
  }

  rpc AddressAllByPlayer (QueryAllAddressByPlayerRequest) returns (QueryAllAddressResponse) {
    option (google.api.http).get = "/structs/address_by_player/{playerId}";
  }

}

// Generic Responses for Permissions
message QueryPermissionResponse {
  string objectId         = 1;
  string playerId         = 2;
  uint64 permissionRecord = 3;
}

message QueryGetMultiplePermissionResponse {
  repeated QueryPermissionResponse permission = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}



// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetReactorRequest {
  uint64 id = 1;
}

message QueryGetReactorResponse {
  Reactor Reactor = 1 [(gogoproto.nullable) = false];
}

message QueryAllReactorRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReactorResponse {
  repeated Reactor                                Reactor    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


message QueryGetReactorPermissionRequest {
  uint64 reactorId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetReactorPlayerPermissionRequest {
  uint64 reactorId = 1;
  uint64 playerId  = 2;
}

message QueryAllReactorPermissionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}



message QueryGetSubstationRequest {
  uint64 id = 1;
}

message QueryGetSubstationResponse {
  Substation Substation = 1 [(gogoproto.nullable) = false];
}

message QueryAllSubstationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSubstationResponse {
  repeated Substation                             Substation = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSubstationPermissionRequest {
  uint64 substationId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetSubstationPlayerPermissionRequest {
  uint64 substationId = 1;
  uint64 playerId  = 2;
}

message QueryAllSubstationPermissionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetAllocationRequest {
  uint64 id = 1;
}

message QueryGetAllocationResponse {
  Allocation Allocation = 1 [(gogoproto.nullable) = false];
}

message QueryAllAllocationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAllocationResponse {
  repeated Allocation                             Allocation = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
  repeated uint64                                 status     = 3;
}

message QueryGetGuildRequest {
  uint64 id = 1;
}

message QueryGetGuildResponse {
  Guild Guild = 1 [(gogoproto.nullable) = false];
}

message QueryAllGuildRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGuildResponse {
  repeated Guild                                  Guild      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetGuildPermissionRequest {
  uint64 guildId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetGuildPlayerPermissionRequest {
  uint64 guildId = 1;
  uint64 playerId  = 2;
}

message QueryAllGuildPermissionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetPlayerRequest {
  uint64 id = 1;
}

message QueryGetPlayerResponse {
  Player Player = 1 [(gogoproto.nullable) = false];
}

message QueryAllPlayerRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPlayerResponse {
  repeated Player                                 Player     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPlayerPermissionRequest {
  uint64 playerId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetPlayerPlayerPermissionRequest {
  uint64 targetPlayerId = 1;
  uint64 playerId  = 2;
}

message QueryAllPlayerPermissionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}



message QueryGetInfusionRequest {
  string destinationType      = 1;
  uint64 destinationId        = 2;
  string address              = 3;
}

message QueryGetInfusionResponse {
  Infusion Infusion = 1 [(gogoproto.nullable) = false];
}

message QueryAllInfusionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInfusionResponse {
  repeated Infusion                             Infusion = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
  repeated uint64                                 status     = 3;
}



message QueryGetPlanetRequest {
  uint64 id = 1;
}

message QueryGetPlanetResponse {
  Planet Planet = 1 [(gogoproto.nullable) = false];
}

message QueryAllPlanetRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPlanetResponse {
  repeated Planet                                  Planet      = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


message QueryGetStructRequest {
  uint64 id = 1;
}

message QueryGetStructResponse {
  Struct Struct = 1 [(gogoproto.nullable) = false];
}

message QueryAllStructRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStructResponse {
  repeated Struct                                  Struct      = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


message QueryBlockHeight {}

message QueryBlockHeightResponse { uint64 blockHeight = 1;}

message QueryGetAddressRequest {
  string address = 1;
}

message QueryAllAddressRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAddressByPlayerRequest {
  uint64 playerId = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAddressResponse {
  string address          = 1;
  uint64 playerId         = 2;
  uint64 permissionRecord = 3;
}

message QueryAllAddressResponse {
  repeated QueryAddressResponse address = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
