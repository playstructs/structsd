syntax = "proto3";

package structs.structs;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "structs/structs/params.proto";
import "structs/structs/reactor.proto";
import "structs/structs/substation.proto";
import "structs/structs/allocation.proto";
import "structs/structs/guild.proto";
import "structs/structs/player.proto";
import "structs/structs/infusion.proto";
import "structs/structs/keys.proto";

option go_package = "structs/x/structs/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/structs/params";
  
  }
  
  // Queries a list of Reactor items.
  rpc Reactor    (QueryGetReactorRequest) returns (QueryGetReactorResponse) {
    option (google.api.http).get = "/structs/reactor/{id}";
  
  }
  rpc ReactorAll (QueryAllReactorRequest) returns (QueryAllReactorResponse) {
    option (google.api.http).get = "/structs/reactor";
  
  }
  
  // Queries a list of Substation items.
  rpc Substation    (QueryGetSubstationRequest) returns (QueryGetSubstationResponse) {
    option (google.api.http).get = "/structs/substation/{id}";
  
  }
  rpc SubstationAll (QueryAllSubstationRequest) returns (QueryAllSubstationResponse) {
    option (google.api.http).get = "/structs/substation";
  
  }
  
  // Queries a list of Allocation items.
  rpc Allocation    (QueryGetAllocationRequest) returns (QueryGetAllocationResponse) {
    option (google.api.http).get = "/structs/allocation/{id}";
  
  }
  rpc AllocationAll (QueryAllAllocationRequest) returns (QueryAllAllocationResponse) {
    option (google.api.http).get = "/structs/allocation";
  
  }
  
  // Queries a list of Guild items.
  rpc Guild    (QueryGetGuildRequest) returns (QueryGetGuildResponse) {
    option (google.api.http).get = "/structs/structs/guild/{id}";
  
  }
  rpc GuildAll (QueryAllGuildRequest) returns (QueryAllGuildResponse) {
    option (google.api.http).get = "/structs/structs/guild";
  
  }
  
  // Queries a list of Player items.
  rpc Player    (QueryGetPlayerRequest) returns (QueryGetPlayerResponse) {
    option (google.api.http).get = "/structs/structs/player/{id}";
  
  }
  rpc PlayerAll (QueryAllPlayerRequest) returns (QueryAllPlayerResponse) {
    option (google.api.http).get = "/structs/structs/player";
  
  }


  // Queries a list of Allocation items.
  rpc Infusion    (QueryGetInfusionRequest) returns (QueryGetInfusionResponse) {
    option (google.api.http).get = "/structs/infusion/{destinationType}/{destinationId}/{address}";

  }
  rpc InfusionAll (QueryAllInfusionRequest) returns (QueryAllInfusionResponse) {
    option (google.api.http).get = "/structs/infusion";

  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetReactorRequest {
  uint64 id = 1;
}

message QueryGetReactorResponse {
  Reactor Reactor = 1 [(gogoproto.nullable) = false];
}

message QueryAllReactorRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReactorResponse {
  repeated Reactor                                Reactor    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSubstationRequest {
  uint64 id = 1;
}

message QueryGetSubstationResponse {
  Substation Substation = 1 [(gogoproto.nullable) = false];
}

message QueryAllSubstationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSubstationResponse {
  repeated Substation                             Substation = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAllocationRequest {
  uint64 id = 1;
}

message QueryGetAllocationResponse {
  Allocation Allocation = 1 [(gogoproto.nullable) = false];
}

message QueryAllAllocationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAllocationResponse {
  repeated Allocation                             Allocation = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
  repeated uint64                                 status     = 3;
}

message QueryGetGuildRequest {
  uint64 id = 1;
}

message QueryGetGuildResponse {
  Guild Guild = 1 [(gogoproto.nullable) = false];
}

message QueryAllGuildRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGuildResponse {
  repeated Guild                                  Guild      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPlayerRequest {
  uint64 id = 1;
}

message QueryGetPlayerResponse {
  Player Player = 1 [(gogoproto.nullable) = false];
}

message QueryAllPlayerRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPlayerResponse {
  repeated Player                                 Player     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}




message QueryGetInfusionRequest {
  string destinationType      = 1;
  uint64 destinationId        = 2;
  string address              = 3;
}

message QueryGetInfusionResponse {
  Infusion Infusion = 1 [(gogoproto.nullable) = false];
}

message QueryAllInfusionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInfusionResponse {
  repeated Infusion                             Infusion = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
  repeated uint64                                 status     = 3;
}
