syntax = "proto3";
package structs.structs;

option go_package = "structs/x/structs/types";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

message Reactor {
  option (gogoproto.equal)            = true;

  uint64 id = 1;

  string validator = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  //string validator = 2;

  uint64 energy = 3;

  uint64 load = 4;

  bool activated = 5;

  uint64 guildId = 6;

  bool automatedAllocations = 7;
  bool allowManualAllocations = 8;
  bool allowExternalAllocations = 9;
  bool allowUncappedAllocations = 10;

  string delegateMinimumBeforeAllowedAllocations = 11 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string delegateTaxOnAllocations = 12 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];;

}
