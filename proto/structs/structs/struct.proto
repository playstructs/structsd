syntax = "proto3";

package structs.structs;

option go_package = "structs/x/structs/types";
import "structs/structs/keys.proto";

message Struct {
  // What it is
  string id         = 1;
  uint64 index      = 2;
  uint64 type       = 3;

  // Who is it
  string creator  = 4;
  string owner    = 5;

  // Where it is
  string  locationId      = 6;
  ambit   operatingAmbit  = 7;
  uint64  slot            = 8;
}

message StructType {
  uint64  id    = 1;
  string  type  = 2;

  // Fundamental attributes
  structCategory  category        = 3; // Planet or Fleet
  uint64          buildDifficulty = 4; // How much compute is needed to build
  uint64          buildDraw       = 5; // How much energy the Struct consumes during building
  uint64          maxHealth       = 6; // How much damage can it take
  uint64          passiveDraw     = 7; // How much energy the Struct consumes when active
  uint64          possibleAmbit   = 8; // Where can it be built and moved to. Usually only a single ambit but some Structs have multiple possible (i.e. Command Ship)

  // Primary Weapon Configuration
  techActiveWeaponry  primaryWeapon                 = 9;
  uint64              primaryWeaponCharge           = 10;
  uint64              primaryWeaponTargets          = 11;
  uint64              primaryWeaponShots            = 12;
  uint64              primaryWeaponDamage           = 13;
  string              primaryWeaponShotSuccessRate  = 14 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  // Secondary Weapon Configuration
  techActiveWeaponry  secondaryWeapon                 = 15;
  uint64              secondaryWeaponCharge           = 16;
  uint64              secondaryWeaponTargets          = 17;
  uint64              secondaryWeaponShots            = 18;
  uint64              secondaryWeaponDamage           = 19;
  string              secondaryWeaponShotSuccessRate  = 20 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  // Tech Tree Features
  techPassiveWeaponry               passiveWeaponry             = 21;

  techFleetUnitDefenses             fleetUnitDefenses           = 22;
  techFleetOreReserveDefenses       fleetOreReserveDefenses     = 23;

  techPlanetaryUnitDefenses         planetaryUnitDefenses       = 24;
  techPlanetaryDefenses             planetaryDefenses           = 25;
  techPlanetaryOreReserveDefenses   planetaryOreReserveDefenses = 26;
  techPlanetaryMining               planetaryMining             = 27;
  techPlanetaryRefineries           planetaryRefinery           = 28;

  techStorageFacilities             storageFacility             = 29;
  techPowerGeneration               powerGeneration             = 30;


  // Charge uses
  uint64 activateCharge             = 31;
  uint64 buildCharge                = 32;
  uint64 defendChangeCharge         = 33;
  uint64 moveCharge                 = 34;
  uint64 oreMiningActivateCharge    = 35;
  uint64 oreRefiningActivateCharge  = 36;
  uint64 stealthActivateCharge      = 37;
  uint64 storageChangeCharge        = 38;


  // Tech Tree Attributes
  uint64 attackReduction              = 39; // For Defensive Cannon

  uint64 counterAttack                = 40; // Counter
  uint64 counterAttackSameAmbit       = 41; // Advanced Counter

  uint64 generatingRate               = 42; // Power Generation

  uint64 planetaryShieldContribution  = 43; // The shield that is added to the Planet

  uint64 storageLand                  = 44;
  uint64 storageWater                 = 45;
  uint64 storageAir                   = 46;
  uint64 storageSpace                 = 47;

  string unguidedDefensiveSuccessRate = 48 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  string guidedDefensiveSuccessRate   = 49 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];
}

message StructDefender {
  uint64  id                     = 1;
  string  structId               = 2;

  ambit   operatingAmbit         = 3;

  uint64  counterAttack          = 4;
  uint64  counterAttackSameAmbit = 5;
}

message StructAttributeRecord {
  string attributeId = 1;
  uint64 value = 2;
}