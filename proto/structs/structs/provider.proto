syntax = "proto3";

package structs.structs;

option go_package = "structs/x/structs/types";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "structs/structs/keys.proto";

message Provider {

  option (gogoproto.equal) = true;

  string  id                              = 1;

  string substationId                     = 2;

  repeated cosmos.base.v1beta1.Coin rate  = 3 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  providerAccessPolicy accessPolicy       = 4;

  uint64 minimumCapacity                  = 5;
  uint64 maximumCapacity                  = 6;
  uint64 minimumDuration                  = 7;
  uint64 maximumDuration                  = 8;

  string  providerCancellationPenalty     = 9 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  string  consumerCancellationPenalty     = 10 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  string payoutAddress                    = 11 [(cosmos_proto.scalar) = "cosmos.AddressString"];

}
