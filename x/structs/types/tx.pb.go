// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: structs/structs/tx.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the module parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgAddressRegister struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId       string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Address        string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ProofPubKey    string `protobuf:"bytes,4,opt,name=proofPubKey,proto3" json:"proofPubKey,omitempty"`
	ProofSignature string `protobuf:"bytes,5,opt,name=proofSignature,proto3" json:"proofSignature,omitempty"`
	Permissions    uint64 `protobuf:"varint,6,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgAddressRegister) Reset()         { *m = MsgAddressRegister{} }
func (m *MsgAddressRegister) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRegister) ProtoMessage()    {}
func (*MsgAddressRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{2}
}
func (m *MsgAddressRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRegister.Merge(m, src)
}
func (m *MsgAddressRegister) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRegister.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRegister proto.InternalMessageInfo

func (m *MsgAddressRegister) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddressRegister) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgAddressRegister) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgAddressRegister) GetProofPubKey() string {
	if m != nil {
		return m.ProofPubKey
	}
	return ""
}

func (m *MsgAddressRegister) GetProofSignature() string {
	if m != nil {
		return m.ProofSignature
	}
	return ""
}

func (m *MsgAddressRegister) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgAddressRegisterResponse struct {
}

func (m *MsgAddressRegisterResponse) Reset()         { *m = MsgAddressRegisterResponse{} }
func (m *MsgAddressRegisterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRegisterResponse) ProtoMessage()    {}
func (*MsgAddressRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{3}
}
func (m *MsgAddressRegisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRegisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRegisterResponse.Merge(m, src)
}
func (m *MsgAddressRegisterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRegisterResponse proto.InternalMessageInfo

type MsgAddressRevoke struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgAddressRevoke) Reset()         { *m = MsgAddressRevoke{} }
func (m *MsgAddressRevoke) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRevoke) ProtoMessage()    {}
func (*MsgAddressRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{4}
}
func (m *MsgAddressRevoke) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRevoke.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRevoke.Merge(m, src)
}
func (m *MsgAddressRevoke) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRevoke proto.InternalMessageInfo

func (m *MsgAddressRevoke) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddressRevoke) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgAddressRevokeResponse struct {
}

func (m *MsgAddressRevokeResponse) Reset()         { *m = MsgAddressRevokeResponse{} }
func (m *MsgAddressRevokeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRevokeResponse) ProtoMessage()    {}
func (*MsgAddressRevokeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{5}
}
func (m *MsgAddressRevokeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRevokeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRevokeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRevokeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRevokeResponse.Merge(m, src)
}
func (m *MsgAddressRevokeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRevokeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRevokeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRevokeResponse proto.InternalMessageInfo

type MsgAllocationCreate struct {
	Creator        string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Controller     string         `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	SourceObjectId string         `protobuf:"bytes,3,opt,name=sourceObjectId,proto3" json:"sourceObjectId,omitempty"`
	AllocationType AllocationType `protobuf:"varint,4,opt,name=allocationType,proto3,enum=structs.structs.AllocationType" json:"allocationType,omitempty"`
	Power          uint64         `protobuf:"varint,5,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *MsgAllocationCreate) Reset()         { *m = MsgAllocationCreate{} }
func (m *MsgAllocationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationCreate) ProtoMessage()    {}
func (*MsgAllocationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{6}
}
func (m *MsgAllocationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationCreate.Merge(m, src)
}
func (m *MsgAllocationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationCreate proto.InternalMessageInfo

func (m *MsgAllocationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAllocationCreate) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgAllocationCreate) GetSourceObjectId() string {
	if m != nil {
		return m.SourceObjectId
	}
	return ""
}

func (m *MsgAllocationCreate) GetAllocationType() AllocationType {
	if m != nil {
		return m.AllocationType
	}
	return AllocationType_static
}

func (m *MsgAllocationCreate) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type MsgAllocationCreateResponse struct {
	AllocationId string `protobuf:"bytes,1,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgAllocationCreateResponse) Reset()         { *m = MsgAllocationCreateResponse{} }
func (m *MsgAllocationCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationCreateResponse) ProtoMessage()    {}
func (*MsgAllocationCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{7}
}
func (m *MsgAllocationCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationCreateResponse.Merge(m, src)
}
func (m *MsgAllocationCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationCreateResponse proto.InternalMessageInfo

func (m *MsgAllocationCreateResponse) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgAllocationDelete struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId string `protobuf:"bytes,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgAllocationDelete) Reset()         { *m = MsgAllocationDelete{} }
func (m *MsgAllocationDelete) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationDelete) ProtoMessage()    {}
func (*MsgAllocationDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{8}
}
func (m *MsgAllocationDelete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationDelete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationDelete.Merge(m, src)
}
func (m *MsgAllocationDelete) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationDelete proto.InternalMessageInfo

func (m *MsgAllocationDelete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAllocationDelete) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgAllocationDeleteResponse struct {
	AllocationId string `protobuf:"bytes,1,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgAllocationDeleteResponse) Reset()         { *m = MsgAllocationDeleteResponse{} }
func (m *MsgAllocationDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationDeleteResponse) ProtoMessage()    {}
func (*MsgAllocationDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{9}
}
func (m *MsgAllocationDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationDeleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationDeleteResponse.Merge(m, src)
}
func (m *MsgAllocationDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationDeleteResponse proto.InternalMessageInfo

func (m *MsgAllocationDeleteResponse) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgAllocationUpdate struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId string `protobuf:"bytes,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
	Power        uint64 `protobuf:"varint,3,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *MsgAllocationUpdate) Reset()         { *m = MsgAllocationUpdate{} }
func (m *MsgAllocationUpdate) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationUpdate) ProtoMessage()    {}
func (*MsgAllocationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{10}
}
func (m *MsgAllocationUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationUpdate.Merge(m, src)
}
func (m *MsgAllocationUpdate) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationUpdate proto.InternalMessageInfo

func (m *MsgAllocationUpdate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAllocationUpdate) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

func (m *MsgAllocationUpdate) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type MsgAllocationUpdateResponse struct {
	AllocationId string `protobuf:"bytes,1,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgAllocationUpdateResponse) Reset()         { *m = MsgAllocationUpdateResponse{} }
func (m *MsgAllocationUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationUpdateResponse) ProtoMessage()    {}
func (*MsgAllocationUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{11}
}
func (m *MsgAllocationUpdateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationUpdateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationUpdateResponse.Merge(m, src)
}
func (m *MsgAllocationUpdateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationUpdateResponse proto.InternalMessageInfo

func (m *MsgAllocationUpdateResponse) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgAllocationTransfer struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId string `protobuf:"bytes,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
	Controller   string `protobuf:"bytes,3,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (m *MsgAllocationTransfer) Reset()         { *m = MsgAllocationTransfer{} }
func (m *MsgAllocationTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationTransfer) ProtoMessage()    {}
func (*MsgAllocationTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{12}
}
func (m *MsgAllocationTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationTransfer.Merge(m, src)
}
func (m *MsgAllocationTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationTransfer proto.InternalMessageInfo

func (m *MsgAllocationTransfer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAllocationTransfer) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

func (m *MsgAllocationTransfer) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

type MsgAllocationTransferResponse struct {
	AllocationId string `protobuf:"bytes,1,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgAllocationTransferResponse) Reset()         { *m = MsgAllocationTransferResponse{} }
func (m *MsgAllocationTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationTransferResponse) ProtoMessage()    {}
func (*MsgAllocationTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{13}
}
func (m *MsgAllocationTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationTransferResponse.Merge(m, src)
}
func (m *MsgAllocationTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationTransferResponse proto.InternalMessageInfo

func (m *MsgAllocationTransferResponse) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgFleetMove struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FleetId               string `protobuf:"bytes,2,opt,name=fleetId,proto3" json:"fleetId,omitempty"`
	DestinationLocationId string `protobuf:"bytes,3,opt,name=destinationLocationId,proto3" json:"destinationLocationId,omitempty"`
}

func (m *MsgFleetMove) Reset()         { *m = MsgFleetMove{} }
func (m *MsgFleetMove) String() string { return proto.CompactTextString(m) }
func (*MsgFleetMove) ProtoMessage()    {}
func (*MsgFleetMove) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{14}
}
func (m *MsgFleetMove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFleetMove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFleetMove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFleetMove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFleetMove.Merge(m, src)
}
func (m *MsgFleetMove) XXX_Size() int {
	return m.Size()
}
func (m *MsgFleetMove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFleetMove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFleetMove proto.InternalMessageInfo

func (m *MsgFleetMove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFleetMove) GetFleetId() string {
	if m != nil {
		return m.FleetId
	}
	return ""
}

func (m *MsgFleetMove) GetDestinationLocationId() string {
	if m != nil {
		return m.DestinationLocationId
	}
	return ""
}

type MsgFleetMoveResponse struct {
	Fleet *Fleet `protobuf:"bytes,1,opt,name=fleet,proto3" json:"fleet,omitempty"`
}

func (m *MsgFleetMoveResponse) Reset()         { *m = MsgFleetMoveResponse{} }
func (m *MsgFleetMoveResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFleetMoveResponse) ProtoMessage()    {}
func (*MsgFleetMoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{15}
}
func (m *MsgFleetMoveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFleetMoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFleetMoveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFleetMoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFleetMoveResponse.Merge(m, src)
}
func (m *MsgFleetMoveResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFleetMoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFleetMoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFleetMoveResponse proto.InternalMessageInfo

func (m *MsgFleetMoveResponse) GetFleet() *Fleet {
	if m != nil {
		return m.Fleet
	}
	return nil
}

type MsgGuildCreate struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Endpoint          string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	EntrySubstationId string `protobuf:"bytes,3,opt,name=entrySubstationId,proto3" json:"entrySubstationId,omitempty"`
}

func (m *MsgGuildCreate) Reset()         { *m = MsgGuildCreate{} }
func (m *MsgGuildCreate) String() string { return proto.CompactTextString(m) }
func (*MsgGuildCreate) ProtoMessage()    {}
func (*MsgGuildCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{16}
}
func (m *MsgGuildCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildCreate.Merge(m, src)
}
func (m *MsgGuildCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildCreate proto.InternalMessageInfo

func (m *MsgGuildCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildCreate) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *MsgGuildCreate) GetEntrySubstationId() string {
	if m != nil {
		return m.EntrySubstationId
	}
	return ""
}

type MsgGuildCreateResponse struct {
	GuildId string `protobuf:"bytes,1,opt,name=guildId,proto3" json:"guildId,omitempty"`
}

func (m *MsgGuildCreateResponse) Reset()         { *m = MsgGuildCreateResponse{} }
func (m *MsgGuildCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGuildCreateResponse) ProtoMessage()    {}
func (*MsgGuildCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{17}
}
func (m *MsgGuildCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildCreateResponse.Merge(m, src)
}
func (m *MsgGuildCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildCreateResponse proto.InternalMessageInfo

func (m *MsgGuildCreateResponse) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

type MsgGuildUpdateOwnerId struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	Owner   string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *MsgGuildUpdateOwnerId) Reset()         { *m = MsgGuildUpdateOwnerId{} }
func (m *MsgGuildUpdateOwnerId) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateOwnerId) ProtoMessage()    {}
func (*MsgGuildUpdateOwnerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{18}
}
func (m *MsgGuildUpdateOwnerId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateOwnerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateOwnerId.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateOwnerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateOwnerId.Merge(m, src)
}
func (m *MsgGuildUpdateOwnerId) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateOwnerId) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateOwnerId.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateOwnerId proto.InternalMessageInfo

func (m *MsgGuildUpdateOwnerId) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateOwnerId) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildUpdateOwnerId) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type MsgGuildUpdateEntrySubstationId struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId           string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	EntrySubstationId string `protobuf:"bytes,3,opt,name=entrySubstationId,proto3" json:"entrySubstationId,omitempty"`
}

func (m *MsgGuildUpdateEntrySubstationId) Reset()         { *m = MsgGuildUpdateEntrySubstationId{} }
func (m *MsgGuildUpdateEntrySubstationId) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateEntrySubstationId) ProtoMessage()    {}
func (*MsgGuildUpdateEntrySubstationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{19}
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateEntrySubstationId.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateEntrySubstationId.Merge(m, src)
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateEntrySubstationId.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateEntrySubstationId proto.InternalMessageInfo

func (m *MsgGuildUpdateEntrySubstationId) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateEntrySubstationId) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildUpdateEntrySubstationId) GetEntrySubstationId() string {
	if m != nil {
		return m.EntrySubstationId
	}
	return ""
}

type MsgGuildUpdateEndpoint struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId  string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (m *MsgGuildUpdateEndpoint) Reset()         { *m = MsgGuildUpdateEndpoint{} }
func (m *MsgGuildUpdateEndpoint) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateEndpoint) ProtoMessage()    {}
func (*MsgGuildUpdateEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{20}
}
func (m *MsgGuildUpdateEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateEndpoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateEndpoint.Merge(m, src)
}
func (m *MsgGuildUpdateEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateEndpoint proto.InternalMessageInfo

func (m *MsgGuildUpdateEndpoint) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateEndpoint) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildUpdateEndpoint) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type MsgGuildUpdateJoinInfusionMinimum struct {
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId             string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	JoinInfusionMinimum uint64 `protobuf:"varint,3,opt,name=joinInfusionMinimum,proto3" json:"joinInfusionMinimum,omitempty"`
}

func (m *MsgGuildUpdateJoinInfusionMinimum) Reset()         { *m = MsgGuildUpdateJoinInfusionMinimum{} }
func (m *MsgGuildUpdateJoinInfusionMinimum) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateJoinInfusionMinimum) ProtoMessage()    {}
func (*MsgGuildUpdateJoinInfusionMinimum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{21}
}
func (m *MsgGuildUpdateJoinInfusionMinimum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateJoinInfusionMinimum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateJoinInfusionMinimum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimum.Merge(m, src)
}
func (m *MsgGuildUpdateJoinInfusionMinimum) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateJoinInfusionMinimum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimum proto.InternalMessageInfo

func (m *MsgGuildUpdateJoinInfusionMinimum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateJoinInfusionMinimum) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildUpdateJoinInfusionMinimum) GetJoinInfusionMinimum() uint64 {
	if m != nil {
		return m.JoinInfusionMinimum
	}
	return 0
}

type MsgGuildUpdateJoinInfusionMinimumBypassByRequest struct {
	Creator              string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId              string               `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	GuildJoinBypassLevel GuildJoinBypassLevel `protobuf:"varint,3,opt,name=guildJoinBypassLevel,proto3,enum=structs.structs.GuildJoinBypassLevel" json:"guildJoinBypassLevel,omitempty"`
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) Reset() {
	*m = MsgGuildUpdateJoinInfusionMinimumBypassByRequest{}
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) String() string {
	return proto.CompactTextString(m)
}
func (*MsgGuildUpdateJoinInfusionMinimumBypassByRequest) ProtoMessage() {}
func (*MsgGuildUpdateJoinInfusionMinimumBypassByRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{22}
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByRequest.Merge(m, src)
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByRequest proto.InternalMessageInfo

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) GetGuildJoinBypassLevel() GuildJoinBypassLevel {
	if m != nil {
		return m.GuildJoinBypassLevel
	}
	return GuildJoinBypassLevel_closed
}

type MsgGuildUpdateJoinInfusionMinimumBypassByInvite struct {
	Creator              string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId              string               `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	GuildJoinBypassLevel GuildJoinBypassLevel `protobuf:"varint,3,opt,name=guildJoinBypassLevel,proto3,enum=structs.structs.GuildJoinBypassLevel" json:"guildJoinBypassLevel,omitempty"`
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) Reset() {
	*m = MsgGuildUpdateJoinInfusionMinimumBypassByInvite{}
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) String() string {
	return proto.CompactTextString(m)
}
func (*MsgGuildUpdateJoinInfusionMinimumBypassByInvite) ProtoMessage() {}
func (*MsgGuildUpdateJoinInfusionMinimumBypassByInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{23}
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByInvite.Merge(m, src)
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByInvite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateJoinInfusionMinimumBypassByInvite proto.InternalMessageInfo

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) GetGuildJoinBypassLevel() GuildJoinBypassLevel {
	if m != nil {
		return m.GuildJoinBypassLevel
	}
	return GuildJoinBypassLevel_closed
}

type MsgGuildUpdateResponse struct {
}

func (m *MsgGuildUpdateResponse) Reset()         { *m = MsgGuildUpdateResponse{} }
func (m *MsgGuildUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateResponse) ProtoMessage()    {}
func (*MsgGuildUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{24}
}
func (m *MsgGuildUpdateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateResponse.Merge(m, src)
}
func (m *MsgGuildUpdateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateResponse proto.InternalMessageInfo

type MsgGuildMembershipInvite struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId      string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId     string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SubstationId string `protobuf:"bytes,4,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (m *MsgGuildMembershipInvite) Reset()         { *m = MsgGuildMembershipInvite{} }
func (m *MsgGuildMembershipInvite) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipInvite) ProtoMessage()    {}
func (*MsgGuildMembershipInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{25}
}
func (m *MsgGuildMembershipInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipInvite.Merge(m, src)
}
func (m *MsgGuildMembershipInvite) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipInvite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipInvite proto.InternalMessageInfo

func (m *MsgGuildMembershipInvite) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipInvite) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipInvite) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgGuildMembershipInvite) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

type MsgGuildMembershipInviteApprove struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId      string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId     string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SubstationId string `protobuf:"bytes,4,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (m *MsgGuildMembershipInviteApprove) Reset()         { *m = MsgGuildMembershipInviteApprove{} }
func (m *MsgGuildMembershipInviteApprove) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipInviteApprove) ProtoMessage()    {}
func (*MsgGuildMembershipInviteApprove) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{26}
}
func (m *MsgGuildMembershipInviteApprove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipInviteApprove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipInviteApprove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipInviteApprove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipInviteApprove.Merge(m, src)
}
func (m *MsgGuildMembershipInviteApprove) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipInviteApprove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipInviteApprove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipInviteApprove proto.InternalMessageInfo

func (m *MsgGuildMembershipInviteApprove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipInviteApprove) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipInviteApprove) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgGuildMembershipInviteApprove) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

type MsgGuildMembershipInviteDeny struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId  string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgGuildMembershipInviteDeny) Reset()         { *m = MsgGuildMembershipInviteDeny{} }
func (m *MsgGuildMembershipInviteDeny) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipInviteDeny) ProtoMessage()    {}
func (*MsgGuildMembershipInviteDeny) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{27}
}
func (m *MsgGuildMembershipInviteDeny) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipInviteDeny) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipInviteDeny.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipInviteDeny) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipInviteDeny.Merge(m, src)
}
func (m *MsgGuildMembershipInviteDeny) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipInviteDeny) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipInviteDeny.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipInviteDeny proto.InternalMessageInfo

func (m *MsgGuildMembershipInviteDeny) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipInviteDeny) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipInviteDeny) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgGuildMembershipInviteRevoke struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId  string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgGuildMembershipInviteRevoke) Reset()         { *m = MsgGuildMembershipInviteRevoke{} }
func (m *MsgGuildMembershipInviteRevoke) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipInviteRevoke) ProtoMessage()    {}
func (*MsgGuildMembershipInviteRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{28}
}
func (m *MsgGuildMembershipInviteRevoke) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipInviteRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipInviteRevoke.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipInviteRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipInviteRevoke.Merge(m, src)
}
func (m *MsgGuildMembershipInviteRevoke) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipInviteRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipInviteRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipInviteRevoke proto.InternalMessageInfo

func (m *MsgGuildMembershipInviteRevoke) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipInviteRevoke) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipInviteRevoke) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgGuildMembershipJoin struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId      string   `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId     string   `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SubstationId string   `protobuf:"bytes,4,opt,name=substationId,proto3" json:"substationId,omitempty"`
	InfusionId   []string `protobuf:"bytes,5,rep,name=infusionId,proto3" json:"infusionId,omitempty"`
}

func (m *MsgGuildMembershipJoin) Reset()         { *m = MsgGuildMembershipJoin{} }
func (m *MsgGuildMembershipJoin) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipJoin) ProtoMessage()    {}
func (*MsgGuildMembershipJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{29}
}
func (m *MsgGuildMembershipJoin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipJoin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipJoin.Merge(m, src)
}
func (m *MsgGuildMembershipJoin) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipJoin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipJoin proto.InternalMessageInfo

func (m *MsgGuildMembershipJoin) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipJoin) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipJoin) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgGuildMembershipJoin) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

func (m *MsgGuildMembershipJoin) GetInfusionId() []string {
	if m != nil {
		return m.InfusionId
	}
	return nil
}

type MsgGuildMembershipJoinProxy struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address        string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	SubstationId   string `protobuf:"bytes,3,opt,name=substationId,proto3" json:"substationId,omitempty"`
	ProofPubKey    string `protobuf:"bytes,4,opt,name=proofPubKey,proto3" json:"proofPubKey,omitempty"`
	ProofSignature string `protobuf:"bytes,5,opt,name=proofSignature,proto3" json:"proofSignature,omitempty"`
}

func (m *MsgGuildMembershipJoinProxy) Reset()         { *m = MsgGuildMembershipJoinProxy{} }
func (m *MsgGuildMembershipJoinProxy) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipJoinProxy) ProtoMessage()    {}
func (*MsgGuildMembershipJoinProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{30}
}
func (m *MsgGuildMembershipJoinProxy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipJoinProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipJoinProxy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipJoinProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipJoinProxy.Merge(m, src)
}
func (m *MsgGuildMembershipJoinProxy) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipJoinProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipJoinProxy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipJoinProxy proto.InternalMessageInfo

func (m *MsgGuildMembershipJoinProxy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipJoinProxy) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgGuildMembershipJoinProxy) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

func (m *MsgGuildMembershipJoinProxy) GetProofPubKey() string {
	if m != nil {
		return m.ProofPubKey
	}
	return ""
}

func (m *MsgGuildMembershipJoinProxy) GetProofSignature() string {
	if m != nil {
		return m.ProofSignature
	}
	return ""
}

type MsgGuildMembershipKick struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId  string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgGuildMembershipKick) Reset()         { *m = MsgGuildMembershipKick{} }
func (m *MsgGuildMembershipKick) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipKick) ProtoMessage()    {}
func (*MsgGuildMembershipKick) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{31}
}
func (m *MsgGuildMembershipKick) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipKick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipKick.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipKick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipKick.Merge(m, src)
}
func (m *MsgGuildMembershipKick) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipKick) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipKick.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipKick proto.InternalMessageInfo

func (m *MsgGuildMembershipKick) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipKick) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipKick) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgGuildMembershipRequest struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId      string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId     string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SubstationId string `protobuf:"bytes,4,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (m *MsgGuildMembershipRequest) Reset()         { *m = MsgGuildMembershipRequest{} }
func (m *MsgGuildMembershipRequest) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipRequest) ProtoMessage()    {}
func (*MsgGuildMembershipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{32}
}
func (m *MsgGuildMembershipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipRequest.Merge(m, src)
}
func (m *MsgGuildMembershipRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipRequest proto.InternalMessageInfo

func (m *MsgGuildMembershipRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipRequest) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgGuildMembershipRequest) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

type MsgGuildMembershipRequestApprove struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId      string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId     string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SubstationId string `protobuf:"bytes,4,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (m *MsgGuildMembershipRequestApprove) Reset()         { *m = MsgGuildMembershipRequestApprove{} }
func (m *MsgGuildMembershipRequestApprove) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipRequestApprove) ProtoMessage()    {}
func (*MsgGuildMembershipRequestApprove) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{33}
}
func (m *MsgGuildMembershipRequestApprove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipRequestApprove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipRequestApprove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipRequestApprove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipRequestApprove.Merge(m, src)
}
func (m *MsgGuildMembershipRequestApprove) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipRequestApprove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipRequestApprove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipRequestApprove proto.InternalMessageInfo

func (m *MsgGuildMembershipRequestApprove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipRequestApprove) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipRequestApprove) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgGuildMembershipRequestApprove) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

type MsgGuildMembershipRequestDeny struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId  string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgGuildMembershipRequestDeny) Reset()         { *m = MsgGuildMembershipRequestDeny{} }
func (m *MsgGuildMembershipRequestDeny) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipRequestDeny) ProtoMessage()    {}
func (*MsgGuildMembershipRequestDeny) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{34}
}
func (m *MsgGuildMembershipRequestDeny) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipRequestDeny) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipRequestDeny.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipRequestDeny) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipRequestDeny.Merge(m, src)
}
func (m *MsgGuildMembershipRequestDeny) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipRequestDeny) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipRequestDeny.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipRequestDeny proto.InternalMessageInfo

func (m *MsgGuildMembershipRequestDeny) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipRequestDeny) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipRequestDeny) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgGuildMembershipRequestRevoke struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId  string `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgGuildMembershipRequestRevoke) Reset()         { *m = MsgGuildMembershipRequestRevoke{} }
func (m *MsgGuildMembershipRequestRevoke) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipRequestRevoke) ProtoMessage()    {}
func (*MsgGuildMembershipRequestRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{35}
}
func (m *MsgGuildMembershipRequestRevoke) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipRequestRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipRequestRevoke.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipRequestRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipRequestRevoke.Merge(m, src)
}
func (m *MsgGuildMembershipRequestRevoke) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipRequestRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipRequestRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipRequestRevoke proto.InternalMessageInfo

func (m *MsgGuildMembershipRequestRevoke) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildMembershipRequestRevoke) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *MsgGuildMembershipRequestRevoke) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgGuildMembershipResponse struct {
	GuildMembershipApplication *GuildMembershipApplication `protobuf:"bytes,1,opt,name=guildMembershipApplication,proto3" json:"guildMembershipApplication,omitempty"`
}

func (m *MsgGuildMembershipResponse) Reset()         { *m = MsgGuildMembershipResponse{} }
func (m *MsgGuildMembershipResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGuildMembershipResponse) ProtoMessage()    {}
func (*MsgGuildMembershipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{36}
}
func (m *MsgGuildMembershipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildMembershipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildMembershipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildMembershipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildMembershipResponse.Merge(m, src)
}
func (m *MsgGuildMembershipResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildMembershipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildMembershipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildMembershipResponse proto.InternalMessageInfo

func (m *MsgGuildMembershipResponse) GetGuildMembershipApplication() *GuildMembershipApplication {
	if m != nil {
		return m.GuildMembershipApplication
	}
	return nil
}

type MsgPermissionGrantOnObject struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	PlayerId    string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Permissions uint64 `protobuf:"varint,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgPermissionGrantOnObject) Reset()         { *m = MsgPermissionGrantOnObject{} }
func (m *MsgPermissionGrantOnObject) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionGrantOnObject) ProtoMessage()    {}
func (*MsgPermissionGrantOnObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{37}
}
func (m *MsgPermissionGrantOnObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionGrantOnObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionGrantOnObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionGrantOnObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionGrantOnObject.Merge(m, src)
}
func (m *MsgPermissionGrantOnObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionGrantOnObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionGrantOnObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionGrantOnObject proto.InternalMessageInfo

func (m *MsgPermissionGrantOnObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPermissionGrantOnObject) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *MsgPermissionGrantOnObject) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgPermissionGrantOnObject) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgPermissionGrantOnAddress struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Permissions uint64 `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgPermissionGrantOnAddress) Reset()         { *m = MsgPermissionGrantOnAddress{} }
func (m *MsgPermissionGrantOnAddress) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionGrantOnAddress) ProtoMessage()    {}
func (*MsgPermissionGrantOnAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{38}
}
func (m *MsgPermissionGrantOnAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionGrantOnAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionGrantOnAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionGrantOnAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionGrantOnAddress.Merge(m, src)
}
func (m *MsgPermissionGrantOnAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionGrantOnAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionGrantOnAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionGrantOnAddress proto.InternalMessageInfo

func (m *MsgPermissionGrantOnAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPermissionGrantOnAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgPermissionGrantOnAddress) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgPermissionRevokeOnObject struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	PlayerId    string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Permissions uint64 `protobuf:"varint,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgPermissionRevokeOnObject) Reset()         { *m = MsgPermissionRevokeOnObject{} }
func (m *MsgPermissionRevokeOnObject) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionRevokeOnObject) ProtoMessage()    {}
func (*MsgPermissionRevokeOnObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{39}
}
func (m *MsgPermissionRevokeOnObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionRevokeOnObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionRevokeOnObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionRevokeOnObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionRevokeOnObject.Merge(m, src)
}
func (m *MsgPermissionRevokeOnObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionRevokeOnObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionRevokeOnObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionRevokeOnObject proto.InternalMessageInfo

func (m *MsgPermissionRevokeOnObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPermissionRevokeOnObject) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *MsgPermissionRevokeOnObject) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgPermissionRevokeOnObject) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgPermissionRevokeOnAddress struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Permissions uint64 `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgPermissionRevokeOnAddress) Reset()         { *m = MsgPermissionRevokeOnAddress{} }
func (m *MsgPermissionRevokeOnAddress) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionRevokeOnAddress) ProtoMessage()    {}
func (*MsgPermissionRevokeOnAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{40}
}
func (m *MsgPermissionRevokeOnAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionRevokeOnAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionRevokeOnAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionRevokeOnAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionRevokeOnAddress.Merge(m, src)
}
func (m *MsgPermissionRevokeOnAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionRevokeOnAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionRevokeOnAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionRevokeOnAddress proto.InternalMessageInfo

func (m *MsgPermissionRevokeOnAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPermissionRevokeOnAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgPermissionRevokeOnAddress) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgPermissionSetOnObject struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	PlayerId    string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Permissions uint64 `protobuf:"varint,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgPermissionSetOnObject) Reset()         { *m = MsgPermissionSetOnObject{} }
func (m *MsgPermissionSetOnObject) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionSetOnObject) ProtoMessage()    {}
func (*MsgPermissionSetOnObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{41}
}
func (m *MsgPermissionSetOnObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionSetOnObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionSetOnObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionSetOnObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionSetOnObject.Merge(m, src)
}
func (m *MsgPermissionSetOnObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionSetOnObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionSetOnObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionSetOnObject proto.InternalMessageInfo

func (m *MsgPermissionSetOnObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPermissionSetOnObject) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *MsgPermissionSetOnObject) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgPermissionSetOnObject) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgPermissionSetOnAddress struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Permissions uint64 `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgPermissionSetOnAddress) Reset()         { *m = MsgPermissionSetOnAddress{} }
func (m *MsgPermissionSetOnAddress) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionSetOnAddress) ProtoMessage()    {}
func (*MsgPermissionSetOnAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{42}
}
func (m *MsgPermissionSetOnAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionSetOnAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionSetOnAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionSetOnAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionSetOnAddress.Merge(m, src)
}
func (m *MsgPermissionSetOnAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionSetOnAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionSetOnAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionSetOnAddress proto.InternalMessageInfo

func (m *MsgPermissionSetOnAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPermissionSetOnAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgPermissionSetOnAddress) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgPermissionResponse struct {
}

func (m *MsgPermissionResponse) Reset()         { *m = MsgPermissionResponse{} }
func (m *MsgPermissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPermissionResponse) ProtoMessage()    {}
func (*MsgPermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{43}
}
func (m *MsgPermissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPermissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPermissionResponse.Merge(m, src)
}
func (m *MsgPermissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPermissionResponse proto.InternalMessageInfo

type MsgPlanetExplore struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgPlanetExplore) Reset()         { *m = MsgPlanetExplore{} }
func (m *MsgPlanetExplore) String() string { return proto.CompactTextString(m) }
func (*MsgPlanetExplore) ProtoMessage()    {}
func (*MsgPlanetExplore) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{44}
}
func (m *MsgPlanetExplore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlanetExplore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlanetExplore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlanetExplore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlanetExplore.Merge(m, src)
}
func (m *MsgPlanetExplore) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlanetExplore) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlanetExplore.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlanetExplore proto.InternalMessageInfo

func (m *MsgPlanetExplore) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlanetExplore) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgPlanetExploreResponse struct {
	Planet Planet `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet"`
}

func (m *MsgPlanetExploreResponse) Reset()         { *m = MsgPlanetExploreResponse{} }
func (m *MsgPlanetExploreResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlanetExploreResponse) ProtoMessage()    {}
func (*MsgPlanetExploreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{45}
}
func (m *MsgPlanetExploreResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlanetExploreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlanetExploreResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlanetExploreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlanetExploreResponse.Merge(m, src)
}
func (m *MsgPlanetExploreResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlanetExploreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlanetExploreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlanetExploreResponse proto.InternalMessageInfo

func (m *MsgPlanetExploreResponse) GetPlanet() Planet {
	if m != nil {
		return m.Planet
	}
	return Planet{}
}

type MsgPlanetRaidComplete struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FleetId string `protobuf:"bytes,2,opt,name=fleetId,proto3" json:"fleetId,omitempty"`
	Proof   string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce   string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgPlanetRaidComplete) Reset()         { *m = MsgPlanetRaidComplete{} }
func (m *MsgPlanetRaidComplete) String() string { return proto.CompactTextString(m) }
func (*MsgPlanetRaidComplete) ProtoMessage()    {}
func (*MsgPlanetRaidComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{46}
}
func (m *MsgPlanetRaidComplete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlanetRaidComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlanetRaidComplete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlanetRaidComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlanetRaidComplete.Merge(m, src)
}
func (m *MsgPlanetRaidComplete) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlanetRaidComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlanetRaidComplete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlanetRaidComplete proto.InternalMessageInfo

func (m *MsgPlanetRaidComplete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlanetRaidComplete) GetFleetId() string {
	if m != nil {
		return m.FleetId
	}
	return ""
}

func (m *MsgPlanetRaidComplete) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgPlanetRaidComplete) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgPlanetRaidCompleteResponse struct {
	Fleet     Fleet  `protobuf:"bytes,1,opt,name=fleet,proto3" json:"fleet"`
	Planet    Planet `protobuf:"bytes,2,opt,name=planet,proto3" json:"planet"`
	OreStolen uint64 `protobuf:"varint,3,opt,name=oreStolen,proto3" json:"oreStolen,omitempty"`
}

func (m *MsgPlanetRaidCompleteResponse) Reset()         { *m = MsgPlanetRaidCompleteResponse{} }
func (m *MsgPlanetRaidCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlanetRaidCompleteResponse) ProtoMessage()    {}
func (*MsgPlanetRaidCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{47}
}
func (m *MsgPlanetRaidCompleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlanetRaidCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlanetRaidCompleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlanetRaidCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlanetRaidCompleteResponse.Merge(m, src)
}
func (m *MsgPlanetRaidCompleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlanetRaidCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlanetRaidCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlanetRaidCompleteResponse proto.InternalMessageInfo

func (m *MsgPlanetRaidCompleteResponse) GetFleet() Fleet {
	if m != nil {
		return m.Fleet
	}
	return Fleet{}
}

func (m *MsgPlanetRaidCompleteResponse) GetPlanet() Planet {
	if m != nil {
		return m.Planet
	}
	return Planet{}
}

func (m *MsgPlanetRaidCompleteResponse) GetOreStolen() uint64 {
	if m != nil {
		return m.OreStolen
	}
	return 0
}

type MsgPlayerUpdatePrimaryAddress struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId       string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	PrimaryAddress string `protobuf:"bytes,3,opt,name=primaryAddress,proto3" json:"primaryAddress,omitempty"`
}

func (m *MsgPlayerUpdatePrimaryAddress) Reset()         { *m = MsgPlayerUpdatePrimaryAddress{} }
func (m *MsgPlayerUpdatePrimaryAddress) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerUpdatePrimaryAddress) ProtoMessage()    {}
func (*MsgPlayerUpdatePrimaryAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{48}
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerUpdatePrimaryAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddress.Merge(m, src)
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerUpdatePrimaryAddress proto.InternalMessageInfo

func (m *MsgPlayerUpdatePrimaryAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlayerUpdatePrimaryAddress) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgPlayerUpdatePrimaryAddress) GetPrimaryAddress() string {
	if m != nil {
		return m.PrimaryAddress
	}
	return ""
}

type MsgPlayerUpdatePrimaryAddressResponse struct {
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) Reset()         { *m = MsgPlayerUpdatePrimaryAddressResponse{} }
func (m *MsgPlayerUpdatePrimaryAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerUpdatePrimaryAddressResponse) ProtoMessage()    {}
func (*MsgPlayerUpdatePrimaryAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{49}
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse.Merge(m, src)
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse proto.InternalMessageInfo

type MsgPlayerResume struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgPlayerResume) Reset()         { *m = MsgPlayerResume{} }
func (m *MsgPlayerResume) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerResume) ProtoMessage()    {}
func (*MsgPlayerResume) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{50}
}
func (m *MsgPlayerResume) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerResume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerResume.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerResume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerResume.Merge(m, src)
}
func (m *MsgPlayerResume) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerResume) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerResume.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerResume proto.InternalMessageInfo

func (m *MsgPlayerResume) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlayerResume) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgPlayerResumeResponse struct {
}

func (m *MsgPlayerResumeResponse) Reset()         { *m = MsgPlayerResumeResponse{} }
func (m *MsgPlayerResumeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerResumeResponse) ProtoMessage()    {}
func (*MsgPlayerResumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{51}
}
func (m *MsgPlayerResumeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerResumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerResumeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerResumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerResumeResponse.Merge(m, src)
}
func (m *MsgPlayerResumeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerResumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerResumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerResumeResponse proto.InternalMessageInfo

type MsgStructStatusResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructStatusResponse) Reset()         { *m = MsgStructStatusResponse{} }
func (m *MsgStructStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructStatusResponse) ProtoMessage()    {}
func (*MsgStructStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{52}
}
func (m *MsgStructStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructStatusResponse.Merge(m, src)
}
func (m *MsgStructStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructStatusResponse proto.InternalMessageInfo

func (m *MsgStructStatusResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructActivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructActivate) Reset()         { *m = MsgStructActivate{} }
func (m *MsgStructActivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructActivate) ProtoMessage()    {}
func (*MsgStructActivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{53}
}
func (m *MsgStructActivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructActivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructActivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructActivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructActivate.Merge(m, src)
}
func (m *MsgStructActivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructActivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructActivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructActivate proto.InternalMessageInfo

func (m *MsgStructActivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructActivate) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

type MsgStructDeactivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructDeactivate) Reset()         { *m = MsgStructDeactivate{} }
func (m *MsgStructDeactivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructDeactivate) ProtoMessage()    {}
func (*MsgStructDeactivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{54}
}
func (m *MsgStructDeactivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructDeactivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructDeactivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructDeactivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructDeactivate.Merge(m, src)
}
func (m *MsgStructDeactivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructDeactivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructDeactivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructDeactivate proto.InternalMessageInfo

func (m *MsgStructDeactivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructDeactivate) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

type MsgStructBuildInitiate struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId     string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	StructTypeId uint64 `protobuf:"varint,3,opt,name=structTypeId,proto3" json:"structTypeId,omitempty"`
	// objectType locationType = 4;
	OperatingAmbit Ambit  `protobuf:"varint,4,opt,name=operatingAmbit,proto3,enum=structs.structs.Ambit" json:"operatingAmbit,omitempty"`
	Slot           uint64 `protobuf:"varint,5,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (m *MsgStructBuildInitiate) Reset()         { *m = MsgStructBuildInitiate{} }
func (m *MsgStructBuildInitiate) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildInitiate) ProtoMessage()    {}
func (*MsgStructBuildInitiate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{55}
}
func (m *MsgStructBuildInitiate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildInitiate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildInitiate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildInitiate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildInitiate.Merge(m, src)
}
func (m *MsgStructBuildInitiate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildInitiate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildInitiate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildInitiate proto.InternalMessageInfo

func (m *MsgStructBuildInitiate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructBuildInitiate) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MsgStructBuildInitiate) GetStructTypeId() uint64 {
	if m != nil {
		return m.StructTypeId
	}
	return 0
}

func (m *MsgStructBuildInitiate) GetOperatingAmbit() Ambit {
	if m != nil {
		return m.OperatingAmbit
	}
	return Ambit_none
}

func (m *MsgStructBuildInitiate) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type MsgStructBuildComplete struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStructBuildComplete) Reset()         { *m = MsgStructBuildComplete{} }
func (m *MsgStructBuildComplete) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildComplete) ProtoMessage()    {}
func (*MsgStructBuildComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{56}
}
func (m *MsgStructBuildComplete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildComplete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildComplete.Merge(m, src)
}
func (m *MsgStructBuildComplete) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildComplete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildComplete proto.InternalMessageInfo

func (m *MsgStructBuildComplete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructBuildComplete) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructBuildComplete) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructBuildComplete) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgStructBuildCancel struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructBuildCancel) Reset()         { *m = MsgStructBuildCancel{} }
func (m *MsgStructBuildCancel) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildCancel) ProtoMessage()    {}
func (*MsgStructBuildCancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{57}
}
func (m *MsgStructBuildCancel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildCancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildCancel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildCancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildCancel.Merge(m, src)
}
func (m *MsgStructBuildCancel) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildCancel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildCancel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildCancel proto.InternalMessageInfo

func (m *MsgStructBuildCancel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructBuildCancel) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

type MsgStructBuildCompleteAndStash struct {
	Creator              string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId             string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof                string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce                string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	StorageDestinationId string `protobuf:"bytes,5,opt,name=storageDestinationId,proto3" json:"storageDestinationId,omitempty"`
	StorageAmbit         Ambit  `protobuf:"varint,6,opt,name=storageAmbit,proto3,enum=structs.structs.Ambit" json:"storageAmbit,omitempty"`
	StorageSlot          uint64 `protobuf:"varint,7,opt,name=storageSlot,proto3" json:"storageSlot,omitempty"`
}

func (m *MsgStructBuildCompleteAndStash) Reset()         { *m = MsgStructBuildCompleteAndStash{} }
func (m *MsgStructBuildCompleteAndStash) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildCompleteAndStash) ProtoMessage()    {}
func (*MsgStructBuildCompleteAndStash) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{58}
}
func (m *MsgStructBuildCompleteAndStash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildCompleteAndStash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildCompleteAndStash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildCompleteAndStash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildCompleteAndStash.Merge(m, src)
}
func (m *MsgStructBuildCompleteAndStash) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildCompleteAndStash) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildCompleteAndStash.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildCompleteAndStash proto.InternalMessageInfo

func (m *MsgStructBuildCompleteAndStash) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructBuildCompleteAndStash) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructBuildCompleteAndStash) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructBuildCompleteAndStash) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *MsgStructBuildCompleteAndStash) GetStorageDestinationId() string {
	if m != nil {
		return m.StorageDestinationId
	}
	return ""
}

func (m *MsgStructBuildCompleteAndStash) GetStorageAmbit() Ambit {
	if m != nil {
		return m.StorageAmbit
	}
	return Ambit_none
}

func (m *MsgStructBuildCompleteAndStash) GetStorageSlot() uint64 {
	if m != nil {
		return m.StorageSlot
	}
	return 0
}

type MsgStructDefenseSet struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DefenderStructId  string `protobuf:"bytes,2,opt,name=defenderStructId,proto3" json:"defenderStructId,omitempty"`
	ProtectedStructId string `protobuf:"bytes,3,opt,name=protectedStructId,proto3" json:"protectedStructId,omitempty"`
}

func (m *MsgStructDefenseSet) Reset()         { *m = MsgStructDefenseSet{} }
func (m *MsgStructDefenseSet) String() string { return proto.CompactTextString(m) }
func (*MsgStructDefenseSet) ProtoMessage()    {}
func (*MsgStructDefenseSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{59}
}
func (m *MsgStructDefenseSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructDefenseSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructDefenseSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructDefenseSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructDefenseSet.Merge(m, src)
}
func (m *MsgStructDefenseSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructDefenseSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructDefenseSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructDefenseSet proto.InternalMessageInfo

func (m *MsgStructDefenseSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructDefenseSet) GetDefenderStructId() string {
	if m != nil {
		return m.DefenderStructId
	}
	return ""
}

func (m *MsgStructDefenseSet) GetProtectedStructId() string {
	if m != nil {
		return m.ProtectedStructId
	}
	return ""
}

type MsgStructDefenseClear struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DefenderStructId string `protobuf:"bytes,2,opt,name=defenderStructId,proto3" json:"defenderStructId,omitempty"`
}

func (m *MsgStructDefenseClear) Reset()         { *m = MsgStructDefenseClear{} }
func (m *MsgStructDefenseClear) String() string { return proto.CompactTextString(m) }
func (*MsgStructDefenseClear) ProtoMessage()    {}
func (*MsgStructDefenseClear) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{60}
}
func (m *MsgStructDefenseClear) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructDefenseClear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructDefenseClear.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructDefenseClear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructDefenseClear.Merge(m, src)
}
func (m *MsgStructDefenseClear) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructDefenseClear) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructDefenseClear.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructDefenseClear proto.InternalMessageInfo

func (m *MsgStructDefenseClear) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructDefenseClear) GetDefenderStructId() string {
	if m != nil {
		return m.DefenderStructId
	}
	return ""
}

type MsgStructMove struct {
	Creator      string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId     string     `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	LocationType ObjectType `protobuf:"varint,4,opt,name=locationType,proto3,enum=structs.structs.ObjectType" json:"locationType,omitempty"`
	Ambit        Ambit      `protobuf:"varint,5,opt,name=ambit,proto3,enum=structs.structs.Ambit" json:"ambit,omitempty"`
	Slot         uint64     `protobuf:"varint,6,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (m *MsgStructMove) Reset()         { *m = MsgStructMove{} }
func (m *MsgStructMove) String() string { return proto.CompactTextString(m) }
func (*MsgStructMove) ProtoMessage()    {}
func (*MsgStructMove) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{61}
}
func (m *MsgStructMove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMove.Merge(m, src)
}
func (m *MsgStructMove) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMove proto.InternalMessageInfo

func (m *MsgStructMove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructMove) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructMove) GetLocationType() ObjectType {
	if m != nil {
		return m.LocationType
	}
	return ObjectType_guild
}

func (m *MsgStructMove) GetAmbit() Ambit {
	if m != nil {
		return m.Ambit
	}
	return Ambit_none
}

func (m *MsgStructMove) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type MsgStructAttack struct {
	Creator           string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OperatingStructId string   `protobuf:"bytes,2,opt,name=operatingStructId,proto3" json:"operatingStructId,omitempty"`
	TargetStructId    []string `protobuf:"bytes,3,rep,name=targetStructId,proto3" json:"targetStructId,omitempty"`
	WeaponSystem      string   `protobuf:"bytes,4,opt,name=weaponSystem,proto3" json:"weaponSystem,omitempty"`
}

func (m *MsgStructAttack) Reset()         { *m = MsgStructAttack{} }
func (m *MsgStructAttack) String() string { return proto.CompactTextString(m) }
func (*MsgStructAttack) ProtoMessage()    {}
func (*MsgStructAttack) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{62}
}
func (m *MsgStructAttack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructAttack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructAttack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructAttack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructAttack.Merge(m, src)
}
func (m *MsgStructAttack) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructAttack) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructAttack.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructAttack proto.InternalMessageInfo

func (m *MsgStructAttack) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructAttack) GetOperatingStructId() string {
	if m != nil {
		return m.OperatingStructId
	}
	return ""
}

func (m *MsgStructAttack) GetTargetStructId() []string {
	if m != nil {
		return m.TargetStructId
	}
	return nil
}

func (m *MsgStructAttack) GetWeaponSystem() string {
	if m != nil {
		return m.WeaponSystem
	}
	return ""
}

type MsgStructAttackResponse struct {
}

func (m *MsgStructAttackResponse) Reset()         { *m = MsgStructAttackResponse{} }
func (m *MsgStructAttackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructAttackResponse) ProtoMessage()    {}
func (*MsgStructAttackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{63}
}
func (m *MsgStructAttackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructAttackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructAttackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructAttackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructAttackResponse.Merge(m, src)
}
func (m *MsgStructAttackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructAttackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructAttackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructAttackResponse proto.InternalMessageInfo

type MsgStructStealthActivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructStealthActivate) Reset()         { *m = MsgStructStealthActivate{} }
func (m *MsgStructStealthActivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructStealthActivate) ProtoMessage()    {}
func (*MsgStructStealthActivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{64}
}
func (m *MsgStructStealthActivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructStealthActivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructStealthActivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructStealthActivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructStealthActivate.Merge(m, src)
}
func (m *MsgStructStealthActivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructStealthActivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructStealthActivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructStealthActivate proto.InternalMessageInfo

func (m *MsgStructStealthActivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructStealthActivate) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

type MsgStructStealthDeactivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructStealthDeactivate) Reset()         { *m = MsgStructStealthDeactivate{} }
func (m *MsgStructStealthDeactivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructStealthDeactivate) ProtoMessage()    {}
func (*MsgStructStealthDeactivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{65}
}
func (m *MsgStructStealthDeactivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructStealthDeactivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructStealthDeactivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructStealthDeactivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructStealthDeactivate.Merge(m, src)
}
func (m *MsgStructStealthDeactivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructStealthDeactivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructStealthDeactivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructStealthDeactivate proto.InternalMessageInfo

func (m *MsgStructStealthDeactivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructStealthDeactivate) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

type MsgStructGeneratorInfuse struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId     string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	InfuseAmount string `protobuf:"bytes,3,opt,name=infuseAmount,proto3" json:"infuseAmount,omitempty"`
}

func (m *MsgStructGeneratorInfuse) Reset()         { *m = MsgStructGeneratorInfuse{} }
func (m *MsgStructGeneratorInfuse) String() string { return proto.CompactTextString(m) }
func (*MsgStructGeneratorInfuse) ProtoMessage()    {}
func (*MsgStructGeneratorInfuse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{66}
}
func (m *MsgStructGeneratorInfuse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructGeneratorInfuse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructGeneratorInfuse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructGeneratorInfuse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructGeneratorInfuse.Merge(m, src)
}
func (m *MsgStructGeneratorInfuse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructGeneratorInfuse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructGeneratorInfuse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructGeneratorInfuse proto.InternalMessageInfo

func (m *MsgStructGeneratorInfuse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructGeneratorInfuse) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructGeneratorInfuse) GetInfuseAmount() string {
	if m != nil {
		return m.InfuseAmount
	}
	return ""
}

type MsgStructGeneratorStatusResponse struct {
}

func (m *MsgStructGeneratorStatusResponse) Reset()         { *m = MsgStructGeneratorStatusResponse{} }
func (m *MsgStructGeneratorStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructGeneratorStatusResponse) ProtoMessage()    {}
func (*MsgStructGeneratorStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{67}
}
func (m *MsgStructGeneratorStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructGeneratorStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructGeneratorStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructGeneratorStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructGeneratorStatusResponse.Merge(m, src)
}
func (m *MsgStructGeneratorStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructGeneratorStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructGeneratorStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructGeneratorStatusResponse proto.InternalMessageInfo

type MsgStructOreMinerComplete struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStructOreMinerComplete) Reset()         { *m = MsgStructOreMinerComplete{} }
func (m *MsgStructOreMinerComplete) String() string { return proto.CompactTextString(m) }
func (*MsgStructOreMinerComplete) ProtoMessage()    {}
func (*MsgStructOreMinerComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{68}
}
func (m *MsgStructOreMinerComplete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructOreMinerComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructOreMinerComplete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructOreMinerComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructOreMinerComplete.Merge(m, src)
}
func (m *MsgStructOreMinerComplete) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructOreMinerComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructOreMinerComplete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructOreMinerComplete proto.InternalMessageInfo

func (m *MsgStructOreMinerComplete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructOreMinerComplete) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructOreMinerComplete) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructOreMinerComplete) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgStructOreMinerStatusResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructOreMinerStatusResponse) Reset()         { *m = MsgStructOreMinerStatusResponse{} }
func (m *MsgStructOreMinerStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructOreMinerStatusResponse) ProtoMessage()    {}
func (*MsgStructOreMinerStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{69}
}
func (m *MsgStructOreMinerStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructOreMinerStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructOreMinerStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructOreMinerStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructOreMinerStatusResponse.Merge(m, src)
}
func (m *MsgStructOreMinerStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructOreMinerStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructOreMinerStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructOreMinerStatusResponse proto.InternalMessageInfo

func (m *MsgStructOreMinerStatusResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructOreRefineryComplete struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStructOreRefineryComplete) Reset()         { *m = MsgStructOreRefineryComplete{} }
func (m *MsgStructOreRefineryComplete) String() string { return proto.CompactTextString(m) }
func (*MsgStructOreRefineryComplete) ProtoMessage()    {}
func (*MsgStructOreRefineryComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{70}
}
func (m *MsgStructOreRefineryComplete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructOreRefineryComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructOreRefineryComplete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructOreRefineryComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructOreRefineryComplete.Merge(m, src)
}
func (m *MsgStructOreRefineryComplete) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructOreRefineryComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructOreRefineryComplete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructOreRefineryComplete proto.InternalMessageInfo

func (m *MsgStructOreRefineryComplete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructOreRefineryComplete) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructOreRefineryComplete) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructOreRefineryComplete) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgStructOreRefineryStatusResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructOreRefineryStatusResponse) Reset()         { *m = MsgStructOreRefineryStatusResponse{} }
func (m *MsgStructOreRefineryStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructOreRefineryStatusResponse) ProtoMessage()    {}
func (*MsgStructOreRefineryStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{71}
}
func (m *MsgStructOreRefineryStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructOreRefineryStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructOreRefineryStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructOreRefineryStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructOreRefineryStatusResponse.Merge(m, src)
}
func (m *MsgStructOreRefineryStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructOreRefineryStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructOreRefineryStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructOreRefineryStatusResponse proto.InternalMessageInfo

func (m *MsgStructOreRefineryStatusResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructStorageStash struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId   string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	LocationId string `protobuf:"bytes,3,opt,name=locationId,proto3" json:"locationId,omitempty"`
	Ambit      Ambit  `protobuf:"varint,4,opt,name=ambit,proto3,enum=structs.structs.Ambit" json:"ambit,omitempty"`
	Slot       uint64 `protobuf:"varint,5,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (m *MsgStructStorageStash) Reset()         { *m = MsgStructStorageStash{} }
func (m *MsgStructStorageStash) String() string { return proto.CompactTextString(m) }
func (*MsgStructStorageStash) ProtoMessage()    {}
func (*MsgStructStorageStash) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{72}
}
func (m *MsgStructStorageStash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructStorageStash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructStorageStash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructStorageStash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructStorageStash.Merge(m, src)
}
func (m *MsgStructStorageStash) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructStorageStash) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructStorageStash.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructStorageStash proto.InternalMessageInfo

func (m *MsgStructStorageStash) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructStorageStash) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructStorageStash) GetLocationId() string {
	if m != nil {
		return m.LocationId
	}
	return ""
}

func (m *MsgStructStorageStash) GetAmbit() Ambit {
	if m != nil {
		return m.Ambit
	}
	return Ambit_none
}

func (m *MsgStructStorageStash) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type MsgStructStorageRecall struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId   string `protobuf:"bytes,2,opt,name=structId,proto3" json:"structId,omitempty"`
	LocationId string `protobuf:"bytes,3,opt,name=locationId,proto3" json:"locationId,omitempty"`
	Ambit      Ambit  `protobuf:"varint,4,opt,name=ambit,proto3,enum=structs.structs.Ambit" json:"ambit,omitempty"`
	Slot       uint64 `protobuf:"varint,5,opt,name=slot,proto3" json:"slot,omitempty"`
	Activate   bool   `protobuf:"varint,6,opt,name=activate,proto3" json:"activate,omitempty"`
}

func (m *MsgStructStorageRecall) Reset()         { *m = MsgStructStorageRecall{} }
func (m *MsgStructStorageRecall) String() string { return proto.CompactTextString(m) }
func (*MsgStructStorageRecall) ProtoMessage()    {}
func (*MsgStructStorageRecall) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{73}
}
func (m *MsgStructStorageRecall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructStorageRecall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructStorageRecall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructStorageRecall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructStorageRecall.Merge(m, src)
}
func (m *MsgStructStorageRecall) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructStorageRecall) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructStorageRecall.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructStorageRecall proto.InternalMessageInfo

func (m *MsgStructStorageRecall) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructStorageRecall) GetStructId() string {
	if m != nil {
		return m.StructId
	}
	return ""
}

func (m *MsgStructStorageRecall) GetLocationId() string {
	if m != nil {
		return m.LocationId
	}
	return ""
}

func (m *MsgStructStorageRecall) GetAmbit() Ambit {
	if m != nil {
		return m.Ambit
	}
	return Ambit_none
}

func (m *MsgStructStorageRecall) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *MsgStructStorageRecall) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

type MsgSubstationCreate struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner        string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	AllocationId string `protobuf:"bytes,3,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgSubstationCreate) Reset()         { *m = MsgSubstationCreate{} }
func (m *MsgSubstationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationCreate) ProtoMessage()    {}
func (*MsgSubstationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{74}
}
func (m *MsgSubstationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationCreate.Merge(m, src)
}
func (m *MsgSubstationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationCreate proto.InternalMessageInfo

func (m *MsgSubstationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgSubstationCreate) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgSubstationCreateResponse struct {
	SubstationId string `protobuf:"bytes,1,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (m *MsgSubstationCreateResponse) Reset()         { *m = MsgSubstationCreateResponse{} }
func (m *MsgSubstationCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationCreateResponse) ProtoMessage()    {}
func (*MsgSubstationCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{75}
}
func (m *MsgSubstationCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationCreateResponse.Merge(m, src)
}
func (m *MsgSubstationCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationCreateResponse proto.InternalMessageInfo

func (m *MsgSubstationCreateResponse) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

type MsgSubstationDelete struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubstationId          string `protobuf:"bytes,2,opt,name=substationId,proto3" json:"substationId,omitempty"`
	MigrationSubstationId string `protobuf:"bytes,3,opt,name=migrationSubstationId,proto3" json:"migrationSubstationId,omitempty"`
}

func (m *MsgSubstationDelete) Reset()         { *m = MsgSubstationDelete{} }
func (m *MsgSubstationDelete) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationDelete) ProtoMessage()    {}
func (*MsgSubstationDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{76}
}
func (m *MsgSubstationDelete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationDelete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationDelete.Merge(m, src)
}
func (m *MsgSubstationDelete) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationDelete proto.InternalMessageInfo

func (m *MsgSubstationDelete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationDelete) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

func (m *MsgSubstationDelete) GetMigrationSubstationId() string {
	if m != nil {
		return m.MigrationSubstationId
	}
	return ""
}

type MsgSubstationDeleteResponse struct {
}

func (m *MsgSubstationDeleteResponse) Reset()         { *m = MsgSubstationDeleteResponse{} }
func (m *MsgSubstationDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationDeleteResponse) ProtoMessage()    {}
func (*MsgSubstationDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{77}
}
func (m *MsgSubstationDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationDeleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationDeleteResponse.Merge(m, src)
}
func (m *MsgSubstationDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationDeleteResponse proto.InternalMessageInfo

type MsgSubstationAllocationConnect struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId  string `protobuf:"bytes,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
	DestinationId string `protobuf:"bytes,3,opt,name=destinationId,proto3" json:"destinationId,omitempty"`
}

func (m *MsgSubstationAllocationConnect) Reset()         { *m = MsgSubstationAllocationConnect{} }
func (m *MsgSubstationAllocationConnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationConnect) ProtoMessage()    {}
func (*MsgSubstationAllocationConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{78}
}
func (m *MsgSubstationAllocationConnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationConnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationConnect.Merge(m, src)
}
func (m *MsgSubstationAllocationConnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationConnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationConnect proto.InternalMessageInfo

func (m *MsgSubstationAllocationConnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationAllocationConnect) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

func (m *MsgSubstationAllocationConnect) GetDestinationId() string {
	if m != nil {
		return m.DestinationId
	}
	return ""
}

type MsgSubstationAllocationConnectResponse struct {
}

func (m *MsgSubstationAllocationConnectResponse) Reset() {
	*m = MsgSubstationAllocationConnectResponse{}
}
func (m *MsgSubstationAllocationConnectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationConnectResponse) ProtoMessage()    {}
func (*MsgSubstationAllocationConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{79}
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationConnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationConnectResponse.Merge(m, src)
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationConnectResponse proto.InternalMessageInfo

type MsgSubstationAllocationDisconnect struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId string `protobuf:"bytes,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgSubstationAllocationDisconnect) Reset()         { *m = MsgSubstationAllocationDisconnect{} }
func (m *MsgSubstationAllocationDisconnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationDisconnect) ProtoMessage()    {}
func (*MsgSubstationAllocationDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{80}
}
func (m *MsgSubstationAllocationDisconnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationDisconnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationDisconnect.Merge(m, src)
}
func (m *MsgSubstationAllocationDisconnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationDisconnect proto.InternalMessageInfo

func (m *MsgSubstationAllocationDisconnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationAllocationDisconnect) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

type MsgSubstationAllocationDisconnectResponse struct {
}

func (m *MsgSubstationAllocationDisconnectResponse) Reset() {
	*m = MsgSubstationAllocationDisconnectResponse{}
}
func (m *MsgSubstationAllocationDisconnectResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgSubstationAllocationDisconnectResponse) ProtoMessage() {}
func (*MsgSubstationAllocationDisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{81}
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationDisconnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationDisconnectResponse.Merge(m, src)
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationDisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationDisconnectResponse proto.InternalMessageInfo

type MsgSubstationPlayerConnect struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubstationId string `protobuf:"bytes,2,opt,name=substationId,proto3" json:"substationId,omitempty"`
	PlayerId     string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSubstationPlayerConnect) Reset()         { *m = MsgSubstationPlayerConnect{} }
func (m *MsgSubstationPlayerConnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerConnect) ProtoMessage()    {}
func (*MsgSubstationPlayerConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{82}
}
func (m *MsgSubstationPlayerConnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerConnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerConnect.Merge(m, src)
}
func (m *MsgSubstationPlayerConnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerConnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerConnect proto.InternalMessageInfo

func (m *MsgSubstationPlayerConnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationPlayerConnect) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

func (m *MsgSubstationPlayerConnect) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgSubstationPlayerConnectResponse struct {
}

func (m *MsgSubstationPlayerConnectResponse) Reset()         { *m = MsgSubstationPlayerConnectResponse{} }
func (m *MsgSubstationPlayerConnectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerConnectResponse) ProtoMessage()    {}
func (*MsgSubstationPlayerConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{83}
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerConnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerConnectResponse.Merge(m, src)
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerConnectResponse proto.InternalMessageInfo

type MsgSubstationPlayerDisconnect struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSubstationPlayerDisconnect) Reset()         { *m = MsgSubstationPlayerDisconnect{} }
func (m *MsgSubstationPlayerDisconnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerDisconnect) ProtoMessage()    {}
func (*MsgSubstationPlayerDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{84}
}
func (m *MsgSubstationPlayerDisconnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerDisconnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerDisconnect.Merge(m, src)
}
func (m *MsgSubstationPlayerDisconnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerDisconnect proto.InternalMessageInfo

func (m *MsgSubstationPlayerDisconnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationPlayerDisconnect) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type MsgSubstationPlayerDisconnectResponse struct {
}

func (m *MsgSubstationPlayerDisconnectResponse) Reset()         { *m = MsgSubstationPlayerDisconnectResponse{} }
func (m *MsgSubstationPlayerDisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerDisconnectResponse) ProtoMessage()    {}
func (*MsgSubstationPlayerDisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{85}
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerDisconnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerDisconnectResponse.Merge(m, src)
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerDisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerDisconnectResponse proto.InternalMessageInfo

type MsgSubstationPlayerMigrate struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubstationId string   `protobuf:"bytes,2,opt,name=substationId,proto3" json:"substationId,omitempty"`
	PlayerId     []string `protobuf:"bytes,3,rep,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSubstationPlayerMigrate) Reset()         { *m = MsgSubstationPlayerMigrate{} }
func (m *MsgSubstationPlayerMigrate) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerMigrate) ProtoMessage()    {}
func (*MsgSubstationPlayerMigrate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{86}
}
func (m *MsgSubstationPlayerMigrate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerMigrate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerMigrate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerMigrate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerMigrate.Merge(m, src)
}
func (m *MsgSubstationPlayerMigrate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerMigrate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerMigrate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerMigrate proto.InternalMessageInfo

func (m *MsgSubstationPlayerMigrate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationPlayerMigrate) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

func (m *MsgSubstationPlayerMigrate) GetPlayerId() []string {
	if m != nil {
		return m.PlayerId
	}
	return nil
}

type MsgSubstationPlayerMigrateResponse struct {
}

func (m *MsgSubstationPlayerMigrateResponse) Reset()         { *m = MsgSubstationPlayerMigrateResponse{} }
func (m *MsgSubstationPlayerMigrateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerMigrateResponse) ProtoMessage()    {}
func (*MsgSubstationPlayerMigrateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{87}
}
func (m *MsgSubstationPlayerMigrateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerMigrateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerMigrateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerMigrateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerMigrateResponse.Merge(m, src)
}
func (m *MsgSubstationPlayerMigrateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerMigrateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerMigrateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerMigrateResponse proto.InternalMessageInfo

type MsgAgreementOpen struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	Duration   uint64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Capacity   uint64 `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (m *MsgAgreementOpen) Reset()         { *m = MsgAgreementOpen{} }
func (m *MsgAgreementOpen) String() string { return proto.CompactTextString(m) }
func (*MsgAgreementOpen) ProtoMessage()    {}
func (*MsgAgreementOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{88}
}
func (m *MsgAgreementOpen) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAgreementOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAgreementOpen.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAgreementOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAgreementOpen.Merge(m, src)
}
func (m *MsgAgreementOpen) XXX_Size() int {
	return m.Size()
}
func (m *MsgAgreementOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAgreementOpen.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAgreementOpen proto.InternalMessageInfo

func (m *MsgAgreementOpen) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAgreementOpen) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgAgreementOpen) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MsgAgreementOpen) GetCapacity() uint64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type MsgAgreementClose struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
}

func (m *MsgAgreementClose) Reset()         { *m = MsgAgreementClose{} }
func (m *MsgAgreementClose) String() string { return proto.CompactTextString(m) }
func (*MsgAgreementClose) ProtoMessage()    {}
func (*MsgAgreementClose) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{89}
}
func (m *MsgAgreementClose) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAgreementClose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAgreementClose.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAgreementClose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAgreementClose.Merge(m, src)
}
func (m *MsgAgreementClose) XXX_Size() int {
	return m.Size()
}
func (m *MsgAgreementClose) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAgreementClose.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAgreementClose proto.InternalMessageInfo

func (m *MsgAgreementClose) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAgreementClose) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

type MsgAgreementCapacityIncrease struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AgreementId      string `protobuf:"bytes,2,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	CapacityIncrease uint64 `protobuf:"varint,3,opt,name=capacityIncrease,proto3" json:"capacityIncrease,omitempty"`
}

func (m *MsgAgreementCapacityIncrease) Reset()         { *m = MsgAgreementCapacityIncrease{} }
func (m *MsgAgreementCapacityIncrease) String() string { return proto.CompactTextString(m) }
func (*MsgAgreementCapacityIncrease) ProtoMessage()    {}
func (*MsgAgreementCapacityIncrease) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{90}
}
func (m *MsgAgreementCapacityIncrease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAgreementCapacityIncrease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAgreementCapacityIncrease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAgreementCapacityIncrease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAgreementCapacityIncrease.Merge(m, src)
}
func (m *MsgAgreementCapacityIncrease) XXX_Size() int {
	return m.Size()
}
func (m *MsgAgreementCapacityIncrease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAgreementCapacityIncrease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAgreementCapacityIncrease proto.InternalMessageInfo

func (m *MsgAgreementCapacityIncrease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAgreementCapacityIncrease) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *MsgAgreementCapacityIncrease) GetCapacityIncrease() uint64 {
	if m != nil {
		return m.CapacityIncrease
	}
	return 0
}

type MsgAgreementCapacityDecrease struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AgreementId      string `protobuf:"bytes,2,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	CapacityDecrease uint64 `protobuf:"varint,3,opt,name=capacityDecrease,proto3" json:"capacityDecrease,omitempty"`
}

func (m *MsgAgreementCapacityDecrease) Reset()         { *m = MsgAgreementCapacityDecrease{} }
func (m *MsgAgreementCapacityDecrease) String() string { return proto.CompactTextString(m) }
func (*MsgAgreementCapacityDecrease) ProtoMessage()    {}
func (*MsgAgreementCapacityDecrease) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{91}
}
func (m *MsgAgreementCapacityDecrease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAgreementCapacityDecrease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAgreementCapacityDecrease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAgreementCapacityDecrease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAgreementCapacityDecrease.Merge(m, src)
}
func (m *MsgAgreementCapacityDecrease) XXX_Size() int {
	return m.Size()
}
func (m *MsgAgreementCapacityDecrease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAgreementCapacityDecrease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAgreementCapacityDecrease proto.InternalMessageInfo

func (m *MsgAgreementCapacityDecrease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAgreementCapacityDecrease) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *MsgAgreementCapacityDecrease) GetCapacityDecrease() uint64 {
	if m != nil {
		return m.CapacityDecrease
	}
	return 0
}

type MsgAgreementDurationIncrease struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AgreementId      string `protobuf:"bytes,2,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	DurationIncrease uint64 `protobuf:"varint,3,opt,name=durationIncrease,proto3" json:"durationIncrease,omitempty"`
}

func (m *MsgAgreementDurationIncrease) Reset()         { *m = MsgAgreementDurationIncrease{} }
func (m *MsgAgreementDurationIncrease) String() string { return proto.CompactTextString(m) }
func (*MsgAgreementDurationIncrease) ProtoMessage()    {}
func (*MsgAgreementDurationIncrease) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{92}
}
func (m *MsgAgreementDurationIncrease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAgreementDurationIncrease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAgreementDurationIncrease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAgreementDurationIncrease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAgreementDurationIncrease.Merge(m, src)
}
func (m *MsgAgreementDurationIncrease) XXX_Size() int {
	return m.Size()
}
func (m *MsgAgreementDurationIncrease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAgreementDurationIncrease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAgreementDurationIncrease proto.InternalMessageInfo

func (m *MsgAgreementDurationIncrease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAgreementDurationIncrease) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *MsgAgreementDurationIncrease) GetDurationIncrease() uint64 {
	if m != nil {
		return m.DurationIncrease
	}
	return 0
}

type MsgAgreementResponse struct {
}

func (m *MsgAgreementResponse) Reset()         { *m = MsgAgreementResponse{} }
func (m *MsgAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAgreementResponse) ProtoMessage()    {}
func (*MsgAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{93}
}
func (m *MsgAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAgreementResponse.Merge(m, src)
}
func (m *MsgAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAgreementResponse proto.InternalMessageInfo

type MsgProviderCreate struct {
	Creator                     string                      `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubstationId                string                      `protobuf:"bytes,2,opt,name=substationId,proto3" json:"substationId,omitempty"`
	Rate                        types.Coin                  `protobuf:"bytes,3,opt,name=rate,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"rate"`
	AccessPolicy                ProviderAccessPolicy        `protobuf:"varint,4,opt,name=accessPolicy,proto3,enum=structs.structs.ProviderAccessPolicy" json:"accessPolicy,omitempty"`
	ProviderCancellationPenalty cosmossdk_io_math.LegacyDec `protobuf:"bytes,5,opt,name=providerCancellationPenalty,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"providerCancellationPenalty"`
	ConsumerCancellationPenalty cosmossdk_io_math.LegacyDec `protobuf:"bytes,6,opt,name=consumerCancellationPenalty,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"consumerCancellationPenalty"`
	CapacityMinimum             uint64                      `protobuf:"varint,7,opt,name=capacityMinimum,proto3" json:"capacityMinimum,omitempty"`
	CapacityMaximum             uint64                      `protobuf:"varint,8,opt,name=capacityMaximum,proto3" json:"capacityMaximum,omitempty"`
	DurationMinimum             uint64                      `protobuf:"varint,9,opt,name=durationMinimum,proto3" json:"durationMinimum,omitempty"`
	DurationMaximum             uint64                      `protobuf:"varint,10,opt,name=durationMaximum,proto3" json:"durationMaximum,omitempty"`
}

func (m *MsgProviderCreate) Reset()         { *m = MsgProviderCreate{} }
func (m *MsgProviderCreate) String() string { return proto.CompactTextString(m) }
func (*MsgProviderCreate) ProtoMessage()    {}
func (*MsgProviderCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{94}
}
func (m *MsgProviderCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderCreate.Merge(m, src)
}
func (m *MsgProviderCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderCreate proto.InternalMessageInfo

func (m *MsgProviderCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderCreate) GetSubstationId() string {
	if m != nil {
		return m.SubstationId
	}
	return ""
}

func (m *MsgProviderCreate) GetRate() types.Coin {
	if m != nil {
		return m.Rate
	}
	return types.Coin{}
}

func (m *MsgProviderCreate) GetAccessPolicy() ProviderAccessPolicy {
	if m != nil {
		return m.AccessPolicy
	}
	return ProviderAccessPolicy_openMarket
}

func (m *MsgProviderCreate) GetCapacityMinimum() uint64 {
	if m != nil {
		return m.CapacityMinimum
	}
	return 0
}

func (m *MsgProviderCreate) GetCapacityMaximum() uint64 {
	if m != nil {
		return m.CapacityMaximum
	}
	return 0
}

func (m *MsgProviderCreate) GetDurationMinimum() uint64 {
	if m != nil {
		return m.DurationMinimum
	}
	return 0
}

func (m *MsgProviderCreate) GetDurationMaximum() uint64 {
	if m != nil {
		return m.DurationMaximum
	}
	return 0
}

type MsgProviderWithdrawBalance struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId         string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	DestinationAddress string `protobuf:"bytes,3,opt,name=destinationAddress,proto3" json:"destinationAddress,omitempty"`
}

func (m *MsgProviderWithdrawBalance) Reset()         { *m = MsgProviderWithdrawBalance{} }
func (m *MsgProviderWithdrawBalance) String() string { return proto.CompactTextString(m) }
func (*MsgProviderWithdrawBalance) ProtoMessage()    {}
func (*MsgProviderWithdrawBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{95}
}
func (m *MsgProviderWithdrawBalance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderWithdrawBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderWithdrawBalance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderWithdrawBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderWithdrawBalance.Merge(m, src)
}
func (m *MsgProviderWithdrawBalance) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderWithdrawBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderWithdrawBalance.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderWithdrawBalance proto.InternalMessageInfo

func (m *MsgProviderWithdrawBalance) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderWithdrawBalance) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderWithdrawBalance) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

type MsgProviderUpdateCapacityMinimum struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId         string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	NewMinimumCapacity uint64 `protobuf:"varint,3,opt,name=newMinimumCapacity,proto3" json:"newMinimumCapacity,omitempty"`
}

func (m *MsgProviderUpdateCapacityMinimum) Reset()         { *m = MsgProviderUpdateCapacityMinimum{} }
func (m *MsgProviderUpdateCapacityMinimum) String() string { return proto.CompactTextString(m) }
func (*MsgProviderUpdateCapacityMinimum) ProtoMessage()    {}
func (*MsgProviderUpdateCapacityMinimum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{96}
}
func (m *MsgProviderUpdateCapacityMinimum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderUpdateCapacityMinimum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderUpdateCapacityMinimum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderUpdateCapacityMinimum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderUpdateCapacityMinimum.Merge(m, src)
}
func (m *MsgProviderUpdateCapacityMinimum) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderUpdateCapacityMinimum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderUpdateCapacityMinimum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderUpdateCapacityMinimum proto.InternalMessageInfo

func (m *MsgProviderUpdateCapacityMinimum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderUpdateCapacityMinimum) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderUpdateCapacityMinimum) GetNewMinimumCapacity() uint64 {
	if m != nil {
		return m.NewMinimumCapacity
	}
	return 0
}

type MsgProviderUpdateCapacityMaximum struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId         string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	NewMaximumCapacity uint64 `protobuf:"varint,3,opt,name=newMaximumCapacity,proto3" json:"newMaximumCapacity,omitempty"`
}

func (m *MsgProviderUpdateCapacityMaximum) Reset()         { *m = MsgProviderUpdateCapacityMaximum{} }
func (m *MsgProviderUpdateCapacityMaximum) String() string { return proto.CompactTextString(m) }
func (*MsgProviderUpdateCapacityMaximum) ProtoMessage()    {}
func (*MsgProviderUpdateCapacityMaximum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{97}
}
func (m *MsgProviderUpdateCapacityMaximum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderUpdateCapacityMaximum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderUpdateCapacityMaximum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderUpdateCapacityMaximum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderUpdateCapacityMaximum.Merge(m, src)
}
func (m *MsgProviderUpdateCapacityMaximum) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderUpdateCapacityMaximum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderUpdateCapacityMaximum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderUpdateCapacityMaximum proto.InternalMessageInfo

func (m *MsgProviderUpdateCapacityMaximum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderUpdateCapacityMaximum) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderUpdateCapacityMaximum) GetNewMaximumCapacity() uint64 {
	if m != nil {
		return m.NewMaximumCapacity
	}
	return 0
}

type MsgProviderUpdateDurationMinimum struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId         string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	NewMinimumDuration uint64 `protobuf:"varint,3,opt,name=newMinimumDuration,proto3" json:"newMinimumDuration,omitempty"`
}

func (m *MsgProviderUpdateDurationMinimum) Reset()         { *m = MsgProviderUpdateDurationMinimum{} }
func (m *MsgProviderUpdateDurationMinimum) String() string { return proto.CompactTextString(m) }
func (*MsgProviderUpdateDurationMinimum) ProtoMessage()    {}
func (*MsgProviderUpdateDurationMinimum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{98}
}
func (m *MsgProviderUpdateDurationMinimum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderUpdateDurationMinimum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderUpdateDurationMinimum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderUpdateDurationMinimum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderUpdateDurationMinimum.Merge(m, src)
}
func (m *MsgProviderUpdateDurationMinimum) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderUpdateDurationMinimum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderUpdateDurationMinimum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderUpdateDurationMinimum proto.InternalMessageInfo

func (m *MsgProviderUpdateDurationMinimum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderUpdateDurationMinimum) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderUpdateDurationMinimum) GetNewMinimumDuration() uint64 {
	if m != nil {
		return m.NewMinimumDuration
	}
	return 0
}

type MsgProviderUpdateDurationMaximum struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId         string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	NewMaximumDuration uint64 `protobuf:"varint,3,opt,name=newMaximumDuration,proto3" json:"newMaximumDuration,omitempty"`
}

func (m *MsgProviderUpdateDurationMaximum) Reset()         { *m = MsgProviderUpdateDurationMaximum{} }
func (m *MsgProviderUpdateDurationMaximum) String() string { return proto.CompactTextString(m) }
func (*MsgProviderUpdateDurationMaximum) ProtoMessage()    {}
func (*MsgProviderUpdateDurationMaximum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{99}
}
func (m *MsgProviderUpdateDurationMaximum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderUpdateDurationMaximum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderUpdateDurationMaximum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderUpdateDurationMaximum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderUpdateDurationMaximum.Merge(m, src)
}
func (m *MsgProviderUpdateDurationMaximum) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderUpdateDurationMaximum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderUpdateDurationMaximum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderUpdateDurationMaximum proto.InternalMessageInfo

func (m *MsgProviderUpdateDurationMaximum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderUpdateDurationMaximum) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderUpdateDurationMaximum) GetNewMaximumDuration() uint64 {
	if m != nil {
		return m.NewMaximumDuration
	}
	return 0
}

type MsgProviderUpdateAccessPolicy struct {
	Creator      string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId   string               `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	AccessPolicy ProviderAccessPolicy `protobuf:"varint,3,opt,name=accessPolicy,proto3,enum=structs.structs.ProviderAccessPolicy" json:"accessPolicy,omitempty"`
}

func (m *MsgProviderUpdateAccessPolicy) Reset()         { *m = MsgProviderUpdateAccessPolicy{} }
func (m *MsgProviderUpdateAccessPolicy) String() string { return proto.CompactTextString(m) }
func (*MsgProviderUpdateAccessPolicy) ProtoMessage()    {}
func (*MsgProviderUpdateAccessPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{100}
}
func (m *MsgProviderUpdateAccessPolicy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderUpdateAccessPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderUpdateAccessPolicy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderUpdateAccessPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderUpdateAccessPolicy.Merge(m, src)
}
func (m *MsgProviderUpdateAccessPolicy) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderUpdateAccessPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderUpdateAccessPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderUpdateAccessPolicy proto.InternalMessageInfo

func (m *MsgProviderUpdateAccessPolicy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderUpdateAccessPolicy) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderUpdateAccessPolicy) GetAccessPolicy() ProviderAccessPolicy {
	if m != nil {
		return m.AccessPolicy
	}
	return ProviderAccessPolicy_openMarket
}

type MsgProviderGuildGrant struct {
	Creator    string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId string   `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	GuildId    []string `protobuf:"bytes,3,rep,name=guildId,proto3" json:"guildId,omitempty"`
}

func (m *MsgProviderGuildGrant) Reset()         { *m = MsgProviderGuildGrant{} }
func (m *MsgProviderGuildGrant) String() string { return proto.CompactTextString(m) }
func (*MsgProviderGuildGrant) ProtoMessage()    {}
func (*MsgProviderGuildGrant) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{101}
}
func (m *MsgProviderGuildGrant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderGuildGrant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderGuildGrant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderGuildGrant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderGuildGrant.Merge(m, src)
}
func (m *MsgProviderGuildGrant) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderGuildGrant) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderGuildGrant.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderGuildGrant proto.InternalMessageInfo

func (m *MsgProviderGuildGrant) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderGuildGrant) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderGuildGrant) GetGuildId() []string {
	if m != nil {
		return m.GuildId
	}
	return nil
}

type MsgProviderGuildRevoke struct {
	Creator    string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId string   `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	GuildId    []string `protobuf:"bytes,3,rep,name=guildId,proto3" json:"guildId,omitempty"`
}

func (m *MsgProviderGuildRevoke) Reset()         { *m = MsgProviderGuildRevoke{} }
func (m *MsgProviderGuildRevoke) String() string { return proto.CompactTextString(m) }
func (*MsgProviderGuildRevoke) ProtoMessage()    {}
func (*MsgProviderGuildRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{102}
}
func (m *MsgProviderGuildRevoke) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderGuildRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderGuildRevoke.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderGuildRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderGuildRevoke.Merge(m, src)
}
func (m *MsgProviderGuildRevoke) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderGuildRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderGuildRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderGuildRevoke proto.InternalMessageInfo

func (m *MsgProviderGuildRevoke) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderGuildRevoke) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *MsgProviderGuildRevoke) GetGuildId() []string {
	if m != nil {
		return m.GuildId
	}
	return nil
}

type MsgProviderDelete struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProviderId string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
}

func (m *MsgProviderDelete) Reset()         { *m = MsgProviderDelete{} }
func (m *MsgProviderDelete) String() string { return proto.CompactTextString(m) }
func (*MsgProviderDelete) ProtoMessage()    {}
func (*MsgProviderDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{103}
}
func (m *MsgProviderDelete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderDelete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderDelete.Merge(m, src)
}
func (m *MsgProviderDelete) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderDelete proto.InternalMessageInfo

func (m *MsgProviderDelete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProviderDelete) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

type MsgProviderResponse struct {
}

func (m *MsgProviderResponse) Reset()         { *m = MsgProviderResponse{} }
func (m *MsgProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgProviderResponse) ProtoMessage()    {}
func (*MsgProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{104}
}
func (m *MsgProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProviderResponse.Merge(m, src)
}
func (m *MsgProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProviderResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "structs.structs.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "structs.structs.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgAddressRegister)(nil), "structs.structs.MsgAddressRegister")
	proto.RegisterType((*MsgAddressRegisterResponse)(nil), "structs.structs.MsgAddressRegisterResponse")
	proto.RegisterType((*MsgAddressRevoke)(nil), "structs.structs.MsgAddressRevoke")
	proto.RegisterType((*MsgAddressRevokeResponse)(nil), "structs.structs.MsgAddressRevokeResponse")
	proto.RegisterType((*MsgAllocationCreate)(nil), "structs.structs.MsgAllocationCreate")
	proto.RegisterType((*MsgAllocationCreateResponse)(nil), "structs.structs.MsgAllocationCreateResponse")
	proto.RegisterType((*MsgAllocationDelete)(nil), "structs.structs.MsgAllocationDelete")
	proto.RegisterType((*MsgAllocationDeleteResponse)(nil), "structs.structs.MsgAllocationDeleteResponse")
	proto.RegisterType((*MsgAllocationUpdate)(nil), "structs.structs.MsgAllocationUpdate")
	proto.RegisterType((*MsgAllocationUpdateResponse)(nil), "structs.structs.MsgAllocationUpdateResponse")
	proto.RegisterType((*MsgAllocationTransfer)(nil), "structs.structs.MsgAllocationTransfer")
	proto.RegisterType((*MsgAllocationTransferResponse)(nil), "structs.structs.MsgAllocationTransferResponse")
	proto.RegisterType((*MsgFleetMove)(nil), "structs.structs.MsgFleetMove")
	proto.RegisterType((*MsgFleetMoveResponse)(nil), "structs.structs.MsgFleetMoveResponse")
	proto.RegisterType((*MsgGuildCreate)(nil), "structs.structs.MsgGuildCreate")
	proto.RegisterType((*MsgGuildCreateResponse)(nil), "structs.structs.MsgGuildCreateResponse")
	proto.RegisterType((*MsgGuildUpdateOwnerId)(nil), "structs.structs.MsgGuildUpdateOwnerId")
	proto.RegisterType((*MsgGuildUpdateEntrySubstationId)(nil), "structs.structs.MsgGuildUpdateEntrySubstationId")
	proto.RegisterType((*MsgGuildUpdateEndpoint)(nil), "structs.structs.MsgGuildUpdateEndpoint")
	proto.RegisterType((*MsgGuildUpdateJoinInfusionMinimum)(nil), "structs.structs.MsgGuildUpdateJoinInfusionMinimum")
	proto.RegisterType((*MsgGuildUpdateJoinInfusionMinimumBypassByRequest)(nil), "structs.structs.MsgGuildUpdateJoinInfusionMinimumBypassByRequest")
	proto.RegisterType((*MsgGuildUpdateJoinInfusionMinimumBypassByInvite)(nil), "structs.structs.MsgGuildUpdateJoinInfusionMinimumBypassByInvite")
	proto.RegisterType((*MsgGuildUpdateResponse)(nil), "structs.structs.MsgGuildUpdateResponse")
	proto.RegisterType((*MsgGuildMembershipInvite)(nil), "structs.structs.MsgGuildMembershipInvite")
	proto.RegisterType((*MsgGuildMembershipInviteApprove)(nil), "structs.structs.MsgGuildMembershipInviteApprove")
	proto.RegisterType((*MsgGuildMembershipInviteDeny)(nil), "structs.structs.MsgGuildMembershipInviteDeny")
	proto.RegisterType((*MsgGuildMembershipInviteRevoke)(nil), "structs.structs.MsgGuildMembershipInviteRevoke")
	proto.RegisterType((*MsgGuildMembershipJoin)(nil), "structs.structs.MsgGuildMembershipJoin")
	proto.RegisterType((*MsgGuildMembershipJoinProxy)(nil), "structs.structs.MsgGuildMembershipJoinProxy")
	proto.RegisterType((*MsgGuildMembershipKick)(nil), "structs.structs.MsgGuildMembershipKick")
	proto.RegisterType((*MsgGuildMembershipRequest)(nil), "structs.structs.MsgGuildMembershipRequest")
	proto.RegisterType((*MsgGuildMembershipRequestApprove)(nil), "structs.structs.MsgGuildMembershipRequestApprove")
	proto.RegisterType((*MsgGuildMembershipRequestDeny)(nil), "structs.structs.MsgGuildMembershipRequestDeny")
	proto.RegisterType((*MsgGuildMembershipRequestRevoke)(nil), "structs.structs.MsgGuildMembershipRequestRevoke")
	proto.RegisterType((*MsgGuildMembershipResponse)(nil), "structs.structs.MsgGuildMembershipResponse")
	proto.RegisterType((*MsgPermissionGrantOnObject)(nil), "structs.structs.MsgPermissionGrantOnObject")
	proto.RegisterType((*MsgPermissionGrantOnAddress)(nil), "structs.structs.MsgPermissionGrantOnAddress")
	proto.RegisterType((*MsgPermissionRevokeOnObject)(nil), "structs.structs.MsgPermissionRevokeOnObject")
	proto.RegisterType((*MsgPermissionRevokeOnAddress)(nil), "structs.structs.MsgPermissionRevokeOnAddress")
	proto.RegisterType((*MsgPermissionSetOnObject)(nil), "structs.structs.MsgPermissionSetOnObject")
	proto.RegisterType((*MsgPermissionSetOnAddress)(nil), "structs.structs.MsgPermissionSetOnAddress")
	proto.RegisterType((*MsgPermissionResponse)(nil), "structs.structs.MsgPermissionResponse")
	proto.RegisterType((*MsgPlanetExplore)(nil), "structs.structs.MsgPlanetExplore")
	proto.RegisterType((*MsgPlanetExploreResponse)(nil), "structs.structs.MsgPlanetExploreResponse")
	proto.RegisterType((*MsgPlanetRaidComplete)(nil), "structs.structs.MsgPlanetRaidComplete")
	proto.RegisterType((*MsgPlanetRaidCompleteResponse)(nil), "structs.structs.MsgPlanetRaidCompleteResponse")
	proto.RegisterType((*MsgPlayerUpdatePrimaryAddress)(nil), "structs.structs.MsgPlayerUpdatePrimaryAddress")
	proto.RegisterType((*MsgPlayerUpdatePrimaryAddressResponse)(nil), "structs.structs.MsgPlayerUpdatePrimaryAddressResponse")
	proto.RegisterType((*MsgPlayerResume)(nil), "structs.structs.MsgPlayerResume")
	proto.RegisterType((*MsgPlayerResumeResponse)(nil), "structs.structs.MsgPlayerResumeResponse")
	proto.RegisterType((*MsgStructStatusResponse)(nil), "structs.structs.MsgStructStatusResponse")
	proto.RegisterType((*MsgStructActivate)(nil), "structs.structs.MsgStructActivate")
	proto.RegisterType((*MsgStructDeactivate)(nil), "structs.structs.MsgStructDeactivate")
	proto.RegisterType((*MsgStructBuildInitiate)(nil), "structs.structs.MsgStructBuildInitiate")
	proto.RegisterType((*MsgStructBuildComplete)(nil), "structs.structs.MsgStructBuildComplete")
	proto.RegisterType((*MsgStructBuildCancel)(nil), "structs.structs.MsgStructBuildCancel")
	proto.RegisterType((*MsgStructBuildCompleteAndStash)(nil), "structs.structs.MsgStructBuildCompleteAndStash")
	proto.RegisterType((*MsgStructDefenseSet)(nil), "structs.structs.MsgStructDefenseSet")
	proto.RegisterType((*MsgStructDefenseClear)(nil), "structs.structs.MsgStructDefenseClear")
	proto.RegisterType((*MsgStructMove)(nil), "structs.structs.MsgStructMove")
	proto.RegisterType((*MsgStructAttack)(nil), "structs.structs.MsgStructAttack")
	proto.RegisterType((*MsgStructAttackResponse)(nil), "structs.structs.MsgStructAttackResponse")
	proto.RegisterType((*MsgStructStealthActivate)(nil), "structs.structs.MsgStructStealthActivate")
	proto.RegisterType((*MsgStructStealthDeactivate)(nil), "structs.structs.MsgStructStealthDeactivate")
	proto.RegisterType((*MsgStructGeneratorInfuse)(nil), "structs.structs.MsgStructGeneratorInfuse")
	proto.RegisterType((*MsgStructGeneratorStatusResponse)(nil), "structs.structs.MsgStructGeneratorStatusResponse")
	proto.RegisterType((*MsgStructOreMinerComplete)(nil), "structs.structs.MsgStructOreMinerComplete")
	proto.RegisterType((*MsgStructOreMinerStatusResponse)(nil), "structs.structs.MsgStructOreMinerStatusResponse")
	proto.RegisterType((*MsgStructOreRefineryComplete)(nil), "structs.structs.MsgStructOreRefineryComplete")
	proto.RegisterType((*MsgStructOreRefineryStatusResponse)(nil), "structs.structs.MsgStructOreRefineryStatusResponse")
	proto.RegisterType((*MsgStructStorageStash)(nil), "structs.structs.MsgStructStorageStash")
	proto.RegisterType((*MsgStructStorageRecall)(nil), "structs.structs.MsgStructStorageRecall")
	proto.RegisterType((*MsgSubstationCreate)(nil), "structs.structs.MsgSubstationCreate")
	proto.RegisterType((*MsgSubstationCreateResponse)(nil), "structs.structs.MsgSubstationCreateResponse")
	proto.RegisterType((*MsgSubstationDelete)(nil), "structs.structs.MsgSubstationDelete")
	proto.RegisterType((*MsgSubstationDeleteResponse)(nil), "structs.structs.MsgSubstationDeleteResponse")
	proto.RegisterType((*MsgSubstationAllocationConnect)(nil), "structs.structs.MsgSubstationAllocationConnect")
	proto.RegisterType((*MsgSubstationAllocationConnectResponse)(nil), "structs.structs.MsgSubstationAllocationConnectResponse")
	proto.RegisterType((*MsgSubstationAllocationDisconnect)(nil), "structs.structs.MsgSubstationAllocationDisconnect")
	proto.RegisterType((*MsgSubstationAllocationDisconnectResponse)(nil), "structs.structs.MsgSubstationAllocationDisconnectResponse")
	proto.RegisterType((*MsgSubstationPlayerConnect)(nil), "structs.structs.MsgSubstationPlayerConnect")
	proto.RegisterType((*MsgSubstationPlayerConnectResponse)(nil), "structs.structs.MsgSubstationPlayerConnectResponse")
	proto.RegisterType((*MsgSubstationPlayerDisconnect)(nil), "structs.structs.MsgSubstationPlayerDisconnect")
	proto.RegisterType((*MsgSubstationPlayerDisconnectResponse)(nil), "structs.structs.MsgSubstationPlayerDisconnectResponse")
	proto.RegisterType((*MsgSubstationPlayerMigrate)(nil), "structs.structs.MsgSubstationPlayerMigrate")
	proto.RegisterType((*MsgSubstationPlayerMigrateResponse)(nil), "structs.structs.MsgSubstationPlayerMigrateResponse")
	proto.RegisterType((*MsgAgreementOpen)(nil), "structs.structs.MsgAgreementOpen")
	proto.RegisterType((*MsgAgreementClose)(nil), "structs.structs.MsgAgreementClose")
	proto.RegisterType((*MsgAgreementCapacityIncrease)(nil), "structs.structs.MsgAgreementCapacityIncrease")
	proto.RegisterType((*MsgAgreementCapacityDecrease)(nil), "structs.structs.MsgAgreementCapacityDecrease")
	proto.RegisterType((*MsgAgreementDurationIncrease)(nil), "structs.structs.MsgAgreementDurationIncrease")
	proto.RegisterType((*MsgAgreementResponse)(nil), "structs.structs.MsgAgreementResponse")
	proto.RegisterType((*MsgProviderCreate)(nil), "structs.structs.MsgProviderCreate")
	proto.RegisterType((*MsgProviderWithdrawBalance)(nil), "structs.structs.MsgProviderWithdrawBalance")
	proto.RegisterType((*MsgProviderUpdateCapacityMinimum)(nil), "structs.structs.MsgProviderUpdateCapacityMinimum")
	proto.RegisterType((*MsgProviderUpdateCapacityMaximum)(nil), "structs.structs.MsgProviderUpdateCapacityMaximum")
	proto.RegisterType((*MsgProviderUpdateDurationMinimum)(nil), "structs.structs.MsgProviderUpdateDurationMinimum")
	proto.RegisterType((*MsgProviderUpdateDurationMaximum)(nil), "structs.structs.MsgProviderUpdateDurationMaximum")
	proto.RegisterType((*MsgProviderUpdateAccessPolicy)(nil), "structs.structs.MsgProviderUpdateAccessPolicy")
	proto.RegisterType((*MsgProviderGuildGrant)(nil), "structs.structs.MsgProviderGuildGrant")
	proto.RegisterType((*MsgProviderGuildRevoke)(nil), "structs.structs.MsgProviderGuildRevoke")
	proto.RegisterType((*MsgProviderDelete)(nil), "structs.structs.MsgProviderDelete")
	proto.RegisterType((*MsgProviderResponse)(nil), "structs.structs.MsgProviderResponse")
}

func init() { proto.RegisterFile("structs/structs/tx.proto", fileDescriptor_38fd6c203bede659) }

var fileDescriptor_38fd6c203bede659 = []byte{
	// 3692 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5c, 0xdb, 0x6f, 0xdc, 0xc6,
	0xd5, 0x37, 0x75, 0x71, 0xec, 0x63, 0x59, 0xb6, 0xe9, 0x8b, 0x56, 0xb4, 0x2d, 0x29, 0xfb, 0xd9,
	0xb2, 0xac, 0xcb, 0xca, 0x52, 0x2e, 0x1f, 0xe0, 0x87, 0x2f, 0x9f, 0x2e, 0xa9, 0xa1, 0x26, 0x82,
	0x95, 0x95, 0x93, 0x34, 0x0e, 0x92, 0x96, 0xda, 0x1d, 0xad, 0x18, 0x71, 0xc9, 0x0d, 0xc9, 0x95,
	0xbc, 0x6d, 0x53, 0xb7, 0x6e, 0x7a, 0x07, 0x8a, 0x34, 0x28, 0x50, 0xf4, 0x0e, 0xa4, 0x7d, 0x08,
	0xfa, 0x64, 0xb4, 0x79, 0x6a, 0xd1, 0xf7, 0xbc, 0xb4, 0x0d, 0x82, 0xa2, 0x28, 0xf2, 0xe0, 0x16,
	0x49, 0x01, 0xff, 0x1b, 0x05, 0x67, 0x86, 0x5c, 0xce, 0x70, 0x48, 0x0e, 0x77, 0x37, 0x8e, 0x5f,
	0xbc, 0xe2, 0xcc, 0x99, 0xf3, 0xfb, 0x9d, 0xb9, 0xcf, 0x99, 0x33, 0x86, 0x82, 0xeb, 0x39, 0xcd,
	0x8a, 0xe7, 0xce, 0x07, 0xbf, 0xde, 0xad, 0x52, 0xc3, 0xb1, 0x3d, 0x5b, 0x3d, 0x46, 0x53, 0x4a,
	0xf4, 0x57, 0x3b, 0xa1, 0xd7, 0x0d, 0xcb, 0x9e, 0xc7, 0xff, 0x12, 0x19, 0x6d, 0xa4, 0x62, 0xbb,
	0x75, 0xdb, 0x9d, 0xaf, 0xbb, 0xb5, 0xf9, 0xbd, 0x05, 0xff, 0x87, 0x66, 0x8c, 0x92, 0x8c, 0x2f,
	0xe2, 0xaf, 0x79, 0xf2, 0x41, 0xb3, 0x4e, 0xd5, 0xec, 0x9a, 0x4d, 0xd2, 0xfd, 0xbf, 0x68, 0xea,
	0x39, 0x9e, 0x47, 0x43, 0x77, 0xf4, 0x7a, 0x50, 0x66, 0x8c, 0xe2, 0x6c, 0xe9, 0x2e, 0x9a, 0xdf,
	0x5b, 0xd8, 0x42, 0x9e, 0xbe, 0x30, 0x5f, 0xb1, 0x0d, 0x8b, 0xe6, 0x6b, 0x7c, 0xe9, 0x5d, 0xd4,
	0x0a, 0xca, 0x9e, 0xe5, 0xf3, 0xb6, 0x4d, 0x84, 0xbc, 0xa4, 0xcc, 0x5a, 0xd3, 0x30, 0xab, 0x89,
	0x9c, 0x4c, 0xdd, 0x0a, 0x8b, 0xc6, 0x72, 0xc9, 0x2f, 0xc9, 0x2d, 0xfe, 0x49, 0x81, 0x63, 0xeb,
	0x6e, 0xed, 0xf9, 0x46, 0x55, 0xf7, 0xd0, 0x06, 0xb6, 0x45, 0x7d, 0x12, 0x0e, 0xeb, 0x4d, 0x6f,
	0xc7, 0x76, 0x0c, 0xaf, 0x55, 0x50, 0x26, 0x94, 0xa9, 0xc3, 0xcb, 0x85, 0x0f, 0xdf, 0x9b, 0x3b,
	0x45, 0xab, 0x67, 0xa9, 0x5a, 0x75, 0x90, 0xeb, 0x6e, 0x7a, 0x8e, 0x61, 0xd5, 0xca, 0x6d, 0x51,
	0xf5, 0x2a, 0x1c, 0x24, 0xb5, 0x51, 0xe8, 0x9b, 0x50, 0xa6, 0x8e, 0x2c, 0x8e, 0x94, 0xb8, 0xa6,
	0x29, 0x11, 0x80, 0xe5, 0xc3, 0xef, 0xdf, 0x1b, 0x3f, 0xf0, 0xee, 0xfd, 0xbb, 0xd3, 0x4a, 0x99,
	0x96, 0xb8, 0xfa, 0xf8, 0x9d, 0xfb, 0x77, 0xa7, 0xdb, 0xba, 0xbe, 0x7f, 0xff, 0xee, 0xf4, 0xa3,
	0x01, 0xe1, 0x5b, 0x21, 0x75, 0x8e, 0x69, 0x71, 0x14, 0x46, 0xb8, 0xa4, 0x32, 0x72, 0x1b, 0xb6,
	0xe5, 0xa2, 0xe2, 0x3d, 0x05, 0xd4, 0x75, 0xb7, 0x46, 0xc9, 0x96, 0x51, 0xcd, 0x70, 0x3d, 0xe4,
	0xa8, 0x05, 0x78, 0xa4, 0xe2, 0x20, 0xdd, 0xb3, 0x1d, 0x62, 0x59, 0x39, 0xf8, 0x54, 0x35, 0x38,
	0xd4, 0x30, 0xf5, 0x16, 0x72, 0xd6, 0xaa, 0x98, 0xff, 0xe1, 0x72, 0xf8, 0xed, 0x97, 0xd2, 0x89,
	0xa2, 0x42, 0x3f, 0x29, 0x45, 0x3f, 0xd5, 0x09, 0x38, 0xd2, 0x70, 0x6c, 0x7b, 0x7b, 0xa3, 0xb9,
	0xf5, 0x0c, 0x6a, 0x15, 0x06, 0x70, 0x6e, 0x34, 0x49, 0x9d, 0x84, 0x61, 0xfc, 0xb9, 0x69, 0xd4,
	0x2c, 0xdd, 0x6b, 0x3a, 0xa8, 0x30, 0x88, 0x85, 0xb8, 0x54, 0xac, 0x09, 0x39, 0x75, 0xc3, 0x75,
	0x0d, 0xdb, 0x72, 0x0b, 0x07, 0x27, 0x94, 0xa9, 0x81, 0x72, 0x34, 0xe9, 0xea, 0x90, 0x5f, 0x47,
	0x01, 0xdf, 0xe2, 0x39, 0xd0, 0xe2, 0xf6, 0x85, 0xe6, 0xdf, 0x80, 0xe3, 0xd1, 0xdc, 0x3d, 0x7b,
	0x17, 0xa5, 0xd8, 0x1e, 0xb1, 0xaf, 0x8f, 0xb1, 0x8f, 0xc3, 0xd4, 0xa0, 0xc0, 0x6b, 0x0d, 0x11,
	0xff, 0xa3, 0xc0, 0x49, 0x3f, 0xd3, 0x34, 0xed, 0x8a, 0xee, 0x19, 0xb6, 0xb5, 0xe2, 0x17, 0x4a,
	0x43, 0x1d, 0x03, 0xa8, 0xd8, 0x96, 0xe7, 0xd8, 0xa6, 0x89, 0x1c, 0x0a, 0x1c, 0x49, 0xf1, 0x6b,
	0xce, 0xb5, 0x9b, 0x4e, 0x05, 0x5d, 0xdf, 0x7a, 0x0d, 0x55, 0xbc, 0xb5, 0x2a, 0xad, 0x7c, 0x2e,
	0x55, 0xbd, 0x06, 0xc3, 0x7a, 0x88, 0x7a, 0xa3, 0xd5, 0x40, 0xb8, 0x19, 0x86, 0x17, 0xc7, 0x63,
	0xfd, 0x8f, 0x15, 0x2b, 0x73, 0xc5, 0xd4, 0x53, 0x30, 0xd8, 0xb0, 0xf7, 0x91, 0x83, 0x5b, 0x68,
	0xa0, 0x4c, 0x3e, 0xb8, 0x2a, 0x58, 0x82, 0xb3, 0x02, 0x2b, 0x83, 0x5a, 0x50, 0x8b, 0x30, 0xd4,
	0x56, 0xba, 0x56, 0xa5, 0x26, 0x33, 0x69, 0x45, 0x9d, 0xab, 0xa8, 0x55, 0x64, 0xa2, 0xd4, 0x8a,
	0xe2, 0x95, 0xf6, 0xc5, 0x95, 0x66, 0xb0, 0x24, 0x10, 0xb9, 0x58, 0xee, 0x73, 0x2c, 0xc9, 0x28,
	0xeb, 0x8e, 0x65, 0xbb, 0x86, 0xfb, 0xe5, 0x6b, 0x98, 0x00, 0xe7, 0xe2, 0xfe, 0x4d, 0x05, 0x4e,
	0x33, 0x3a, 0x6e, 0x38, 0xba, 0xe5, 0x6e, 0xa7, 0x8e, 0x7f, 0x19, 0xfa, 0x6c, 0x8f, 0xed, 0xe7,
	0x7b, 0x2c, 0x67, 0xc8, 0x0a, 0x9c, 0x17, 0x92, 0xc8, 0x65, 0xca, 0xb7, 0x15, 0x18, 0x5a, 0x77,
	0x6b, 0x9f, 0xf3, 0x17, 0x83, 0x75, 0x7b, 0x2f, 0x63, 0x14, 0xe3, 0x35, 0x23, 0x24, 0x1f, 0x7c,
	0xaa, 0x8f, 0xc3, 0xe9, 0x2a, 0x72, 0x3d, 0xc3, 0xc2, 0x5a, 0x9f, 0x6d, 0x23, 0x12, 0x13, 0xc4,
	0x99, 0x9c, 0x35, 0xab, 0x70, 0x2a, 0xca, 0x23, 0x34, 0x62, 0x16, 0x06, 0x31, 0x0c, 0x66, 0x73,
	0x64, 0xf1, 0x4c, 0x6c, 0xd0, 0xe1, 0x22, 0x65, 0x22, 0x54, 0xbc, 0xa3, 0xc0, 0xf0, 0xba, 0x5b,
	0xbb, 0xe6, 0x2f, 0x5f, 0x99, 0x13, 0x84, 0x06, 0x87, 0x90, 0x55, 0x6d, 0xd8, 0x86, 0xe5, 0x05,
	0x53, 0x72, 0xf0, 0xad, 0xce, 0xc2, 0x09, 0x64, 0x79, 0x4e, 0x6b, 0xb3, 0xb9, 0xe5, 0x7a, 0xac,
	0x39, 0xf1, 0x0c, 0xce, 0x94, 0x45, 0x38, 0xc3, 0x72, 0x08, 0x8d, 0x29, 0xc0, 0x23, 0x78, 0x65,
	0x0d, 0x1b, 0x23, 0xf8, 0x2c, 0xda, 0xb8, 0x47, 0xe1, 0x32, 0xa4, 0x43, 0x5e, 0xdf, 0xb7, 0x82,
	0xb5, 0x21, 0xb9, 0x3d, 0x02, 0x65, 0x7d, 0x8c, 0x32, 0x7f, 0x18, 0xd8, 0x7e, 0x71, 0x4a, 0x98,
	0x7c, 0x70, 0x24, 0x7f, 0xa4, 0xc0, 0x38, 0x8b, 0xf8, 0x34, 0x6f, 0x56, 0x47, 0xd8, 0xdd, 0x54,
	0xdc, 0x5e, 0xbb, 0xe2, 0x02, 0x4a, 0xb4, 0x39, 0x3a, 0x61, 0x12, 0x6d, 0xde, 0x7e, 0xb6, 0x79,
	0x39, 0xdc, 0x9f, 0x28, 0xf0, 0x28, 0x0b, 0xfc, 0x79, 0xdb, 0xb0, 0xd6, 0xac, 0xed, 0xa6, 0xbf,
	0x32, 0xae, 0x1b, 0x96, 0x51, 0x6f, 0xd6, 0x3b, 0xe2, 0x70, 0x05, 0x4e, 0xbe, 0x16, 0x57, 0x45,
	0xa7, 0x27, 0x51, 0x16, 0xc7, 0xec, 0x6f, 0x0a, 0x5c, 0xc9, 0x64, 0xb6, 0xdc, 0x6a, 0xe8, 0xae,
	0xbb, 0xdc, 0x2a, 0xa3, 0xd7, 0x9b, 0xc8, 0xed, 0xac, 0xb2, 0x5e, 0x82, 0x53, 0xf8, 0x4f, 0x5f,
	0x3d, 0xd1, 0xf7, 0x2c, 0xda, 0x43, 0x26, 0x66, 0x3a, 0xbc, 0x78, 0x31, 0x36, 0xea, 0x44, 0xc2,
	0x65, 0xa1, 0x0a, 0xce, 0xa2, 0xbf, 0x2a, 0x30, 0x2f, 0x6d, 0xd1, 0x9a, 0xb5, 0x67, 0x78, 0xe8,
	0xe1, 0x36, 0xa8, 0xc0, 0x77, 0xda, 0x70, 0xcb, 0xf2, 0x0b, 0x05, 0xef, 0x67, 0x70, 0xd6, 0x3a,
	0xaa, 0x6f, 0x21, 0xc7, 0xdd, 0x31, 0x1a, 0x5d, 0xd8, 0x14, 0xdd, 0x43, 0xf6, 0x73, 0x7b, 0xc8,
	0x22, 0x0c, 0xb9, 0xd1, 0x21, 0x47, 0xb6, 0x8a, 0x4c, 0x1a, 0x47, 0xfc, 0x37, 0x91, 0x19, 0x80,
	0xa7, 0xb7, 0xd4, 0x68, 0x38, 0x99, 0xab, 0xc1, 0x03, 0x61, 0xf9, 0x55, 0x38, 0x97, 0x44, 0x72,
	0x15, 0x59, 0xad, 0x5e, 0x33, 0xe4, 0xd0, 0xbf, 0x06, 0x63, 0x49, 0xe8, 0x32, 0xbb, 0xde, 0xae,
	0xf1, 0xff, 0xa8, 0xb4, 0x7b, 0x57, 0x9b, 0x80, 0xdf, 0x21, 0x3f, 0x8b, 0xa6, 0xf1, 0x37, 0x28,
	0x06, 0x1d, 0xa9, 0x6b, 0xd5, 0xc2, 0xe0, 0x44, 0xbf, 0xbf, 0x41, 0x69, 0xa7, 0x70, 0xe4, 0xff,
	0xa2, 0xe0, 0xad, 0x96, 0x80, 0xfc, 0x86, 0x63, 0xdf, 0x6a, 0x75, 0x72, 0x60, 0x88, 0xb1, 0xec,
	0x17, 0xb0, 0xec, 0xd9, 0xa1, 0x29, 0x79, 0x79, 0x6a, 0x9b, 0xf3, 0x8c, 0x51, 0xd9, 0xfd, 0x94,
	0x3b, 0xc1, 0x2f, 0x15, 0x18, 0x8d, 0x03, 0x77, 0x33, 0xdb, 0xf7, 0x76, 0x88, 0xfe, 0x56, 0x81,
	0x89, 0x44, 0x7e, 0x0f, 0xcf, 0x4c, 0xf2, 0x06, 0xde, 0x2f, 0x8b, 0x59, 0x3e, 0x80, 0xa9, 0xe4,
	0xb6, 0x68, 0xb6, 0xa5, 0xf0, 0x0f, 0x64, 0x2e, 0xf9, 0x9e, 0x82, 0x8f, 0xf4, 0x31, 0x06, 0x74,
	0x6f, 0xba, 0x0b, 0x5a, 0x8d, 0xcd, 0x5a, 0x6a, 0x34, 0x4c, 0x83, 0x6c, 0xd7, 0xe9, 0xee, 0x7b,
	0x26, 0xb6, 0x6c, 0x5e, 0x4b, 0x2c, 0x52, 0x4e, 0x51, 0x57, 0xfc, 0x15, 0xe1, 0xb2, 0x11, 0xba,
	0x1f, 0xae, 0x39, 0xba, 0xe5, 0x5d, 0xb7, 0xc8, 0xa1, 0x3b, 0x7d, 0xcf, 0x6e, 0x07, 0xc7, 0x75,
	0xba, 0x67, 0x0f, 0xbe, 0x53, 0xbb, 0x0b, 0xe7, 0xfe, 0x18, 0xc8, 0x72, 0x7f, 0x7c, 0x83, 0xcc,
	0x5d, 0x31, 0x82, 0xd4, 0x39, 0xd1, 0xd1, 0xdc, 0xc5, 0x71, 0xe8, 0xcf, 0xe2, 0xf0, 0x6b, 0x9e,
	0x03, 0xe9, 0x26, 0x0f, 0x51, 0x2d, 0xdd, 0x51, 0xf0, 0xea, 0x1c, 0x67, 0xf8, 0x20, 0xab, 0x89,
	0x6e, 0xb3, 0xda, 0x24, 0x36, 0xd1, 0xc3, 0xd4, 0x93, 0x6e, 0xe3, 0xc9, 0x9b, 0x63, 0xf7, 0x20,
	0xeb, 0x67, 0x04, 0x1f, 0x2d, 0xa3, 0x6d, 0x44, 0xf7, 0xa7, 0x2f, 0x60, 0x27, 0xde, 0x06, 0xf6,
	0xe6, 0x3e, 0x7d, 0xab, 0x61, 0xda, 0x0e, 0xea, 0xcc, 0x81, 0xc9, 0x01, 0x3e, 0x47, 0xda, 0x23,
	0xaa, 0x37, 0x9c, 0x65, 0x9e, 0x80, 0x83, 0xc4, 0x7d, 0x4c, 0x67, 0x14, 0x81, 0x13, 0x17, 0x67,
	0x2f, 0x0f, 0xbc, 0x7f, 0x6f, 0xfc, 0x40, 0x99, 0x0a, 0x17, 0xbf, 0x45, 0x3c, 0x2e, 0x24, 0xaf,
	0xac, 0x1b, 0xd5, 0x15, 0xbb, 0xde, 0xc8, 0x70, 0x6b, 0x25, 0xfb, 0x2b, 0x4e, 0xc1, 0x20, 0x5e,
	0xe8, 0x83, 0xf3, 0x31, 0xfe, 0xf0, 0x53, 0x2d, 0xdb, 0xaa, 0x20, 0xba, 0x94, 0x90, 0x0f, 0xce,
	0xb4, 0x77, 0x15, 0xbc, 0x88, 0xc4, 0x79, 0x84, 0x06, 0x2e, 0x4a, 0xf9, 0x2b, 0xa8, 0x79, 0x44,
	0x34, 0x52, 0x29, 0x7d, 0x39, 0x2a, 0x45, 0x3d, 0x07, 0x87, 0x6d, 0x07, 0x6d, 0x7a, 0xb6, 0x89,
	0x2c, 0xda, 0x0d, 0xda, 0x09, 0xc5, 0x1f, 0x84, 0x54, 0x5b, 0xc8, 0xa1, 0x3e, 0x6c, 0xc7, 0xa8,
	0xeb, 0x4e, 0x2b, 0xbb, 0xf3, 0xa5, 0x39, 0xab, 0xf1, 0xde, 0x29, 0xaa, 0x27, 0x70, 0x9b, 0xb2,
	0xa9, 0x5c, 0xc5, 0x5d, 0x82, 0x8b, 0xa9, 0x64, 0xc2, 0x4e, 0xf9, 0x3c, 0xbe, 0x30, 0x20, 0x82,
	0x65, 0xe4, 0x36, 0xeb, 0xbd, 0xe9, 0x93, 0xc4, 0x95, 0x1f, 0x55, 0x1b, 0x22, 0x6e, 0xe0, 0xac,
	0x4d, 0x5c, 0xd3, 0x9b, 0x9e, 0xee, 0x35, 0xdd, 0x68, 0x6f, 0x25, 0x2d, 0x90, 0xd8, 0x5b, 0x49,
	0xb1, 0xa0, 0x61, 0x48, 0x6a, 0xf1, 0x45, 0x38, 0x11, 0x6a, 0x5c, 0xaa, 0x78, 0xc6, 0x5e, 0xa6,
	0x1f, 0x8a, 0x14, 0x6c, 0x5b, 0x11, 0x7c, 0x73, 0x56, 0xbc, 0x84, 0x9d, 0xa6, 0x44, 0xf1, 0x2a,
	0xd2, 0x7b, 0xa9, 0xfa, 0xef, 0xe4, 0xa4, 0x41, 0xed, 0xc1, 0x9b, 0x0b, 0xcb, 0xf0, 0x8c, 0x4c,
	0xf5, 0x89, 0xfd, 0xc4, 0xdf, 0xa0, 0x61, 0x65, 0x37, 0x5a, 0x0d, 0x44, 0xe7, 0xd1, 0x81, 0x32,
	0x93, 0xa6, 0xfe, 0x1f, 0x0c, 0xdb, 0x0d, 0xe4, 0xe8, 0x9e, 0x61, 0xd5, 0x96, 0xea, 0x5b, 0x86,
	0x47, 0x5d, 0xeb, 0xf1, 0x51, 0xa3, 0xfb, 0xb9, 0x65, 0x4e, 0x5a, 0x55, 0x61, 0xc0, 0x35, 0x6d,
	0x8f, 0x3a, 0xd4, 0xf1, 0xdf, 0x9c, 0x59, 0xdf, 0x8d, 0x99, 0x25, 0x31, 0x73, 0xa4, 0xd4, 0x5a,
	0x17, 0x73, 0xc7, 0x4d, 0xec, 0xe1, 0x8c, 0x32, 0xd1, 0xad, 0x0a, 0x32, 0x7b, 0xd2, 0x7a, 0xef,
	0xf4, 0xe1, 0x83, 0xaa, 0xc0, 0xcc, 0x25, 0xab, 0xba, 0xe9, 0xe9, 0xee, 0xce, 0xa7, 0x6f, 0xae,
	0xba, 0x08, 0xa7, 0x5c, 0xcf, 0x76, 0xf4, 0x1a, 0x5a, 0x6d, 0x3b, 0x7c, 0xf1, 0x39, 0xd1, 0x17,
	0x12, 0xe6, 0xa9, 0x57, 0xfd, 0x5e, 0x82, 0xd3, 0x49, 0xfb, 0x1f, 0x4c, 0x6d, 0x7f, 0x46, 0xd6,
	0x5f, 0x08, 0xe9, 0xf7, 0xa6, 0xdf, 0x09, 0x1e, 0x21, 0x0b, 0x61, 0x24, 0x29, 0xee, 0xe6, 0x8b,
	0x0e, 0x9f, 0x6d, 0x64, 0xb9, 0x68, 0x13, 0xa5, 0xed, 0x11, 0xa6, 0xe1, 0x78, 0xd5, 0x97, 0xab,
	0x22, 0x67, 0x93, 0xad, 0xa1, 0x58, 0xba, 0x3a, 0x0b, 0x27, 0x1a, 0x8e, 0xed, 0xa1, 0x8a, 0x87,
	0xaa, 0xa1, 0x30, 0x75, 0x7c, 0xc6, 0x32, 0x38, 0x66, 0xbb, 0x78, 0x75, 0x63, 0x88, 0xad, 0x98,
	0x48, 0x77, 0x7a, 0x43, 0x8d, 0x03, 0xfb, 0x87, 0x02, 0x47, 0x43, 0xb4, 0x0c, 0x9f, 0x7f, 0x5a,
	0xd7, 0x78, 0x0a, 0x86, 0x04, 0xb7, 0x62, 0x67, 0x63, 0x4d, 0x47, 0x76, 0x55, 0xf8, 0x46, 0x8c,
	0x29, 0xa0, 0xce, 0xc2, 0x20, 0x6e, 0x56, 0xdc, 0x41, 0x92, 0x1b, 0x9d, 0x08, 0x85, 0x63, 0xfd,
	0x60, 0xe2, 0x58, 0xff, 0x03, 0xb9, 0x6c, 0xa6, 0xf3, 0xae, 0xe7, 0xe9, 0xa9, 0x27, 0xf3, 0x59,
	0x38, 0x11, 0xce, 0x26, 0x5c, 0x0d, 0xc6, 0x33, 0xfc, 0x55, 0xcf, 0xd3, 0x9d, 0x1a, 0xf2, 0x22,
	0x4d, 0xdb, 0xef, 0xaf, 0x7a, 0x6c, 0xaa, 0x3f, 0xeb, 0xed, 0x23, 0xbd, 0x61, 0x5b, 0x9b, 0x2d,
	0xd7, 0x43, 0xf5, 0xe0, 0x58, 0x1a, 0x4d, 0x13, 0xae, 0x4c, 0x51, 0xd2, 0xe1, 0xca, 0xf4, 0x2a,
	0xde, 0x48, 0x05, 0x2b, 0x13, 0xd2, 0x4d, 0x6f, 0xa7, 0xa7, 0xcb, 0xc9, 0x97, 0xf0, 0x21, 0x8c,
	0xd1, 0xdf, 0xe3, 0x55, 0xe5, 0x8e, 0x12, 0x31, 0xe1, 0x1a, 0xb2, 0xfc, 0x6a, 0xb5, 0x1d, 0xec,
	0xed, 0xed, 0xb4, 0xdb, 0x15, 0x61, 0x08, 0x7b, 0x9c, 0xd0, 0x52, 0xdd, 0x6e, 0x86, 0xae, 0x7d,
	0x26, 0x8d, 0x23, 0x51, 0xc4, 0xee, 0x09, 0x8e, 0x03, 0xbb, 0xd2, 0xfb, 0xbb, 0xa5, 0xd1, 0x50,
	0xe8, 0xba, 0x83, 0xd6, 0x0d, 0x0b, 0x39, 0x9f, 0xd9, 0x52, 0xf1, 0x05, 0xec, 0x2b, 0x60, 0xc9,
	0xf4, 0x66, 0x6b, 0xf2, 0x43, 0x72, 0x62, 0x0b, 0x55, 0x97, 0xd1, 0xb6, 0xaf, 0xbc, 0xf5, 0x99,
	0x99, 0xfa, 0x32, 0x14, 0x45, 0x7c, 0x7a, 0x63, 0xed, 0x9f, 0x95, 0xc8, 0xc4, 0xba, 0x49, 0x17,
	0x86, 0x2e, 0x56, 0xc3, 0x31, 0x00, 0x93, 0xbf, 0xdd, 0x8c, 0xa4, 0xb4, 0x67, 0xb4, 0x81, 0x3c,
	0x33, 0x5a, 0xf2, 0xee, 0xe5, 0xa3, 0xe8, 0xee, 0x85, 0xf2, 0x2f, 0xa3, 0x8a, 0x6e, 0x9a, 0x0f,
	0xab, 0x01, 0x3e, 0x7a, 0x30, 0x83, 0xe0, 0xa9, 0xfa, 0x50, 0x39, 0xfc, 0xe6, 0x8c, 0x23, 0x11,
	0x00, 0xed, 0xeb, 0xc0, 0xcc, 0xfb, 0xda, 0xf0, 0x5a, 0xb3, 0x2f, 0x72, 0xad, 0x19, 0xbb, 0xe5,
	0xee, 0x97, 0x8c, 0x5e, 0xe0, 0x81, 0xa3, 0xd7, 0xe6, 0x8c, 0x67, 0x51, 0x89, 0x7b, 0x16, 0xc3,
	0xad, 0x44, 0x98, 0x26, 0x13, 0x64, 0xc1, 0x68, 0xed, 0x13, 0x38, 0xae, 0x1f, 0x87, 0xd3, 0x75,
	0xa3, 0xe6, 0xe0, 0x4f, 0xc1, 0xfd, 0xa9, 0x38, 0x93, 0x33, 0xee, 0x3c, 0x67, 0x1c, 0x1b, 0x9a,
	0x51, 0x7c, 0x5b, 0x21, 0x1b, 0xc5, 0x30, 0x3f, 0x12, 0x6a, 0x62, 0x5b, 0x56, 0xba, 0xcb, 0x44,
	0x26, 0x86, 0xe1, 0x02, 0x1c, 0xad, 0x32, 0xbb, 0x3f, 0xc2, 0x9d, 0x4d, 0xe4, 0x38, 0x4f, 0xc1,
	0x64, 0x3a, 0xa7, 0x90, 0xbe, 0x8d, 0x2f, 0x6a, 0x45, 0x92, 0xab, 0x86, 0x5b, 0xe9, 0x85, 0x01,
	0x1c, 0xb5, 0x19, 0xb8, 0x9c, 0x09, 0x18, 0xb2, 0x7b, 0x93, 0x78, 0x35, 0xdb, 0xd2, 0xe4, 0xbc,
	0x29, 0x55, 0xb1, 0x99, 0x9d, 0x43, 0xde, 0xd1, 0x7b, 0x81, 0x4c, 0xa9, 0x62, 0x16, 0x21, 0xd9,
	0x0a, 0x76, 0x0f, 0xf0, 0x52, 0x52, 0xd5, 0x28, 0x7f, 0xec, 0x26, 0xc7, 0xfe, 0x64, 0x90, 0xac,
	0xaa, 0x5b, 0xc7, 0x3d, 0x1e, 0xf5, 0xb4, 0xea, 0xfa, 0x73, 0x57, 0x1d, 0x65, 0x11, 0x1d, 0x44,
	0x38, 0xfc, 0xad, 0xe6, 0x20, 0x54, 0x47, 0x96, 0x77, 0xbd, 0x81, 0xac, 0xf4, 0x40, 0xb4, 0x86,
	0x63, 0xef, 0x19, 0xd5, 0x48, 0x85, 0x45, 0x52, 0x7c, 0x7a, 0xd5, 0x26, 0x19, 0xd8, 0xf4, 0x94,
	0x1c, 0x7e, 0xfb, 0x79, 0x15, 0xbd, 0xa1, 0x57, 0x0c, 0xaf, 0x45, 0x5d, 0x8d, 0xe1, 0x37, 0x47,
	0xfd, 0x15, 0xec, 0x74, 0x08, 0x39, 0xad, 0x98, 0x76, 0xea, 0x16, 0x6b, 0x02, 0x8e, 0xe8, 0x81,
	0x6c, 0xc8, 0x2a, 0x9a, 0xc4, 0xa9, 0xff, 0x31, 0xd9, 0x38, 0xb4, 0xf5, 0x53, 0x16, 0x6b, 0x96,
	0x2f, 0xd1, 0x1d, 0x94, 0x7f, 0x98, 0xa9, 0x70, 0xfa, 0x68, 0x4d, 0xc4, 0xd2, 0x25, 0x69, 0xad,
	0xa2, 0xde, 0xd2, 0x0a, 0xf4, 0xf1, 0xb4, 0x82, 0xf4, 0x0c, 0x5a, 0xab, 0xb4, 0x3d, 0x7b, 0x55,
	0x5b, 0x55, 0x4e, 0x5f, 0x40, 0x8b, 0x4f, 0xe7, 0x68, 0x9d, 0xc1, 0x2e, 0x88, 0x90, 0x55, 0xd8,
	0xa1, 0xdf, 0x19, 0xc4, 0x9d, 0x67, 0x83, 0xf6, 0xc9, 0xcc, 0x95, 0x58, 0x66, 0xd0, 0x55, 0x61,
	0xc0, 0x1f, 0x34, 0x98, 0xd9, 0x91, 0xc5, 0xd1, 0x12, 0x0d, 0xef, 0xdd, 0xd2, 0x5d, 0x54, 0xa2,
	0xb1, 0xcb, 0xa5, 0x15, 0xdb, 0xb0, 0x96, 0x9f, 0xf0, 0xb7, 0x6c, 0xbf, 0xfb, 0xd7, 0xf8, 0x54,
	0xcd, 0xf0, 0x76, 0x9a, 0x5b, 0xa5, 0x8a, 0x5d, 0xa7, 0xa1, 0xd2, 0xf4, 0x67, 0xce, 0xad, 0xee,
	0xce, 0x7b, 0xad, 0x06, 0x72, 0x71, 0x01, 0x97, 0x84, 0xf6, 0x62, 0xed, 0xea, 0x1a, 0x0c, 0xe9,
	0x95, 0x0a, 0x72, 0xdd, 0x0d, 0xdb, 0x34, 0x2a, 0x2d, 0xba, 0x6f, 0x89, 0x87, 0x77, 0x04, 0xc3,
	0x6d, 0x29, 0x22, 0x5c, 0x66, 0x8a, 0xaa, 0x2e, 0x9c, 0x0d, 0xa4, 0x88, 0x67, 0xc6, 0x24, 0x53,
	0x00, 0xb2, 0x74, 0xd3, 0x6b, 0x11, 0x2f, 0xc6, 0xf2, 0x82, 0x4f, 0xf6, 0xa3, 0x7b, 0xe3, 0x67,
	0x09, 0x35, 0xb7, 0xba, 0x5b, 0x32, 0xec, 0xf9, 0xba, 0xee, 0xed, 0x94, 0x9e, 0x45, 0x35, 0xbd,
	0xe2, 0x77, 0x88, 0x0f, 0xdf, 0x9b, 0x03, 0x6a, 0xed, 0x2a, 0xaa, 0x94, 0xd3, 0xb4, 0xfa, 0xa0,
	0x15, 0xdb, 0x72, 0x9b, 0x75, 0x31, 0xe8, 0xc1, 0x8e, 0x41, 0x53, 0xb4, 0xaa, 0x53, 0x70, 0x2c,
	0xe8, 0xbf, 0x41, 0x44, 0x12, 0x71, 0x9e, 0xf0, 0xc9, 0x8c, 0xa4, 0x7e, 0x0b, 0x4b, 0x1e, 0xe2,
	0x24, 0x49, 0xb2, 0x2f, 0x19, 0x74, 0xbe, 0x40, 0xe7, 0x61, 0x22, 0xc9, 0x25, 0x33, 0x92, 0x54,
	0x27, 0x70, 0x92, 0x24, 0x39, 0x3e, 0xa6, 0xb4, 0x48, 0x27, 0x7d, 0xd1, 0xf0, 0x76, 0xaa, 0x8e,
	0xbe, 0xbf, 0xac, 0x9b, 0xbe, 0x89, 0x5d, 0xcc, 0xbf, 0x25, 0x50, 0x23, 0xbb, 0x13, 0xd6, 0xab,
	0x2d, 0xc8, 0xe1, 0x68, 0xfd, 0x8c, 0xdc, 0x7e, 0x07, 0xb4, 0x88, 0x73, 0x7b, 0x85, 0xab, 0xc7,
	0xae, 0xc8, 0x59, 0x68, 0x9f, 0xea, 0x09, 0xd4, 0xd2, 0xe1, 0x2e, 0xc8, 0xc9, 0x45, 0x8e, 0x36,
	0x5d, 0xd7, 0xe4, 0x88, 0x1e, 0x11, 0x39, 0x36, 0x47, 0x86, 0xdc, 0x2a, 0xd7, 0x5b, 0x7a, 0x54,
	0x73, 0xab, 0xec, 0x02, 0x2b, 0xc8, 0xc9, 0x45, 0xae, 0xb7, 0x35, 0x27, 0x22, 0xc7, 0xe6, 0x70,
	0xe4, 0x7e, 0x4f, 0xef, 0x76, 0x18, 0x72, 0xd1, 0xa9, 0xad, 0x0b, 0x66, 0xfc, 0x8c, 0xda, 0xdf,
	0xf1, 0x8c, 0xca, 0x91, 0x6e, 0x91, 0x2b, 0x3c, 0x5a, 0x0c, 0x07, 0x0e, 0xe0, 0x4b, 0xf5, 0x2e,
	0xb8, 0x46, 0xc2, 0x22, 0xc8, 0xbe, 0x2e, 0xf8, 0xe4, 0xa0, 0xbf, 0x8c, 0x8f, 0xd1, 0x0c, 0x74,
	0x66, 0xc8, 0x45, 0xaf, 0xb0, 0x5f, 0x66, 0x96, 0xd6, 0xcc, 0x73, 0x62, 0x06, 0x2c, 0xa7, 0xfc,
	0x34, 0x3e, 0x86, 0x06, 0xca, 0x83, 0xf5, 0x7c, 0xf1, 0xed, 0xa7, 0xa0, 0x7f, 0xdd, 0xad, 0xa9,
	0x37, 0x61, 0x88, 0x79, 0x7a, 0x33, 0x11, 0x6b, 0x45, 0xee, 0x7d, 0x8b, 0x36, 0x95, 0x25, 0x11,
	0x1e, 0x93, 0x2b, 0x70, 0x8c, 0x7f, 0xfd, 0xf2, 0x3f, 0xa2, 0xc2, 0x9c, 0x90, 0x36, 0x23, 0x21,
	0x14, 0x82, 0xbc, 0x02, 0x47, 0xd9, 0x47, 0x26, 0x8f, 0xa6, 0x96, 0xf6, 0x45, 0xb4, 0xcb, 0x99,
	0x22, 0xa1, 0xfa, 0x97, 0xe0, 0x28, 0xbb, 0x89, 0x17, 0xab, 0x8f, 0x8a, 0x68, 0x17, 0x53, 0x45,
	0x42, 0xd5, 0x2f, 0xc3, 0x30, 0xb7, 0x17, 0x2f, 0xa6, 0x16, 0xc4, 0x32, 0xb2, 0xca, 0x5f, 0x87,
	0xd1, 0xe4, 0x8d, 0xf8, 0x5c, 0x3a, 0x0e, 0x27, 0xde, 0x0d, 0x64, 0xb8, 0xc9, 0x96, 0x83, 0x0c,
	0xc4, 0x3b, 0x81, 0x8c, 0x6d, 0xa0, 0xd3, 0x21, 0x79, 0x71, 0x59, 0xc8, 0x6d, 0x38, 0x1e, 0x7b,
	0x61, 0x74, 0x41, 0x58, 0x94, 0x93, 0xd2, 0x66, 0x65, 0xa4, 0xc4, 0x38, 0x74, 0x4e, 0xc8, 0xc0,
	0x21, 0x52, 0x59, 0x38, 0xdc, 0x4b, 0x1c, 0x06, 0x87, 0x3e, 0xb1, 0xc9, 0xc0, 0x21, 0x52, 0x59,
	0x38, 0xdc, 0xab, 0x19, 0x13, 0x54, 0xc1, 0x6b, 0x98, 0xc9, 0x74, 0x1d, 0x81, 0x9c, 0x56, 0x92,
	0x93, 0x0b, 0xd1, 0x9e, 0x83, 0xc3, 0xed, 0x07, 0x2b, 0xe7, 0x45, 0x85, 0xc3, 0x6c, 0x71, 0xc3,
	0xc7, 0x9f, 0x99, 0xbc, 0x08, 0x47, 0xa2, 0x8f, 0x46, 0xc6, 0x45, 0xa5, 0x22, 0x02, 0xda, 0xa5,
	0x0c, 0x81, 0x50, 0x31, 0x02, 0x55, 0xf0, 0xaa, 0x63, 0x32, 0xb1, 0x38, 0x23, 0x97, 0x02, 0xc3,
	0x35, 0x40, 0x0b, 0xce, 0xa5, 0x3e, 0xe5, 0xb8, 0x92, 0xa1, 0x28, 0x56, 0x42, 0x1e, 0xba, 0x06,
	0x27, 0x45, 0x4f, 0x36, 0x2e, 0x65, 0x22, 0x12, 0x41, 0x79, 0xa0, 0x37, 0x60, 0x2c, 0xe3, 0x89,
	0xc6, 0x62, 0x86, 0x2a, 0x41, 0x19, 0x79, 0xf8, 0x9f, 0x2a, 0x30, 0x9b, 0xeb, 0xd9, 0xc2, 0xff,
	0xe7, 0x67, 0xc3, 0x6a, 0x90, 0xe7, 0xf6, 0x73, 0x05, 0xe6, 0xf2, 0x3d, 0x12, 0x59, 0xea, 0x9c,
	0x1c, 0x55, 0x21, 0xcf, 0xce, 0x86, 0xd3, 0xe2, 0x47, 0x10, 0x97, 0x13, 0x35, 0xf0, 0xa2, 0xe2,
	0x6d, 0x43, 0x52, 0x2c, 0xeb, 0x1b, 0x74, 0x34, 0x24, 0x3d, 0x6b, 0xb8, 0x22, 0x8d, 0x4b, 0x4b,
	0xe4, 0x83, 0xdf, 0x87, 0xd1, 0xe4, 0x07, 0x0b, 0x73, 0xd2, 0xd8, 0xbe, 0x78, 0x3e, 0xe0, 0xaf,
	0xc0, 0xd9, 0xb4, 0xb7, 0x0a, 0xf3, 0xd2, 0xd0, 0x74, 0x2b, 0x95, 0x0b, 0x7c, 0x97, 0xce, 0x03,
	0xdc, 0x3b, 0x85, 0x4b, 0x12, 0x3a, 0x7c, 0xc1, 0x7c, 0x60, 0x4d, 0x28, 0x24, 0xbe, 0x2b, 0x98,
	0x95, 0x44, 0xc4, 0xd2, 0xdd, 0xda, 0x88, 0xe3, 0xff, 0x65, 0x6c, 0xf4, 0x05, 0xf3, 0x81, 0xbd,
	0x0e, 0x67, 0x12, 0x62, 0xfe, 0xa7, 0xa5, 0xd4, 0x90, 0x51, 0x9a, 0x0b, 0xf2, 0x36, 0x9c, 0x4f,
	0x0f, 0xe3, 0x5f, 0x90, 0x47, 0xee, 0x68, 0xe8, 0xb4, 0x40, 0x4b, 0x89, 0xd0, 0x2f, 0xc9, 0xa3,
	0xe7, 0x1f, 0x3c, 0xf1, 0x49, 0x83, 0x8d, 0xce, 0xbf, 0x22, 0x0f, 0xde, 0xc9, 0xf0, 0x69, 0x40,
	0x21, 0x31, 0xda, 0x5c, 0xd8, 0xa3, 0x93, 0xa4, 0xb5, 0xc9, 0x74, 0xe9, 0x10, 0xd1, 0x82, 0x91,
	0xa4, 0x00, 0xfc, 0x19, 0x29, 0x40, 0x22, 0x2c, 0x8d, 0xe7, 0xc0, 0x68, 0x72, 0xa4, 0xf8, 0x5c,
	0x96, 0x12, 0x46, 0x5c, 0x1a, 0x93, 0xa9, 0x55, 0x2e, 0x7e, 0x7e, 0x56, 0x0e, 0x32, 0xa7, 0x95,
	0x26, 0x9c, 0x49, 0x08, 0xf6, 0x9e, 0x4e, 0xd7, 0x10, 0x95, 0x95, 0x46, 0x7b, 0x0d, 0x4e, 0x8b,
	0x03, 0xdf, 0x2f, 0x4b, 0x80, 0xe5, 0xb4, 0xec, 0x15, 0x38, 0xca, 0x06, 0x8b, 0x0b, 0x4f, 0xcb,
	0x8c, 0x88, 0xf8, 0x30, 0x2e, 0x0e, 0x0d, 0x37, 0x41, 0x15, 0xc4, 0x77, 0x4f, 0x26, 0x2b, 0x88,
	0xca, 0x89, 0xcf, 0x10, 0x29, 0x71, 0xda, 0x6f, 0x2a, 0xa0, 0xa5, 0xc4, 0x46, 0x27, 0xa9, 0x4b,
	0x90, 0xd7, 0x9e, 0xcc, 0x27, 0x1f, 0xd2, 0xb8, 0x09, 0x43, 0x4c, 0xac, 0xf3, 0x44, 0xb2, 0x1e,
	0x22, 0x21, 0xf6, 0xd0, 0x88, 0x02, 0x9b, 0xd5, 0x9b, 0x30, 0xcc, 0xdd, 0xe8, 0x08, 0x5d, 0x10,
	0xac, 0x8c, 0x76, 0x21, 0x4d, 0x26, 0xd2, 0x58, 0x23, 0x49, 0x8e, 0xf8, 0x99, 0x34, 0x05, 0x9c,
	0xb0, 0x24, 0xda, 0x2d, 0x38, 0x9f, 0xee, 0x5f, 0x5f, 0x48, 0x53, 0x23, 0x2c, 0xd2, 0x35, 0x32,
	0x75, 0x01, 0xe7, 0x41, 0x26, 0x45, 0x3a, 0x45, 0xe6, 0x3d, 0xe3, 0x12, 0xc8, 0x5c, 0x91, 0xae,
	0x91, 0xe5, 0x6d, 0xe6, 0x8a, 0x48, 0x22, 0x3b, 0xa0, 0xa5, 0xf8, 0xb4, 0x4b, 0xd9, 0xb0, 0x51,
	0x79, 0x49, 0xcc, 0x2d, 0x50, 0x05, 0x3e, 0xe9, 0xc9, 0xb4, 0xb2, 0x6d, 0x39, 0x49, 0x8c, 0x2a,
	0x9c, 0x14, 0x39, 0x9f, 0x2f, 0x65, 0x82, 0xd0, 0x8d, 0x84, 0x1c, 0x4a, 0x64, 0xbc, 0x53, 0x97,
	0x52, 0xea, 0x78, 0xa7, 0x0e, 0x25, 0x39, 0xdd, 0xaf, 0xc2, 0x30, 0xf7, 0x9e, 0x41, 0xa8, 0x9b,
	0x95, 0x11, 0xcf, 0x55, 0xc2, 0x97, 0x16, 0x5b, 0x70, 0x3c, 0xf6, 0xac, 0xe1, 0x42, 0x72, 0xe9,
	0xb6, 0x54, 0x0e, 0x8c, 0x1d, 0x38, 0x29, 0x7a, 0xde, 0x70, 0x29, 0x59, 0x01, 0x23, 0xd8, 0x31,
	0x52, 0xb8, 0x96, 0x65, 0x21, 0x85, 0x8b, 0x99, 0x3c, 0x52, 0x15, 0x4e, 0xc4, 0x5f, 0x14, 0x5c,
	0xcc, 0xc2, 0xc1, 0x62, 0x9d, 0xb5, 0x4e, 0x18, 0x35, 0x9f, 0xda, 0x3a, 0x81, 0x54, 0x0e, 0x8c,
	0x6d, 0x50, 0x05, 0x01, 0xf0, 0x93, 0x99, 0x28, 0x58, 0x2e, 0x07, 0xce, 0x0b, 0x00, 0x91, 0xd0,
	0xf7, 0xb1, 0xe4, 0x72, 0xd8, 0x7d, 0x28, 0xaf, 0xf7, 0x26, 0x0c, 0x31, 0x91, 0xe7, 0x13, 0x29,
	0xe3, 0x03, 0x4b, 0xa4, 0xe9, 0x66, 0x03, 0xc1, 0x55, 0x13, 0x4e, 0x8b, 0xa3, 0xc0, 0x2f, 0xa7,
	0xd1, 0x63, 0x44, 0x73, 0x58, 0xd2, 0x80, 0x91, 0xa4, 0x98, 0xf0, 0x99, 0x4c, 0xbc, 0x8e, 0x46,
	0x66, 0x33, 0xb0, 0x8f, 0x0f, 0x11, 0x4f, 0xb1, 0x8f, 0x13, 0xd5, 0x16, 0x24, 0x44, 0x39, 0xd8,
	0x3d, 0x38, 0x93, 0x10, 0xf0, 0x3d, 0x9d, 0xac, 0x8c, 0x97, 0xd5, 0xae, 0x64, 0xcb, 0x72, 0xb8,
	0xb7, 0x61, 0x34, 0x39, 0x00, 0x7b, 0x2e, 0x55, 0x1d, 0x2f, 0xae, 0x3d, 0x26, 0x25, 0x1e, 0x1b,
	0x6b, 0xc7, 0x63, 0x71, 0xb7, 0xe2, 0xf1, 0xcc, 0x49, 0x89, 0xaf, 0x05, 0x12, 0x43, 0x69, 0x19,
	0x9c, 0xb4, 0x6b, 0x0e, 0x5e, 0x2a, 0x0b, 0x87, 0xbb, 0xe6, 0xf8, 0x8e, 0x02, 0x67, 0xd3, 0x42,
	0x5a, 0xe7, 0xd3, 0xb5, 0xc5, 0x0a, 0x68, 0xff, 0x9b, 0xb3, 0x40, 0xc8, 0xe4, 0x2d, 0x05, 0xc6,
	0x32, 0xc2, 0x53, 0x17, 0x65, 0x75, 0xb7, 0xcb, 0x68, 0x57, 0xf3, 0x97, 0x89, 0x38, 0x05, 0x47,
	0x92, 0x22, 0x52, 0x67, 0xd2, 0xd5, 0x32, 0xc2, 0x09, 0x3d, 0x2d, 0x3d, 0xca, 0x14, 0x1f, 0xb3,
	0x52, 0x62, 0x4c, 0x4b, 0x32, 0x3a, 0x23, 0xf5, 0xf0, 0x64, 0x3e, 0xf9, 0xb4, 0x3a, 0x08, 0x42,
	0x4b, 0xa5, 0xea, 0x80, 0x0a, 0xcb, 0xd5, 0x01, 0x17, 0x2e, 0xaa, 0x0d, 0x7e, 0xfd, 0xfe, 0xdd,
	0x69, 0x65, 0x79, 0xe1, 0xfd, 0x8f, 0xc7, 0x94, 0x0f, 0x3e, 0x1e, 0x53, 0xfe, 0xfd, 0xf1, 0x98,
	0xf2, 0xd6, 0x27, 0x63, 0x07, 0x3e, 0xf8, 0x64, 0xec, 0xc0, 0x3f, 0x3f, 0x19, 0x3b, 0x70, 0x73,
	0x24, 0xfe, 0x5f, 0x51, 0xe2, 0x70, 0xb7, 0xad, 0x83, 0xf8, 0x7f, 0xd1, 0x7c, 0xec, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x92, 0x76, 0xbf, 0xba, 0x9f, 0x54, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	AddressRegister(ctx context.Context, in *MsgAddressRegister, opts ...grpc.CallOption) (*MsgAddressRegisterResponse, error)
	AddressRevoke(ctx context.Context, in *MsgAddressRevoke, opts ...grpc.CallOption) (*MsgAddressRevokeResponse, error)
	AgreementOpen(ctx context.Context, in *MsgAgreementOpen, opts ...grpc.CallOption) (*MsgAgreementResponse, error)
	AgreementClose(ctx context.Context, in *MsgAgreementClose, opts ...grpc.CallOption) (*MsgAgreementResponse, error)
	AgreementCapacityIncrease(ctx context.Context, in *MsgAgreementCapacityIncrease, opts ...grpc.CallOption) (*MsgAgreementResponse, error)
	AgreementCapacityDecrease(ctx context.Context, in *MsgAgreementCapacityDecrease, opts ...grpc.CallOption) (*MsgAgreementResponse, error)
	AgreementDurationIncrease(ctx context.Context, in *MsgAgreementDurationIncrease, opts ...grpc.CallOption) (*MsgAgreementResponse, error)
	AllocationCreate(ctx context.Context, in *MsgAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error)
	AllocationDelete(ctx context.Context, in *MsgAllocationDelete, opts ...grpc.CallOption) (*MsgAllocationDeleteResponse, error)
	AllocationUpdate(ctx context.Context, in *MsgAllocationUpdate, opts ...grpc.CallOption) (*MsgAllocationUpdateResponse, error)
	AllocationTransfer(ctx context.Context, in *MsgAllocationTransfer, opts ...grpc.CallOption) (*MsgAllocationTransferResponse, error)
	FleetMove(ctx context.Context, in *MsgFleetMove, opts ...grpc.CallOption) (*MsgFleetMoveResponse, error)
	GuildCreate(ctx context.Context, in *MsgGuildCreate, opts ...grpc.CallOption) (*MsgGuildCreateResponse, error)
	GuildUpdateOwnerId(ctx context.Context, in *MsgGuildUpdateOwnerId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateEntrySubstationId(ctx context.Context, in *MsgGuildUpdateEntrySubstationId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateEndpoint(ctx context.Context, in *MsgGuildUpdateEndpoint, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinInfusionMinimum(ctx context.Context, in *MsgGuildUpdateJoinInfusionMinimum, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinInfusionMinimumBypassByInvite(ctx context.Context, in *MsgGuildUpdateJoinInfusionMinimumBypassByInvite, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinInfusionMinimumBypassByRequest(ctx context.Context, in *MsgGuildUpdateJoinInfusionMinimumBypassByRequest, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildMembershipInvite(ctx context.Context, in *MsgGuildMembershipInvite, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipInviteApprove(ctx context.Context, in *MsgGuildMembershipInviteApprove, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipInviteDeny(ctx context.Context, in *MsgGuildMembershipInviteDeny, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipInviteRevoke(ctx context.Context, in *MsgGuildMembershipInviteRevoke, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipJoin(ctx context.Context, in *MsgGuildMembershipJoin, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipJoinProxy(ctx context.Context, in *MsgGuildMembershipJoinProxy, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipKick(ctx context.Context, in *MsgGuildMembershipKick, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequest(ctx context.Context, in *MsgGuildMembershipRequest, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequestApprove(ctx context.Context, in *MsgGuildMembershipRequestApprove, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequestDeny(ctx context.Context, in *MsgGuildMembershipRequestDeny, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequestRevoke(ctx context.Context, in *MsgGuildMembershipRequestRevoke, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error)
	PermissionGrantOnAddress(ctx context.Context, in *MsgPermissionGrantOnAddress, opts ...grpc.CallOption) (*MsgPermissionResponse, error)
	PermissionGrantOnObject(ctx context.Context, in *MsgPermissionGrantOnObject, opts ...grpc.CallOption) (*MsgPermissionResponse, error)
	PermissionRevokeOnAddress(ctx context.Context, in *MsgPermissionRevokeOnAddress, opts ...grpc.CallOption) (*MsgPermissionResponse, error)
	PermissionRevokeOnObject(ctx context.Context, in *MsgPermissionRevokeOnObject, opts ...grpc.CallOption) (*MsgPermissionResponse, error)
	PermissionSetOnAddress(ctx context.Context, in *MsgPermissionSetOnAddress, opts ...grpc.CallOption) (*MsgPermissionResponse, error)
	PermissionSetOnObject(ctx context.Context, in *MsgPermissionSetOnObject, opts ...grpc.CallOption) (*MsgPermissionResponse, error)
	PlanetExplore(ctx context.Context, in *MsgPlanetExplore, opts ...grpc.CallOption) (*MsgPlanetExploreResponse, error)
	PlanetRaidComplete(ctx context.Context, in *MsgPlanetRaidComplete, opts ...grpc.CallOption) (*MsgPlanetRaidCompleteResponse, error)
	PlayerUpdatePrimaryAddress(ctx context.Context, in *MsgPlayerUpdatePrimaryAddress, opts ...grpc.CallOption) (*MsgPlayerUpdatePrimaryAddressResponse, error)
	PlayerResume(ctx context.Context, in *MsgPlayerResume, opts ...grpc.CallOption) (*MsgPlayerResumeResponse, error)
	ProviderCreate(ctx context.Context, in *MsgProviderCreate, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderWithdrawBalance(ctx context.Context, in *MsgProviderWithdrawBalance, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderUpdateCapacityMinimum(ctx context.Context, in *MsgProviderUpdateCapacityMinimum, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderUpdateCapacityMaximum(ctx context.Context, in *MsgProviderUpdateCapacityMaximum, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderUpdateDurationMinimum(ctx context.Context, in *MsgProviderUpdateDurationMinimum, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderUpdateDurationMaximum(ctx context.Context, in *MsgProviderUpdateDurationMaximum, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderUpdateAccessPolicy(ctx context.Context, in *MsgProviderUpdateAccessPolicy, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderGuildGrant(ctx context.Context, in *MsgProviderGuildGrant, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderGuildRevoke(ctx context.Context, in *MsgProviderGuildRevoke, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	ProviderDelete(ctx context.Context, in *MsgProviderDelete, opts ...grpc.CallOption) (*MsgProviderResponse, error)
	StructActivate(ctx context.Context, in *MsgStructActivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructDeactivate(ctx context.Context, in *MsgStructDeactivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructBuildInitiate(ctx context.Context, in *MsgStructBuildInitiate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructBuildComplete(ctx context.Context, in *MsgStructBuildComplete, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructBuildCancel(ctx context.Context, in *MsgStructBuildCancel, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructDefenseSet(ctx context.Context, in *MsgStructDefenseSet, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructDefenseClear(ctx context.Context, in *MsgStructDefenseClear, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructMove(ctx context.Context, in *MsgStructMove, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructAttack(ctx context.Context, in *MsgStructAttack, opts ...grpc.CallOption) (*MsgStructAttackResponse, error)
	StructStealthActivate(ctx context.Context, in *MsgStructStealthActivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructStealthDeactivate(ctx context.Context, in *MsgStructStealthDeactivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error)
	StructGeneratorInfuse(ctx context.Context, in *MsgStructGeneratorInfuse, opts ...grpc.CallOption) (*MsgStructGeneratorStatusResponse, error)
	StructOreMinerComplete(ctx context.Context, in *MsgStructOreMinerComplete, opts ...grpc.CallOption) (*MsgStructOreMinerStatusResponse, error)
	StructOreRefineryComplete(ctx context.Context, in *MsgStructOreRefineryComplete, opts ...grpc.CallOption) (*MsgStructOreRefineryStatusResponse, error)
	SubstationCreate(ctx context.Context, in *MsgSubstationCreate, opts ...grpc.CallOption) (*MsgSubstationCreateResponse, error)
	SubstationDelete(ctx context.Context, in *MsgSubstationDelete, opts ...grpc.CallOption) (*MsgSubstationDeleteResponse, error)
	SubstationAllocationConnect(ctx context.Context, in *MsgSubstationAllocationConnect, opts ...grpc.CallOption) (*MsgSubstationAllocationConnectResponse, error)
	SubstationAllocationDisconnect(ctx context.Context, in *MsgSubstationAllocationDisconnect, opts ...grpc.CallOption) (*MsgSubstationAllocationDisconnectResponse, error)
	SubstationPlayerConnect(ctx context.Context, in *MsgSubstationPlayerConnect, opts ...grpc.CallOption) (*MsgSubstationPlayerConnectResponse, error)
	SubstationPlayerDisconnect(ctx context.Context, in *MsgSubstationPlayerDisconnect, opts ...grpc.CallOption) (*MsgSubstationPlayerDisconnectResponse, error)
	SubstationPlayerMigrate(ctx context.Context, in *MsgSubstationPlayerMigrate, opts ...grpc.CallOption) (*MsgSubstationPlayerMigrateResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddressRegister(ctx context.Context, in *MsgAddressRegister, opts ...grpc.CallOption) (*MsgAddressRegisterResponse, error) {
	out := new(MsgAddressRegisterResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AddressRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddressRevoke(ctx context.Context, in *MsgAddressRevoke, opts ...grpc.CallOption) (*MsgAddressRevokeResponse, error) {
	out := new(MsgAddressRevokeResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AddressRevoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AgreementOpen(ctx context.Context, in *MsgAgreementOpen, opts ...grpc.CallOption) (*MsgAgreementResponse, error) {
	out := new(MsgAgreementResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AgreementOpen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AgreementClose(ctx context.Context, in *MsgAgreementClose, opts ...grpc.CallOption) (*MsgAgreementResponse, error) {
	out := new(MsgAgreementResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AgreementClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AgreementCapacityIncrease(ctx context.Context, in *MsgAgreementCapacityIncrease, opts ...grpc.CallOption) (*MsgAgreementResponse, error) {
	out := new(MsgAgreementResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AgreementCapacityIncrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AgreementCapacityDecrease(ctx context.Context, in *MsgAgreementCapacityDecrease, opts ...grpc.CallOption) (*MsgAgreementResponse, error) {
	out := new(MsgAgreementResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AgreementCapacityDecrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AgreementDurationIncrease(ctx context.Context, in *MsgAgreementDurationIncrease, opts ...grpc.CallOption) (*MsgAgreementResponse, error) {
	out := new(MsgAgreementResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AgreementDurationIncrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AllocationCreate(ctx context.Context, in *MsgAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error) {
	out := new(MsgAllocationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AllocationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AllocationDelete(ctx context.Context, in *MsgAllocationDelete, opts ...grpc.CallOption) (*MsgAllocationDeleteResponse, error) {
	out := new(MsgAllocationDeleteResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AllocationDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AllocationUpdate(ctx context.Context, in *MsgAllocationUpdate, opts ...grpc.CallOption) (*MsgAllocationUpdateResponse, error) {
	out := new(MsgAllocationUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AllocationUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AllocationTransfer(ctx context.Context, in *MsgAllocationTransfer, opts ...grpc.CallOption) (*MsgAllocationTransferResponse, error) {
	out := new(MsgAllocationTransferResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/AllocationTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FleetMove(ctx context.Context, in *MsgFleetMove, opts ...grpc.CallOption) (*MsgFleetMoveResponse, error) {
	out := new(MsgFleetMoveResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/FleetMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildCreate(ctx context.Context, in *MsgGuildCreate, opts ...grpc.CallOption) (*MsgGuildCreateResponse, error) {
	out := new(MsgGuildCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateOwnerId(ctx context.Context, in *MsgGuildUpdateOwnerId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildUpdateOwnerId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateEntrySubstationId(ctx context.Context, in *MsgGuildUpdateEntrySubstationId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildUpdateEntrySubstationId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateEndpoint(ctx context.Context, in *MsgGuildUpdateEndpoint, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildUpdateEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateJoinInfusionMinimum(ctx context.Context, in *MsgGuildUpdateJoinInfusionMinimum, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildUpdateJoinInfusionMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateJoinInfusionMinimumBypassByInvite(ctx context.Context, in *MsgGuildUpdateJoinInfusionMinimumBypassByInvite, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildUpdateJoinInfusionMinimumBypassByInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateJoinInfusionMinimumBypassByRequest(ctx context.Context, in *MsgGuildUpdateJoinInfusionMinimumBypassByRequest, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildUpdateJoinInfusionMinimumBypassByRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipInvite(ctx context.Context, in *MsgGuildMembershipInvite, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipInviteApprove(ctx context.Context, in *MsgGuildMembershipInviteApprove, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipInviteApprove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipInviteDeny(ctx context.Context, in *MsgGuildMembershipInviteDeny, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipInviteDeny", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipInviteRevoke(ctx context.Context, in *MsgGuildMembershipInviteRevoke, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipInviteRevoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipJoin(ctx context.Context, in *MsgGuildMembershipJoin, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipJoinProxy(ctx context.Context, in *MsgGuildMembershipJoinProxy, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipJoinProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipKick(ctx context.Context, in *MsgGuildMembershipKick, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipKick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipRequest(ctx context.Context, in *MsgGuildMembershipRequest, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipRequestApprove(ctx context.Context, in *MsgGuildMembershipRequestApprove, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipRequestApprove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipRequestDeny(ctx context.Context, in *MsgGuildMembershipRequestDeny, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipRequestDeny", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildMembershipRequestRevoke(ctx context.Context, in *MsgGuildMembershipRequestRevoke, opts ...grpc.CallOption) (*MsgGuildMembershipResponse, error) {
	out := new(MsgGuildMembershipResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/GuildMembershipRequestRevoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PermissionGrantOnAddress(ctx context.Context, in *MsgPermissionGrantOnAddress, opts ...grpc.CallOption) (*MsgPermissionResponse, error) {
	out := new(MsgPermissionResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PermissionGrantOnAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PermissionGrantOnObject(ctx context.Context, in *MsgPermissionGrantOnObject, opts ...grpc.CallOption) (*MsgPermissionResponse, error) {
	out := new(MsgPermissionResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PermissionGrantOnObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PermissionRevokeOnAddress(ctx context.Context, in *MsgPermissionRevokeOnAddress, opts ...grpc.CallOption) (*MsgPermissionResponse, error) {
	out := new(MsgPermissionResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PermissionRevokeOnAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PermissionRevokeOnObject(ctx context.Context, in *MsgPermissionRevokeOnObject, opts ...grpc.CallOption) (*MsgPermissionResponse, error) {
	out := new(MsgPermissionResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PermissionRevokeOnObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PermissionSetOnAddress(ctx context.Context, in *MsgPermissionSetOnAddress, opts ...grpc.CallOption) (*MsgPermissionResponse, error) {
	out := new(MsgPermissionResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PermissionSetOnAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PermissionSetOnObject(ctx context.Context, in *MsgPermissionSetOnObject, opts ...grpc.CallOption) (*MsgPermissionResponse, error) {
	out := new(MsgPermissionResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PermissionSetOnObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlanetExplore(ctx context.Context, in *MsgPlanetExplore, opts ...grpc.CallOption) (*MsgPlanetExploreResponse, error) {
	out := new(MsgPlanetExploreResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PlanetExplore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlanetRaidComplete(ctx context.Context, in *MsgPlanetRaidComplete, opts ...grpc.CallOption) (*MsgPlanetRaidCompleteResponse, error) {
	out := new(MsgPlanetRaidCompleteResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PlanetRaidComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlayerUpdatePrimaryAddress(ctx context.Context, in *MsgPlayerUpdatePrimaryAddress, opts ...grpc.CallOption) (*MsgPlayerUpdatePrimaryAddressResponse, error) {
	out := new(MsgPlayerUpdatePrimaryAddressResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PlayerUpdatePrimaryAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlayerResume(ctx context.Context, in *MsgPlayerResume, opts ...grpc.CallOption) (*MsgPlayerResumeResponse, error) {
	out := new(MsgPlayerResumeResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/PlayerResume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderCreate(ctx context.Context, in *MsgProviderCreate, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderWithdrawBalance(ctx context.Context, in *MsgProviderWithdrawBalance, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderWithdrawBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderUpdateCapacityMinimum(ctx context.Context, in *MsgProviderUpdateCapacityMinimum, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderUpdateCapacityMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderUpdateCapacityMaximum(ctx context.Context, in *MsgProviderUpdateCapacityMaximum, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderUpdateCapacityMaximum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderUpdateDurationMinimum(ctx context.Context, in *MsgProviderUpdateDurationMinimum, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderUpdateDurationMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderUpdateDurationMaximum(ctx context.Context, in *MsgProviderUpdateDurationMaximum, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderUpdateDurationMaximum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderUpdateAccessPolicy(ctx context.Context, in *MsgProviderUpdateAccessPolicy, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderUpdateAccessPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderGuildGrant(ctx context.Context, in *MsgProviderGuildGrant, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderGuildGrant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderGuildRevoke(ctx context.Context, in *MsgProviderGuildRevoke, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderGuildRevoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProviderDelete(ctx context.Context, in *MsgProviderDelete, opts ...grpc.CallOption) (*MsgProviderResponse, error) {
	out := new(MsgProviderResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/ProviderDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructActivate(ctx context.Context, in *MsgStructActivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructActivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructDeactivate(ctx context.Context, in *MsgStructDeactivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructDeactivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructBuildInitiate(ctx context.Context, in *MsgStructBuildInitiate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructBuildInitiate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructBuildComplete(ctx context.Context, in *MsgStructBuildComplete, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructBuildComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructBuildCancel(ctx context.Context, in *MsgStructBuildCancel, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructBuildCancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructDefenseSet(ctx context.Context, in *MsgStructDefenseSet, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructDefenseSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructDefenseClear(ctx context.Context, in *MsgStructDefenseClear, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructDefenseClear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructMove(ctx context.Context, in *MsgStructMove, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructAttack(ctx context.Context, in *MsgStructAttack, opts ...grpc.CallOption) (*MsgStructAttackResponse, error) {
	out := new(MsgStructAttackResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructAttack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructStealthActivate(ctx context.Context, in *MsgStructStealthActivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructStealthActivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructStealthDeactivate(ctx context.Context, in *MsgStructStealthDeactivate, opts ...grpc.CallOption) (*MsgStructStatusResponse, error) {
	out := new(MsgStructStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructStealthDeactivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructGeneratorInfuse(ctx context.Context, in *MsgStructGeneratorInfuse, opts ...grpc.CallOption) (*MsgStructGeneratorStatusResponse, error) {
	out := new(MsgStructGeneratorStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructGeneratorInfuse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructOreMinerComplete(ctx context.Context, in *MsgStructOreMinerComplete, opts ...grpc.CallOption) (*MsgStructOreMinerStatusResponse, error) {
	out := new(MsgStructOreMinerStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructOreMinerComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructOreRefineryComplete(ctx context.Context, in *MsgStructOreRefineryComplete, opts ...grpc.CallOption) (*MsgStructOreRefineryStatusResponse, error) {
	out := new(MsgStructOreRefineryStatusResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/StructOreRefineryComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationCreate(ctx context.Context, in *MsgSubstationCreate, opts ...grpc.CallOption) (*MsgSubstationCreateResponse, error) {
	out := new(MsgSubstationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationDelete(ctx context.Context, in *MsgSubstationDelete, opts ...grpc.CallOption) (*MsgSubstationDeleteResponse, error) {
	out := new(MsgSubstationDeleteResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationAllocationConnect(ctx context.Context, in *MsgSubstationAllocationConnect, opts ...grpc.CallOption) (*MsgSubstationAllocationConnectResponse, error) {
	out := new(MsgSubstationAllocationConnectResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationAllocationConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationAllocationDisconnect(ctx context.Context, in *MsgSubstationAllocationDisconnect, opts ...grpc.CallOption) (*MsgSubstationAllocationDisconnectResponse, error) {
	out := new(MsgSubstationAllocationDisconnectResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationAllocationDisconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationPlayerConnect(ctx context.Context, in *MsgSubstationPlayerConnect, opts ...grpc.CallOption) (*MsgSubstationPlayerConnectResponse, error) {
	out := new(MsgSubstationPlayerConnectResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationPlayerConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationPlayerDisconnect(ctx context.Context, in *MsgSubstationPlayerDisconnect, opts ...grpc.CallOption) (*MsgSubstationPlayerDisconnectResponse, error) {
	out := new(MsgSubstationPlayerDisconnectResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationPlayerDisconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationPlayerMigrate(ctx context.Context, in *MsgSubstationPlayerMigrate, opts ...grpc.CallOption) (*MsgSubstationPlayerMigrateResponse, error) {
	out := new(MsgSubstationPlayerMigrateResponse)
	err := c.cc.Invoke(ctx, "/structs.structs.Msg/SubstationPlayerMigrate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	AddressRegister(context.Context, *MsgAddressRegister) (*MsgAddressRegisterResponse, error)
	AddressRevoke(context.Context, *MsgAddressRevoke) (*MsgAddressRevokeResponse, error)
	AgreementOpen(context.Context, *MsgAgreementOpen) (*MsgAgreementResponse, error)
	AgreementClose(context.Context, *MsgAgreementClose) (*MsgAgreementResponse, error)
	AgreementCapacityIncrease(context.Context, *MsgAgreementCapacityIncrease) (*MsgAgreementResponse, error)
	AgreementCapacityDecrease(context.Context, *MsgAgreementCapacityDecrease) (*MsgAgreementResponse, error)
	AgreementDurationIncrease(context.Context, *MsgAgreementDurationIncrease) (*MsgAgreementResponse, error)
	AllocationCreate(context.Context, *MsgAllocationCreate) (*MsgAllocationCreateResponse, error)
	AllocationDelete(context.Context, *MsgAllocationDelete) (*MsgAllocationDeleteResponse, error)
	AllocationUpdate(context.Context, *MsgAllocationUpdate) (*MsgAllocationUpdateResponse, error)
	AllocationTransfer(context.Context, *MsgAllocationTransfer) (*MsgAllocationTransferResponse, error)
	FleetMove(context.Context, *MsgFleetMove) (*MsgFleetMoveResponse, error)
	GuildCreate(context.Context, *MsgGuildCreate) (*MsgGuildCreateResponse, error)
	GuildUpdateOwnerId(context.Context, *MsgGuildUpdateOwnerId) (*MsgGuildUpdateResponse, error)
	GuildUpdateEntrySubstationId(context.Context, *MsgGuildUpdateEntrySubstationId) (*MsgGuildUpdateResponse, error)
	GuildUpdateEndpoint(context.Context, *MsgGuildUpdateEndpoint) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinInfusionMinimum(context.Context, *MsgGuildUpdateJoinInfusionMinimum) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinInfusionMinimumBypassByInvite(context.Context, *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinInfusionMinimumBypassByRequest(context.Context, *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) (*MsgGuildUpdateResponse, error)
	GuildMembershipInvite(context.Context, *MsgGuildMembershipInvite) (*MsgGuildMembershipResponse, error)
	GuildMembershipInviteApprove(context.Context, *MsgGuildMembershipInviteApprove) (*MsgGuildMembershipResponse, error)
	GuildMembershipInviteDeny(context.Context, *MsgGuildMembershipInviteDeny) (*MsgGuildMembershipResponse, error)
	GuildMembershipInviteRevoke(context.Context, *MsgGuildMembershipInviteRevoke) (*MsgGuildMembershipResponse, error)
	GuildMembershipJoin(context.Context, *MsgGuildMembershipJoin) (*MsgGuildMembershipResponse, error)
	GuildMembershipJoinProxy(context.Context, *MsgGuildMembershipJoinProxy) (*MsgGuildMembershipResponse, error)
	GuildMembershipKick(context.Context, *MsgGuildMembershipKick) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequest(context.Context, *MsgGuildMembershipRequest) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequestApprove(context.Context, *MsgGuildMembershipRequestApprove) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequestDeny(context.Context, *MsgGuildMembershipRequestDeny) (*MsgGuildMembershipResponse, error)
	GuildMembershipRequestRevoke(context.Context, *MsgGuildMembershipRequestRevoke) (*MsgGuildMembershipResponse, error)
	PermissionGrantOnAddress(context.Context, *MsgPermissionGrantOnAddress) (*MsgPermissionResponse, error)
	PermissionGrantOnObject(context.Context, *MsgPermissionGrantOnObject) (*MsgPermissionResponse, error)
	PermissionRevokeOnAddress(context.Context, *MsgPermissionRevokeOnAddress) (*MsgPermissionResponse, error)
	PermissionRevokeOnObject(context.Context, *MsgPermissionRevokeOnObject) (*MsgPermissionResponse, error)
	PermissionSetOnAddress(context.Context, *MsgPermissionSetOnAddress) (*MsgPermissionResponse, error)
	PermissionSetOnObject(context.Context, *MsgPermissionSetOnObject) (*MsgPermissionResponse, error)
	PlanetExplore(context.Context, *MsgPlanetExplore) (*MsgPlanetExploreResponse, error)
	PlanetRaidComplete(context.Context, *MsgPlanetRaidComplete) (*MsgPlanetRaidCompleteResponse, error)
	PlayerUpdatePrimaryAddress(context.Context, *MsgPlayerUpdatePrimaryAddress) (*MsgPlayerUpdatePrimaryAddressResponse, error)
	PlayerResume(context.Context, *MsgPlayerResume) (*MsgPlayerResumeResponse, error)
	ProviderCreate(context.Context, *MsgProviderCreate) (*MsgProviderResponse, error)
	ProviderWithdrawBalance(context.Context, *MsgProviderWithdrawBalance) (*MsgProviderResponse, error)
	ProviderUpdateCapacityMinimum(context.Context, *MsgProviderUpdateCapacityMinimum) (*MsgProviderResponse, error)
	ProviderUpdateCapacityMaximum(context.Context, *MsgProviderUpdateCapacityMaximum) (*MsgProviderResponse, error)
	ProviderUpdateDurationMinimum(context.Context, *MsgProviderUpdateDurationMinimum) (*MsgProviderResponse, error)
	ProviderUpdateDurationMaximum(context.Context, *MsgProviderUpdateDurationMaximum) (*MsgProviderResponse, error)
	ProviderUpdateAccessPolicy(context.Context, *MsgProviderUpdateAccessPolicy) (*MsgProviderResponse, error)
	ProviderGuildGrant(context.Context, *MsgProviderGuildGrant) (*MsgProviderResponse, error)
	ProviderGuildRevoke(context.Context, *MsgProviderGuildRevoke) (*MsgProviderResponse, error)
	ProviderDelete(context.Context, *MsgProviderDelete) (*MsgProviderResponse, error)
	StructActivate(context.Context, *MsgStructActivate) (*MsgStructStatusResponse, error)
	StructDeactivate(context.Context, *MsgStructDeactivate) (*MsgStructStatusResponse, error)
	StructBuildInitiate(context.Context, *MsgStructBuildInitiate) (*MsgStructStatusResponse, error)
	StructBuildComplete(context.Context, *MsgStructBuildComplete) (*MsgStructStatusResponse, error)
	StructBuildCancel(context.Context, *MsgStructBuildCancel) (*MsgStructStatusResponse, error)
	StructDefenseSet(context.Context, *MsgStructDefenseSet) (*MsgStructStatusResponse, error)
	StructDefenseClear(context.Context, *MsgStructDefenseClear) (*MsgStructStatusResponse, error)
	StructMove(context.Context, *MsgStructMove) (*MsgStructStatusResponse, error)
	StructAttack(context.Context, *MsgStructAttack) (*MsgStructAttackResponse, error)
	StructStealthActivate(context.Context, *MsgStructStealthActivate) (*MsgStructStatusResponse, error)
	StructStealthDeactivate(context.Context, *MsgStructStealthDeactivate) (*MsgStructStatusResponse, error)
	StructGeneratorInfuse(context.Context, *MsgStructGeneratorInfuse) (*MsgStructGeneratorStatusResponse, error)
	StructOreMinerComplete(context.Context, *MsgStructOreMinerComplete) (*MsgStructOreMinerStatusResponse, error)
	StructOreRefineryComplete(context.Context, *MsgStructOreRefineryComplete) (*MsgStructOreRefineryStatusResponse, error)
	SubstationCreate(context.Context, *MsgSubstationCreate) (*MsgSubstationCreateResponse, error)
	SubstationDelete(context.Context, *MsgSubstationDelete) (*MsgSubstationDeleteResponse, error)
	SubstationAllocationConnect(context.Context, *MsgSubstationAllocationConnect) (*MsgSubstationAllocationConnectResponse, error)
	SubstationAllocationDisconnect(context.Context, *MsgSubstationAllocationDisconnect) (*MsgSubstationAllocationDisconnectResponse, error)
	SubstationPlayerConnect(context.Context, *MsgSubstationPlayerConnect) (*MsgSubstationPlayerConnectResponse, error)
	SubstationPlayerDisconnect(context.Context, *MsgSubstationPlayerDisconnect) (*MsgSubstationPlayerDisconnectResponse, error)
	SubstationPlayerMigrate(context.Context, *MsgSubstationPlayerMigrate) (*MsgSubstationPlayerMigrateResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) AddressRegister(ctx context.Context, req *MsgAddressRegister) (*MsgAddressRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddressRegister not implemented")
}
func (*UnimplementedMsgServer) AddressRevoke(ctx context.Context, req *MsgAddressRevoke) (*MsgAddressRevokeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddressRevoke not implemented")
}
func (*UnimplementedMsgServer) AgreementOpen(ctx context.Context, req *MsgAgreementOpen) (*MsgAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreementOpen not implemented")
}
func (*UnimplementedMsgServer) AgreementClose(ctx context.Context, req *MsgAgreementClose) (*MsgAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreementClose not implemented")
}
func (*UnimplementedMsgServer) AgreementCapacityIncrease(ctx context.Context, req *MsgAgreementCapacityIncrease) (*MsgAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreementCapacityIncrease not implemented")
}
func (*UnimplementedMsgServer) AgreementCapacityDecrease(ctx context.Context, req *MsgAgreementCapacityDecrease) (*MsgAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreementCapacityDecrease not implemented")
}
func (*UnimplementedMsgServer) AgreementDurationIncrease(ctx context.Context, req *MsgAgreementDurationIncrease) (*MsgAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreementDurationIncrease not implemented")
}
func (*UnimplementedMsgServer) AllocationCreate(ctx context.Context, req *MsgAllocationCreate) (*MsgAllocationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocationCreate not implemented")
}
func (*UnimplementedMsgServer) AllocationDelete(ctx context.Context, req *MsgAllocationDelete) (*MsgAllocationDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocationDelete not implemented")
}
func (*UnimplementedMsgServer) AllocationUpdate(ctx context.Context, req *MsgAllocationUpdate) (*MsgAllocationUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocationUpdate not implemented")
}
func (*UnimplementedMsgServer) AllocationTransfer(ctx context.Context, req *MsgAllocationTransfer) (*MsgAllocationTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocationTransfer not implemented")
}
func (*UnimplementedMsgServer) FleetMove(ctx context.Context, req *MsgFleetMove) (*MsgFleetMoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FleetMove not implemented")
}
func (*UnimplementedMsgServer) GuildCreate(ctx context.Context, req *MsgGuildCreate) (*MsgGuildCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildCreate not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateOwnerId(ctx context.Context, req *MsgGuildUpdateOwnerId) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateOwnerId not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateEntrySubstationId(ctx context.Context, req *MsgGuildUpdateEntrySubstationId) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateEntrySubstationId not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateEndpoint(ctx context.Context, req *MsgGuildUpdateEndpoint) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateEndpoint not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateJoinInfusionMinimum(ctx context.Context, req *MsgGuildUpdateJoinInfusionMinimum) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateJoinInfusionMinimum not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateJoinInfusionMinimumBypassByInvite(ctx context.Context, req *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateJoinInfusionMinimumBypassByInvite not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateJoinInfusionMinimumBypassByRequest(ctx context.Context, req *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateJoinInfusionMinimumBypassByRequest not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipInvite(ctx context.Context, req *MsgGuildMembershipInvite) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipInvite not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipInviteApprove(ctx context.Context, req *MsgGuildMembershipInviteApprove) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipInviteApprove not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipInviteDeny(ctx context.Context, req *MsgGuildMembershipInviteDeny) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipInviteDeny not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipInviteRevoke(ctx context.Context, req *MsgGuildMembershipInviteRevoke) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipInviteRevoke not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipJoin(ctx context.Context, req *MsgGuildMembershipJoin) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipJoin not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipJoinProxy(ctx context.Context, req *MsgGuildMembershipJoinProxy) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipJoinProxy not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipKick(ctx context.Context, req *MsgGuildMembershipKick) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipKick not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipRequest(ctx context.Context, req *MsgGuildMembershipRequest) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipRequest not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipRequestApprove(ctx context.Context, req *MsgGuildMembershipRequestApprove) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipRequestApprove not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipRequestDeny(ctx context.Context, req *MsgGuildMembershipRequestDeny) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipRequestDeny not implemented")
}
func (*UnimplementedMsgServer) GuildMembershipRequestRevoke(ctx context.Context, req *MsgGuildMembershipRequestRevoke) (*MsgGuildMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildMembershipRequestRevoke not implemented")
}
func (*UnimplementedMsgServer) PermissionGrantOnAddress(ctx context.Context, req *MsgPermissionGrantOnAddress) (*MsgPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissionGrantOnAddress not implemented")
}
func (*UnimplementedMsgServer) PermissionGrantOnObject(ctx context.Context, req *MsgPermissionGrantOnObject) (*MsgPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissionGrantOnObject not implemented")
}
func (*UnimplementedMsgServer) PermissionRevokeOnAddress(ctx context.Context, req *MsgPermissionRevokeOnAddress) (*MsgPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissionRevokeOnAddress not implemented")
}
func (*UnimplementedMsgServer) PermissionRevokeOnObject(ctx context.Context, req *MsgPermissionRevokeOnObject) (*MsgPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissionRevokeOnObject not implemented")
}
func (*UnimplementedMsgServer) PermissionSetOnAddress(ctx context.Context, req *MsgPermissionSetOnAddress) (*MsgPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissionSetOnAddress not implemented")
}
func (*UnimplementedMsgServer) PermissionSetOnObject(ctx context.Context, req *MsgPermissionSetOnObject) (*MsgPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissionSetOnObject not implemented")
}
func (*UnimplementedMsgServer) PlanetExplore(ctx context.Context, req *MsgPlanetExplore) (*MsgPlanetExploreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlanetExplore not implemented")
}
func (*UnimplementedMsgServer) PlanetRaidComplete(ctx context.Context, req *MsgPlanetRaidComplete) (*MsgPlanetRaidCompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlanetRaidComplete not implemented")
}
func (*UnimplementedMsgServer) PlayerUpdatePrimaryAddress(ctx context.Context, req *MsgPlayerUpdatePrimaryAddress) (*MsgPlayerUpdatePrimaryAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerUpdatePrimaryAddress not implemented")
}
func (*UnimplementedMsgServer) PlayerResume(ctx context.Context, req *MsgPlayerResume) (*MsgPlayerResumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerResume not implemented")
}
func (*UnimplementedMsgServer) ProviderCreate(ctx context.Context, req *MsgProviderCreate) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderCreate not implemented")
}
func (*UnimplementedMsgServer) ProviderWithdrawBalance(ctx context.Context, req *MsgProviderWithdrawBalance) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderWithdrawBalance not implemented")
}
func (*UnimplementedMsgServer) ProviderUpdateCapacityMinimum(ctx context.Context, req *MsgProviderUpdateCapacityMinimum) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderUpdateCapacityMinimum not implemented")
}
func (*UnimplementedMsgServer) ProviderUpdateCapacityMaximum(ctx context.Context, req *MsgProviderUpdateCapacityMaximum) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderUpdateCapacityMaximum not implemented")
}
func (*UnimplementedMsgServer) ProviderUpdateDurationMinimum(ctx context.Context, req *MsgProviderUpdateDurationMinimum) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderUpdateDurationMinimum not implemented")
}
func (*UnimplementedMsgServer) ProviderUpdateDurationMaximum(ctx context.Context, req *MsgProviderUpdateDurationMaximum) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderUpdateDurationMaximum not implemented")
}
func (*UnimplementedMsgServer) ProviderUpdateAccessPolicy(ctx context.Context, req *MsgProviderUpdateAccessPolicy) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderUpdateAccessPolicy not implemented")
}
func (*UnimplementedMsgServer) ProviderGuildGrant(ctx context.Context, req *MsgProviderGuildGrant) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderGuildGrant not implemented")
}
func (*UnimplementedMsgServer) ProviderGuildRevoke(ctx context.Context, req *MsgProviderGuildRevoke) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderGuildRevoke not implemented")
}
func (*UnimplementedMsgServer) ProviderDelete(ctx context.Context, req *MsgProviderDelete) (*MsgProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderDelete not implemented")
}
func (*UnimplementedMsgServer) StructActivate(ctx context.Context, req *MsgStructActivate) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructActivate not implemented")
}
func (*UnimplementedMsgServer) StructDeactivate(ctx context.Context, req *MsgStructDeactivate) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructDeactivate not implemented")
}
func (*UnimplementedMsgServer) StructBuildInitiate(ctx context.Context, req *MsgStructBuildInitiate) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructBuildInitiate not implemented")
}
func (*UnimplementedMsgServer) StructBuildComplete(ctx context.Context, req *MsgStructBuildComplete) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructBuildComplete not implemented")
}
func (*UnimplementedMsgServer) StructBuildCancel(ctx context.Context, req *MsgStructBuildCancel) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructBuildCancel not implemented")
}
func (*UnimplementedMsgServer) StructDefenseSet(ctx context.Context, req *MsgStructDefenseSet) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructDefenseSet not implemented")
}
func (*UnimplementedMsgServer) StructDefenseClear(ctx context.Context, req *MsgStructDefenseClear) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructDefenseClear not implemented")
}
func (*UnimplementedMsgServer) StructMove(ctx context.Context, req *MsgStructMove) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructMove not implemented")
}
func (*UnimplementedMsgServer) StructAttack(ctx context.Context, req *MsgStructAttack) (*MsgStructAttackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructAttack not implemented")
}
func (*UnimplementedMsgServer) StructStealthActivate(ctx context.Context, req *MsgStructStealthActivate) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructStealthActivate not implemented")
}
func (*UnimplementedMsgServer) StructStealthDeactivate(ctx context.Context, req *MsgStructStealthDeactivate) (*MsgStructStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructStealthDeactivate not implemented")
}
func (*UnimplementedMsgServer) StructGeneratorInfuse(ctx context.Context, req *MsgStructGeneratorInfuse) (*MsgStructGeneratorStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructGeneratorInfuse not implemented")
}
func (*UnimplementedMsgServer) StructOreMinerComplete(ctx context.Context, req *MsgStructOreMinerComplete) (*MsgStructOreMinerStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructOreMinerComplete not implemented")
}
func (*UnimplementedMsgServer) StructOreRefineryComplete(ctx context.Context, req *MsgStructOreRefineryComplete) (*MsgStructOreRefineryStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructOreRefineryComplete not implemented")
}
func (*UnimplementedMsgServer) SubstationCreate(ctx context.Context, req *MsgSubstationCreate) (*MsgSubstationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationCreate not implemented")
}
func (*UnimplementedMsgServer) SubstationDelete(ctx context.Context, req *MsgSubstationDelete) (*MsgSubstationDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationDelete not implemented")
}
func (*UnimplementedMsgServer) SubstationAllocationConnect(ctx context.Context, req *MsgSubstationAllocationConnect) (*MsgSubstationAllocationConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationAllocationConnect not implemented")
}
func (*UnimplementedMsgServer) SubstationAllocationDisconnect(ctx context.Context, req *MsgSubstationAllocationDisconnect) (*MsgSubstationAllocationDisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationAllocationDisconnect not implemented")
}
func (*UnimplementedMsgServer) SubstationPlayerConnect(ctx context.Context, req *MsgSubstationPlayerConnect) (*MsgSubstationPlayerConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationPlayerConnect not implemented")
}
func (*UnimplementedMsgServer) SubstationPlayerDisconnect(ctx context.Context, req *MsgSubstationPlayerDisconnect) (*MsgSubstationPlayerDisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationPlayerDisconnect not implemented")
}
func (*UnimplementedMsgServer) SubstationPlayerMigrate(ctx context.Context, req *MsgSubstationPlayerMigrate) (*MsgSubstationPlayerMigrateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationPlayerMigrate not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddressRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddressRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddressRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AddressRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddressRegister(ctx, req.(*MsgAddressRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddressRevoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddressRevoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddressRevoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AddressRevoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddressRevoke(ctx, req.(*MsgAddressRevoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AgreementOpen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAgreementOpen)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AgreementOpen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AgreementOpen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AgreementOpen(ctx, req.(*MsgAgreementOpen))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AgreementClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAgreementClose)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AgreementClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AgreementClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AgreementClose(ctx, req.(*MsgAgreementClose))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AgreementCapacityIncrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAgreementCapacityIncrease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AgreementCapacityIncrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AgreementCapacityIncrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AgreementCapacityIncrease(ctx, req.(*MsgAgreementCapacityIncrease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AgreementCapacityDecrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAgreementCapacityDecrease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AgreementCapacityDecrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AgreementCapacityDecrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AgreementCapacityDecrease(ctx, req.(*MsgAgreementCapacityDecrease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AgreementDurationIncrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAgreementDurationIncrease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AgreementDurationIncrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AgreementDurationIncrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AgreementDurationIncrease(ctx, req.(*MsgAgreementDurationIncrease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AllocationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAllocationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AllocationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AllocationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AllocationCreate(ctx, req.(*MsgAllocationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AllocationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAllocationDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AllocationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AllocationDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AllocationDelete(ctx, req.(*MsgAllocationDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AllocationUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAllocationUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AllocationUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AllocationUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AllocationUpdate(ctx, req.(*MsgAllocationUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AllocationTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAllocationTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AllocationTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/AllocationTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AllocationTransfer(ctx, req.(*MsgAllocationTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FleetMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFleetMove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FleetMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/FleetMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FleetMove(ctx, req.(*MsgFleetMove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildCreate(ctx, req.(*MsgGuildCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateOwnerId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateOwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateOwnerId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildUpdateOwnerId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateOwnerId(ctx, req.(*MsgGuildUpdateOwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateEntrySubstationId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateEntrySubstationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateEntrySubstationId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildUpdateEntrySubstationId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateEntrySubstationId(ctx, req.(*MsgGuildUpdateEntrySubstationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateEndpoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildUpdateEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateEndpoint(ctx, req.(*MsgGuildUpdateEndpoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateJoinInfusionMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateJoinInfusionMinimum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateJoinInfusionMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildUpdateJoinInfusionMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateJoinInfusionMinimum(ctx, req.(*MsgGuildUpdateJoinInfusionMinimum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateJoinInfusionMinimumBypassByInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateJoinInfusionMinimumBypassByInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateJoinInfusionMinimumBypassByInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildUpdateJoinInfusionMinimumBypassByInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateJoinInfusionMinimumBypassByInvite(ctx, req.(*MsgGuildUpdateJoinInfusionMinimumBypassByInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateJoinInfusionMinimumBypassByRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateJoinInfusionMinimumBypassByRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateJoinInfusionMinimumBypassByRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildUpdateJoinInfusionMinimumBypassByRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateJoinInfusionMinimumBypassByRequest(ctx, req.(*MsgGuildUpdateJoinInfusionMinimumBypassByRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipInvite(ctx, req.(*MsgGuildMembershipInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipInviteApprove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipInviteApprove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipInviteApprove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipInviteApprove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipInviteApprove(ctx, req.(*MsgGuildMembershipInviteApprove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipInviteDeny_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipInviteDeny)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipInviteDeny(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipInviteDeny",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipInviteDeny(ctx, req.(*MsgGuildMembershipInviteDeny))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipInviteRevoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipInviteRevoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipInviteRevoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipInviteRevoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipInviteRevoke(ctx, req.(*MsgGuildMembershipInviteRevoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipJoin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipJoin(ctx, req.(*MsgGuildMembershipJoin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipJoinProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipJoinProxy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipJoinProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipJoinProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipJoinProxy(ctx, req.(*MsgGuildMembershipJoinProxy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipKick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipKick)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipKick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipKick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipKick(ctx, req.(*MsgGuildMembershipKick))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipRequest(ctx, req.(*MsgGuildMembershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipRequestApprove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipRequestApprove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipRequestApprove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipRequestApprove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipRequestApprove(ctx, req.(*MsgGuildMembershipRequestApprove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipRequestDeny_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipRequestDeny)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipRequestDeny(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipRequestDeny",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipRequestDeny(ctx, req.(*MsgGuildMembershipRequestDeny))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildMembershipRequestRevoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildMembershipRequestRevoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildMembershipRequestRevoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/GuildMembershipRequestRevoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildMembershipRequestRevoke(ctx, req.(*MsgGuildMembershipRequestRevoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PermissionGrantOnAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPermissionGrantOnAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PermissionGrantOnAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PermissionGrantOnAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PermissionGrantOnAddress(ctx, req.(*MsgPermissionGrantOnAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PermissionGrantOnObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPermissionGrantOnObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PermissionGrantOnObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PermissionGrantOnObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PermissionGrantOnObject(ctx, req.(*MsgPermissionGrantOnObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PermissionRevokeOnAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPermissionRevokeOnAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PermissionRevokeOnAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PermissionRevokeOnAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PermissionRevokeOnAddress(ctx, req.(*MsgPermissionRevokeOnAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PermissionRevokeOnObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPermissionRevokeOnObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PermissionRevokeOnObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PermissionRevokeOnObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PermissionRevokeOnObject(ctx, req.(*MsgPermissionRevokeOnObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PermissionSetOnAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPermissionSetOnAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PermissionSetOnAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PermissionSetOnAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PermissionSetOnAddress(ctx, req.(*MsgPermissionSetOnAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PermissionSetOnObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPermissionSetOnObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PermissionSetOnObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PermissionSetOnObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PermissionSetOnObject(ctx, req.(*MsgPermissionSetOnObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlanetExplore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlanetExplore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlanetExplore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PlanetExplore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlanetExplore(ctx, req.(*MsgPlanetExplore))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlanetRaidComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlanetRaidComplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlanetRaidComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PlanetRaidComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlanetRaidComplete(ctx, req.(*MsgPlanetRaidComplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlayerUpdatePrimaryAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlayerUpdatePrimaryAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlayerUpdatePrimaryAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PlayerUpdatePrimaryAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlayerUpdatePrimaryAddress(ctx, req.(*MsgPlayerUpdatePrimaryAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlayerResume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlayerResume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlayerResume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/PlayerResume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlayerResume(ctx, req.(*MsgPlayerResume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderCreate(ctx, req.(*MsgProviderCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderWithdrawBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderWithdrawBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderWithdrawBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderWithdrawBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderWithdrawBalance(ctx, req.(*MsgProviderWithdrawBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderUpdateCapacityMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderUpdateCapacityMinimum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderUpdateCapacityMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderUpdateCapacityMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderUpdateCapacityMinimum(ctx, req.(*MsgProviderUpdateCapacityMinimum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderUpdateCapacityMaximum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderUpdateCapacityMaximum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderUpdateCapacityMaximum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderUpdateCapacityMaximum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderUpdateCapacityMaximum(ctx, req.(*MsgProviderUpdateCapacityMaximum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderUpdateDurationMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderUpdateDurationMinimum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderUpdateDurationMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderUpdateDurationMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderUpdateDurationMinimum(ctx, req.(*MsgProviderUpdateDurationMinimum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderUpdateDurationMaximum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderUpdateDurationMaximum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderUpdateDurationMaximum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderUpdateDurationMaximum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderUpdateDurationMaximum(ctx, req.(*MsgProviderUpdateDurationMaximum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderUpdateAccessPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderUpdateAccessPolicy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderUpdateAccessPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderUpdateAccessPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderUpdateAccessPolicy(ctx, req.(*MsgProviderUpdateAccessPolicy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderGuildGrant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderGuildGrant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderGuildGrant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderGuildGrant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderGuildGrant(ctx, req.(*MsgProviderGuildGrant))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderGuildRevoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderGuildRevoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderGuildRevoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderGuildRevoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderGuildRevoke(ctx, req.(*MsgProviderGuildRevoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProviderDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProviderDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProviderDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/ProviderDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProviderDelete(ctx, req.(*MsgProviderDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructActivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructActivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructActivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructActivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructActivate(ctx, req.(*MsgStructActivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructDeactivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructDeactivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructDeactivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructDeactivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructDeactivate(ctx, req.(*MsgStructDeactivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructBuildInitiate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructBuildInitiate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructBuildInitiate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructBuildInitiate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructBuildInitiate(ctx, req.(*MsgStructBuildInitiate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructBuildComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructBuildComplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructBuildComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructBuildComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructBuildComplete(ctx, req.(*MsgStructBuildComplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructBuildCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructBuildCancel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructBuildCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructBuildCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructBuildCancel(ctx, req.(*MsgStructBuildCancel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructDefenseSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructDefenseSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructDefenseSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructDefenseSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructDefenseSet(ctx, req.(*MsgStructDefenseSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructDefenseClear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructDefenseClear)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructDefenseClear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructDefenseClear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructDefenseClear(ctx, req.(*MsgStructDefenseClear))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructMove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructMove(ctx, req.(*MsgStructMove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructAttack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructAttack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructAttack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructAttack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructAttack(ctx, req.(*MsgStructAttack))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructStealthActivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructStealthActivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructStealthActivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructStealthActivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructStealthActivate(ctx, req.(*MsgStructStealthActivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructStealthDeactivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructStealthDeactivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructStealthDeactivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructStealthDeactivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructStealthDeactivate(ctx, req.(*MsgStructStealthDeactivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructGeneratorInfuse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructGeneratorInfuse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructGeneratorInfuse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructGeneratorInfuse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructGeneratorInfuse(ctx, req.(*MsgStructGeneratorInfuse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructOreMinerComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructOreMinerComplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructOreMinerComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructOreMinerComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructOreMinerComplete(ctx, req.(*MsgStructOreMinerComplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructOreRefineryComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructOreRefineryComplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructOreRefineryComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/StructOreRefineryComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructOreRefineryComplete(ctx, req.(*MsgStructOreRefineryComplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationCreate(ctx, req.(*MsgSubstationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationDelete(ctx, req.(*MsgSubstationDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationAllocationConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationAllocationConnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationAllocationConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationAllocationConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationAllocationConnect(ctx, req.(*MsgSubstationAllocationConnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationAllocationDisconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationAllocationDisconnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationAllocationDisconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationAllocationDisconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationAllocationDisconnect(ctx, req.(*MsgSubstationAllocationDisconnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationPlayerConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationPlayerConnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationPlayerConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationPlayerConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationPlayerConnect(ctx, req.(*MsgSubstationPlayerConnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationPlayerDisconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationPlayerDisconnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationPlayerDisconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationPlayerDisconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationPlayerDisconnect(ctx, req.(*MsgSubstationPlayerDisconnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationPlayerMigrate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationPlayerMigrate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationPlayerMigrate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.structs.Msg/SubstationPlayerMigrate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationPlayerMigrate(ctx, req.(*MsgSubstationPlayerMigrate))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "structs.structs.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "AddressRegister",
			Handler:    _Msg_AddressRegister_Handler,
		},
		{
			MethodName: "AddressRevoke",
			Handler:    _Msg_AddressRevoke_Handler,
		},
		{
			MethodName: "AgreementOpen",
			Handler:    _Msg_AgreementOpen_Handler,
		},
		{
			MethodName: "AgreementClose",
			Handler:    _Msg_AgreementClose_Handler,
		},
		{
			MethodName: "AgreementCapacityIncrease",
			Handler:    _Msg_AgreementCapacityIncrease_Handler,
		},
		{
			MethodName: "AgreementCapacityDecrease",
			Handler:    _Msg_AgreementCapacityDecrease_Handler,
		},
		{
			MethodName: "AgreementDurationIncrease",
			Handler:    _Msg_AgreementDurationIncrease_Handler,
		},
		{
			MethodName: "AllocationCreate",
			Handler:    _Msg_AllocationCreate_Handler,
		},
		{
			MethodName: "AllocationDelete",
			Handler:    _Msg_AllocationDelete_Handler,
		},
		{
			MethodName: "AllocationUpdate",
			Handler:    _Msg_AllocationUpdate_Handler,
		},
		{
			MethodName: "AllocationTransfer",
			Handler:    _Msg_AllocationTransfer_Handler,
		},
		{
			MethodName: "FleetMove",
			Handler:    _Msg_FleetMove_Handler,
		},
		{
			MethodName: "GuildCreate",
			Handler:    _Msg_GuildCreate_Handler,
		},
		{
			MethodName: "GuildUpdateOwnerId",
			Handler:    _Msg_GuildUpdateOwnerId_Handler,
		},
		{
			MethodName: "GuildUpdateEntrySubstationId",
			Handler:    _Msg_GuildUpdateEntrySubstationId_Handler,
		},
		{
			MethodName: "GuildUpdateEndpoint",
			Handler:    _Msg_GuildUpdateEndpoint_Handler,
		},
		{
			MethodName: "GuildUpdateJoinInfusionMinimum",
			Handler:    _Msg_GuildUpdateJoinInfusionMinimum_Handler,
		},
		{
			MethodName: "GuildUpdateJoinInfusionMinimumBypassByInvite",
			Handler:    _Msg_GuildUpdateJoinInfusionMinimumBypassByInvite_Handler,
		},
		{
			MethodName: "GuildUpdateJoinInfusionMinimumBypassByRequest",
			Handler:    _Msg_GuildUpdateJoinInfusionMinimumBypassByRequest_Handler,
		},
		{
			MethodName: "GuildMembershipInvite",
			Handler:    _Msg_GuildMembershipInvite_Handler,
		},
		{
			MethodName: "GuildMembershipInviteApprove",
			Handler:    _Msg_GuildMembershipInviteApprove_Handler,
		},
		{
			MethodName: "GuildMembershipInviteDeny",
			Handler:    _Msg_GuildMembershipInviteDeny_Handler,
		},
		{
			MethodName: "GuildMembershipInviteRevoke",
			Handler:    _Msg_GuildMembershipInviteRevoke_Handler,
		},
		{
			MethodName: "GuildMembershipJoin",
			Handler:    _Msg_GuildMembershipJoin_Handler,
		},
		{
			MethodName: "GuildMembershipJoinProxy",
			Handler:    _Msg_GuildMembershipJoinProxy_Handler,
		},
		{
			MethodName: "GuildMembershipKick",
			Handler:    _Msg_GuildMembershipKick_Handler,
		},
		{
			MethodName: "GuildMembershipRequest",
			Handler:    _Msg_GuildMembershipRequest_Handler,
		},
		{
			MethodName: "GuildMembershipRequestApprove",
			Handler:    _Msg_GuildMembershipRequestApprove_Handler,
		},
		{
			MethodName: "GuildMembershipRequestDeny",
			Handler:    _Msg_GuildMembershipRequestDeny_Handler,
		},
		{
			MethodName: "GuildMembershipRequestRevoke",
			Handler:    _Msg_GuildMembershipRequestRevoke_Handler,
		},
		{
			MethodName: "PermissionGrantOnAddress",
			Handler:    _Msg_PermissionGrantOnAddress_Handler,
		},
		{
			MethodName: "PermissionGrantOnObject",
			Handler:    _Msg_PermissionGrantOnObject_Handler,
		},
		{
			MethodName: "PermissionRevokeOnAddress",
			Handler:    _Msg_PermissionRevokeOnAddress_Handler,
		},
		{
			MethodName: "PermissionRevokeOnObject",
			Handler:    _Msg_PermissionRevokeOnObject_Handler,
		},
		{
			MethodName: "PermissionSetOnAddress",
			Handler:    _Msg_PermissionSetOnAddress_Handler,
		},
		{
			MethodName: "PermissionSetOnObject",
			Handler:    _Msg_PermissionSetOnObject_Handler,
		},
		{
			MethodName: "PlanetExplore",
			Handler:    _Msg_PlanetExplore_Handler,
		},
		{
			MethodName: "PlanetRaidComplete",
			Handler:    _Msg_PlanetRaidComplete_Handler,
		},
		{
			MethodName: "PlayerUpdatePrimaryAddress",
			Handler:    _Msg_PlayerUpdatePrimaryAddress_Handler,
		},
		{
			MethodName: "PlayerResume",
			Handler:    _Msg_PlayerResume_Handler,
		},
		{
			MethodName: "ProviderCreate",
			Handler:    _Msg_ProviderCreate_Handler,
		},
		{
			MethodName: "ProviderWithdrawBalance",
			Handler:    _Msg_ProviderWithdrawBalance_Handler,
		},
		{
			MethodName: "ProviderUpdateCapacityMinimum",
			Handler:    _Msg_ProviderUpdateCapacityMinimum_Handler,
		},
		{
			MethodName: "ProviderUpdateCapacityMaximum",
			Handler:    _Msg_ProviderUpdateCapacityMaximum_Handler,
		},
		{
			MethodName: "ProviderUpdateDurationMinimum",
			Handler:    _Msg_ProviderUpdateDurationMinimum_Handler,
		},
		{
			MethodName: "ProviderUpdateDurationMaximum",
			Handler:    _Msg_ProviderUpdateDurationMaximum_Handler,
		},
		{
			MethodName: "ProviderUpdateAccessPolicy",
			Handler:    _Msg_ProviderUpdateAccessPolicy_Handler,
		},
		{
			MethodName: "ProviderGuildGrant",
			Handler:    _Msg_ProviderGuildGrant_Handler,
		},
		{
			MethodName: "ProviderGuildRevoke",
			Handler:    _Msg_ProviderGuildRevoke_Handler,
		},
		{
			MethodName: "ProviderDelete",
			Handler:    _Msg_ProviderDelete_Handler,
		},
		{
			MethodName: "StructActivate",
			Handler:    _Msg_StructActivate_Handler,
		},
		{
			MethodName: "StructDeactivate",
			Handler:    _Msg_StructDeactivate_Handler,
		},
		{
			MethodName: "StructBuildInitiate",
			Handler:    _Msg_StructBuildInitiate_Handler,
		},
		{
			MethodName: "StructBuildComplete",
			Handler:    _Msg_StructBuildComplete_Handler,
		},
		{
			MethodName: "StructBuildCancel",
			Handler:    _Msg_StructBuildCancel_Handler,
		},
		{
			MethodName: "StructDefenseSet",
			Handler:    _Msg_StructDefenseSet_Handler,
		},
		{
			MethodName: "StructDefenseClear",
			Handler:    _Msg_StructDefenseClear_Handler,
		},
		{
			MethodName: "StructMove",
			Handler:    _Msg_StructMove_Handler,
		},
		{
			MethodName: "StructAttack",
			Handler:    _Msg_StructAttack_Handler,
		},
		{
			MethodName: "StructStealthActivate",
			Handler:    _Msg_StructStealthActivate_Handler,
		},
		{
			MethodName: "StructStealthDeactivate",
			Handler:    _Msg_StructStealthDeactivate_Handler,
		},
		{
			MethodName: "StructGeneratorInfuse",
			Handler:    _Msg_StructGeneratorInfuse_Handler,
		},
		{
			MethodName: "StructOreMinerComplete",
			Handler:    _Msg_StructOreMinerComplete_Handler,
		},
		{
			MethodName: "StructOreRefineryComplete",
			Handler:    _Msg_StructOreRefineryComplete_Handler,
		},
		{
			MethodName: "SubstationCreate",
			Handler:    _Msg_SubstationCreate_Handler,
		},
		{
			MethodName: "SubstationDelete",
			Handler:    _Msg_SubstationDelete_Handler,
		},
		{
			MethodName: "SubstationAllocationConnect",
			Handler:    _Msg_SubstationAllocationConnect_Handler,
		},
		{
			MethodName: "SubstationAllocationDisconnect",
			Handler:    _Msg_SubstationAllocationDisconnect_Handler,
		},
		{
			MethodName: "SubstationPlayerConnect",
			Handler:    _Msg_SubstationPlayerConnect_Handler,
		},
		{
			MethodName: "SubstationPlayerDisconnect",
			Handler:    _Msg_SubstationPlayerDisconnect_Handler,
		},
		{
			MethodName: "SubstationPlayerMigrate",
			Handler:    _Msg_SubstationPlayerMigrate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "structs/structs/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddressRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x30
	}
	if len(m.ProofSignature) > 0 {
		i -= len(m.ProofSignature)
		copy(dAtA[i:], m.ProofSignature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProofSignature)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ProofPubKey) > 0 {
		i -= len(m.ProofPubKey)
		copy(dAtA[i:], m.ProofPubKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProofPubKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddressRegisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRegisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRegisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddressRevoke) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRevoke) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRevoke) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddressRevokeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRevokeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRevokeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAllocationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x28
	}
	if m.AllocationType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AllocationType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.SourceObjectId) > 0 {
		i -= len(m.SourceObjectId)
		copy(dAtA[i:], m.SourceObjectId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceObjectId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationDelete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationDelete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationDelete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x18
	}
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationUpdateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationUpdateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFleetMove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFleetMove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFleetMove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DestinationLocationId) > 0 {
		i -= len(m.DestinationLocationId)
		copy(dAtA[i:], m.DestinationLocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestinationLocationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FleetId) > 0 {
		i -= len(m.FleetId)
		copy(dAtA[i:], m.FleetId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FleetId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFleetMoveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFleetMoveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFleetMoveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Fleet != nil {
		{
			size, err := m.Fleet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EntrySubstationId) > 0 {
		i -= len(m.EntrySubstationId)
		copy(dAtA[i:], m.EntrySubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntrySubstationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Endpoint) > 0 {
		i -= len(m.Endpoint)
		copy(dAtA[i:], m.Endpoint)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Endpoint)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateOwnerId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateOwnerId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateOwnerId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateEntrySubstationId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateEntrySubstationId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateEntrySubstationId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EntrySubstationId) > 0 {
		i -= len(m.EntrySubstationId)
		copy(dAtA[i:], m.EntrySubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntrySubstationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Endpoint) > 0 {
		i -= len(m.Endpoint)
		copy(dAtA[i:], m.Endpoint)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Endpoint)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateJoinInfusionMinimum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateJoinInfusionMinimum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateJoinInfusionMinimum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.JoinInfusionMinimum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.JoinInfusionMinimum))
		i--
		dAtA[i] = 0x18
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GuildJoinBypassLevel != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildJoinBypassLevel))
		i--
		dAtA[i] = 0x18
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GuildJoinBypassLevel != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildJoinBypassLevel))
		i--
		dAtA[i] = 0x18
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipInviteApprove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipInviteApprove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipInviteApprove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipInviteDeny) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipInviteDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipInviteDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipInviteRevoke) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipInviteRevoke) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipInviteRevoke) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipJoin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipJoin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipJoin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InfusionId) > 0 {
		for iNdEx := len(m.InfusionId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InfusionId[iNdEx])
			copy(dAtA[i:], m.InfusionId[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.InfusionId[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipJoinProxy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipJoinProxy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipJoinProxy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProofSignature) > 0 {
		i -= len(m.ProofSignature)
		copy(dAtA[i:], m.ProofSignature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProofSignature)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ProofPubKey) > 0 {
		i -= len(m.ProofPubKey)
		copy(dAtA[i:], m.ProofPubKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProofPubKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipKick) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipKick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipKick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipRequestApprove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipRequestApprove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipRequestApprove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipRequestDeny) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipRequestDeny) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipRequestDeny) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipRequestRevoke) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipRequestRevoke) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipRequestRevoke) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GuildId) > 0 {
		i -= len(m.GuildId)
		copy(dAtA[i:], m.GuildId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildMembershipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildMembershipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildMembershipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GuildMembershipApplication != nil {
		{
			size, err := m.GuildMembershipApplication.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionGrantOnObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionGrantOnObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionGrantOnObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectId) > 0 {
		i -= len(m.ObjectId)
		copy(dAtA[i:], m.ObjectId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionGrantOnAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionGrantOnAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionGrantOnAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionRevokeOnObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionRevokeOnObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionRevokeOnObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectId) > 0 {
		i -= len(m.ObjectId)
		copy(dAtA[i:], m.ObjectId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionRevokeOnAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionRevokeOnAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionRevokeOnAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionSetOnObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionSetOnObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionSetOnObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectId) > 0 {
		i -= len(m.ObjectId)
		copy(dAtA[i:], m.ObjectId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionSetOnAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionSetOnAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionSetOnAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPermissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPermissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPermissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPlanetExplore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlanetExplore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlanetExplore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlanetExploreResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlanetExploreResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlanetExploreResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Planet.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgPlanetRaidComplete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlanetRaidComplete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlanetRaidComplete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FleetId) > 0 {
		i -= len(m.FleetId)
		copy(dAtA[i:], m.FleetId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FleetId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlanetRaidCompleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlanetRaidCompleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlanetRaidCompleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OreStolen != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OreStolen))
		i--
		dAtA[i] = 0x18
	}
	{
		size, err := m.Planet.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Fleet.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgPlayerUpdatePrimaryAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerUpdatePrimaryAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerUpdatePrimaryAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PrimaryAddress) > 0 {
		i -= len(m.PrimaryAddress)
		copy(dAtA[i:], m.PrimaryAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PrimaryAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPlayerResume) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerResume) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerResume) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerResumeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerResumeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerResumeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgStructStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructActivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructActivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructActivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructDeactivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructDeactivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructDeactivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildInitiate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildInitiate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildInitiate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Slot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Slot))
		i--
		dAtA[i] = 0x28
	}
	if m.OperatingAmbit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OperatingAmbit))
		i--
		dAtA[i] = 0x20
	}
	if m.StructTypeId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructTypeId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildComplete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildComplete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildComplete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildCancel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildCancel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildCancel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildCompleteAndStash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildCompleteAndStash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildCompleteAndStash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StorageSlot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StorageSlot))
		i--
		dAtA[i] = 0x38
	}
	if m.StorageAmbit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StorageAmbit))
		i--
		dAtA[i] = 0x30
	}
	if len(m.StorageDestinationId) > 0 {
		i -= len(m.StorageDestinationId)
		copy(dAtA[i:], m.StorageDestinationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StorageDestinationId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructDefenseSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructDefenseSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructDefenseSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProtectedStructId) > 0 {
		i -= len(m.ProtectedStructId)
		copy(dAtA[i:], m.ProtectedStructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProtectedStructId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DefenderStructId) > 0 {
		i -= len(m.DefenderStructId)
		copy(dAtA[i:], m.DefenderStructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefenderStructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructDefenseClear) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructDefenseClear) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructDefenseClear) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DefenderStructId) > 0 {
		i -= len(m.DefenderStructId)
		copy(dAtA[i:], m.DefenderStructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefenderStructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructMove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Slot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Slot))
		i--
		dAtA[i] = 0x30
	}
	if m.Ambit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ambit))
		i--
		dAtA[i] = 0x28
	}
	if m.LocationType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LocationType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructAttack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructAttack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructAttack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WeaponSystem) > 0 {
		i -= len(m.WeaponSystem)
		copy(dAtA[i:], m.WeaponSystem)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WeaponSystem)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TargetStructId) > 0 {
		for iNdEx := len(m.TargetStructId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TargetStructId[iNdEx])
			copy(dAtA[i:], m.TargetStructId[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.TargetStructId[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.OperatingStructId) > 0 {
		i -= len(m.OperatingStructId)
		copy(dAtA[i:], m.OperatingStructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OperatingStructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructAttackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructAttackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructAttackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgStructStealthActivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructStealthActivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructStealthActivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructStealthDeactivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructStealthDeactivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructStealthDeactivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructGeneratorInfuse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructGeneratorInfuse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructGeneratorInfuse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InfuseAmount) > 0 {
		i -= len(m.InfuseAmount)
		copy(dAtA[i:], m.InfuseAmount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InfuseAmount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructGeneratorStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructGeneratorStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructGeneratorStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgStructOreMinerComplete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructOreMinerComplete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructOreMinerComplete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructOreMinerStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructOreMinerStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructOreMinerStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructOreRefineryComplete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructOreRefineryComplete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructOreRefineryComplete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructOreRefineryStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructOreRefineryStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructOreRefineryStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructStorageStash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructStorageStash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructStorageStash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Slot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Slot))
		i--
		dAtA[i] = 0x28
	}
	if m.Ambit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ambit))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LocationId) > 0 {
		i -= len(m.LocationId)
		copy(dAtA[i:], m.LocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LocationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructStorageRecall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructStorageRecall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructStorageRecall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Activate {
		i--
		if m.Activate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Slot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Slot))
		i--
		dAtA[i] = 0x28
	}
	if m.Ambit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ambit))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LocationId) > 0 {
		i -= len(m.LocationId)
		copy(dAtA[i:], m.LocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LocationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StructId) > 0 {
		i -= len(m.StructId)
		copy(dAtA[i:], m.StructId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationDelete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationDelete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationDelete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MigrationSubstationId) > 0 {
		i -= len(m.MigrationSubstationId)
		copy(dAtA[i:], m.MigrationSubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MigrationSubstationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationConnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationConnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationConnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DestinationId) > 0 {
		i -= len(m.DestinationId)
		copy(dAtA[i:], m.DestinationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestinationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationConnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationConnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationConnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationDisconnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationDisconnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationDisconnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AllocationId) > 0 {
		i -= len(m.AllocationId)
		copy(dAtA[i:], m.AllocationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AllocationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationDisconnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationDisconnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationDisconnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerConnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerConnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerConnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerConnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerConnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerConnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerDisconnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerDisconnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerDisconnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		i -= len(m.PlayerId)
		copy(dAtA[i:], m.PlayerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerDisconnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerDisconnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerDisconnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerMigrate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerMigrate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerMigrate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerId) > 0 {
		for iNdEx := len(m.PlayerId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PlayerId[iNdEx])
			copy(dAtA[i:], m.PlayerId[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerId[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerMigrateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerMigrateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerMigrateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAgreementOpen) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAgreementOpen) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAgreementOpen) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Capacity != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Capacity))
		i--
		dAtA[i] = 0x20
	}
	if m.Duration != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAgreementClose) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAgreementClose) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAgreementClose) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAgreementCapacityIncrease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAgreementCapacityIncrease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAgreementCapacityIncrease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CapacityIncrease != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CapacityIncrease))
		i--
		dAtA[i] = 0x18
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAgreementCapacityDecrease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAgreementCapacityDecrease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAgreementCapacityDecrease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CapacityDecrease != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CapacityDecrease))
		i--
		dAtA[i] = 0x18
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAgreementDurationIncrease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAgreementDurationIncrease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAgreementDurationIncrease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DurationIncrease != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationIncrease))
		i--
		dAtA[i] = 0x18
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgProviderCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DurationMaximum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationMaximum))
		i--
		dAtA[i] = 0x50
	}
	if m.DurationMinimum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationMinimum))
		i--
		dAtA[i] = 0x48
	}
	if m.CapacityMaximum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CapacityMaximum))
		i--
		dAtA[i] = 0x40
	}
	if m.CapacityMinimum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CapacityMinimum))
		i--
		dAtA[i] = 0x38
	}
	{
		size := m.ConsumerCancellationPenalty.Size()
		i -= size
		if _, err := m.ConsumerCancellationPenalty.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size := m.ProviderCancellationPenalty.Size()
		i -= size
		if _, err := m.ProviderCancellationPenalty.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.AccessPolicy != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AccessPolicy))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.Rate.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.SubstationId) > 0 {
		i -= len(m.SubstationId)
		copy(dAtA[i:], m.SubstationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubstationId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderWithdrawBalance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderWithdrawBalance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderWithdrawBalance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DestinationAddress) > 0 {
		i -= len(m.DestinationAddress)
		copy(dAtA[i:], m.DestinationAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestinationAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderUpdateCapacityMinimum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderUpdateCapacityMinimum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderUpdateCapacityMinimum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NewMinimumCapacity != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NewMinimumCapacity))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderUpdateCapacityMaximum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderUpdateCapacityMaximum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderUpdateCapacityMaximum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NewMaximumCapacity != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NewMaximumCapacity))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderUpdateDurationMinimum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderUpdateDurationMinimum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderUpdateDurationMinimum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NewMinimumDuration != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NewMinimumDuration))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderUpdateDurationMaximum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderUpdateDurationMaximum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderUpdateDurationMaximum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NewMaximumDuration != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NewMaximumDuration))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderUpdateAccessPolicy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderUpdateAccessPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderUpdateAccessPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AccessPolicy != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AccessPolicy))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderGuildGrant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderGuildGrant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderGuildGrant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GuildId) > 0 {
		for iNdEx := len(m.GuildId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.GuildId[iNdEx])
			copy(dAtA[i:], m.GuildId[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderGuildRevoke) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderGuildRevoke) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderGuildRevoke) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GuildId) > 0 {
		for iNdEx := len(m.GuildId) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.GuildId[iNdEx])
			copy(dAtA[i:], m.GuildId[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.GuildId[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderDelete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderDelete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderDelete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProviderId) > 0 {
		i -= len(m.ProviderId)
		copy(dAtA[i:], m.ProviderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProviderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddressRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProofPubKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProofSignature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgAddressRegisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddressRevoke) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddressRevokeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAllocationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SourceObjectId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AllocationType != 0 {
		n += 1 + sovTx(uint64(m.AllocationType))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	return n
}

func (m *MsgAllocationCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAllocationDelete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAllocationDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAllocationUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	return n
}

func (m *MsgAllocationUpdateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAllocationTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAllocationTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFleetMove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FleetId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestinationLocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFleetMoveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Fleet != nil {
		l = m.Fleet.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Endpoint)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EntrySubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildUpdateOwnerId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildUpdateEntrySubstationId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EntrySubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildUpdateEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Endpoint)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildUpdateJoinInfusionMinimum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.JoinInfusionMinimum != 0 {
		n += 1 + sovTx(uint64(m.JoinInfusionMinimum))
	}
	return n
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GuildJoinBypassLevel != 0 {
		n += 1 + sovTx(uint64(m.GuildJoinBypassLevel))
	}
	return n
}

func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GuildJoinBypassLevel != 0 {
		n += 1 + sovTx(uint64(m.GuildJoinBypassLevel))
	}
	return n
}

func (m *MsgGuildUpdateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGuildMembershipInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipInviteApprove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipInviteDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipInviteRevoke) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipJoin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.InfusionId) > 0 {
		for _, s := range m.InfusionId {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgGuildMembershipJoinProxy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProofPubKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProofSignature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipKick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipRequestApprove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipRequestDeny) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipRequestRevoke) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GuildId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildMembershipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GuildMembershipApplication != nil {
		l = m.GuildMembershipApplication.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPermissionGrantOnObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ObjectId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgPermissionGrantOnAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgPermissionRevokeOnObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ObjectId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgPermissionRevokeOnAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgPermissionSetOnObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ObjectId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgPermissionSetOnAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgPermissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPlanetExplore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlanetExploreResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Planet.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgPlanetRaidComplete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FleetId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlanetRaidCompleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Fleet.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Planet.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.OreStolen != 0 {
		n += 1 + sovTx(uint64(m.OreStolen))
	}
	return n
}

func (m *MsgPlayerUpdatePrimaryAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PrimaryAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPlayerResume) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlayerResumeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgStructStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructActivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructDeactivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructBuildInitiate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructTypeId != 0 {
		n += 1 + sovTx(uint64(m.StructTypeId))
	}
	if m.OperatingAmbit != 0 {
		n += 1 + sovTx(uint64(m.OperatingAmbit))
	}
	if m.Slot != 0 {
		n += 1 + sovTx(uint64(m.Slot))
	}
	return n
}

func (m *MsgStructBuildComplete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructBuildCancel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructBuildCompleteAndStash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StorageDestinationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StorageAmbit != 0 {
		n += 1 + sovTx(uint64(m.StorageAmbit))
	}
	if m.StorageSlot != 0 {
		n += 1 + sovTx(uint64(m.StorageSlot))
	}
	return n
}

func (m *MsgStructDefenseSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DefenderStructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProtectedStructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructDefenseClear) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DefenderStructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructMove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LocationType != 0 {
		n += 1 + sovTx(uint64(m.LocationType))
	}
	if m.Ambit != 0 {
		n += 1 + sovTx(uint64(m.Ambit))
	}
	if m.Slot != 0 {
		n += 1 + sovTx(uint64(m.Slot))
	}
	return n
}

func (m *MsgStructAttack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OperatingStructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.TargetStructId) > 0 {
		for _, s := range m.TargetStructId {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.WeaponSystem)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructAttackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgStructStealthActivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructStealthDeactivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructGeneratorInfuse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.InfuseAmount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructGeneratorStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgStructOreMinerComplete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructOreMinerStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructOreRefineryComplete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructOreRefineryStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructStorageStash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ambit != 0 {
		n += 1 + sovTx(uint64(m.Ambit))
	}
	if m.Slot != 0 {
		n += 1 + sovTx(uint64(m.Slot))
	}
	return n
}

func (m *MsgStructStorageRecall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ambit != 0 {
		n += 1 + sovTx(uint64(m.Ambit))
	}
	if m.Slot != 0 {
		n += 1 + sovTx(uint64(m.Slot))
	}
	if m.Activate {
		n += 2
	}
	return n
}

func (m *MsgSubstationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationDelete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MigrationSubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationAllocationConnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestinationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationAllocationConnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationAllocationDisconnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AllocationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationAllocationDisconnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationPlayerConnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationPlayerConnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationPlayerDisconnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubstationPlayerDisconnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationPlayerMigrate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PlayerId) > 0 {
		for _, s := range m.PlayerId {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgSubstationPlayerMigrateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAgreementOpen) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovTx(uint64(m.Duration))
	}
	if m.Capacity != 0 {
		n += 1 + sovTx(uint64(m.Capacity))
	}
	return n
}

func (m *MsgAgreementClose) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAgreementCapacityIncrease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CapacityIncrease != 0 {
		n += 1 + sovTx(uint64(m.CapacityIncrease))
	}
	return n
}

func (m *MsgAgreementCapacityDecrease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CapacityDecrease != 0 {
		n += 1 + sovTx(uint64(m.CapacityDecrease))
	}
	return n
}

func (m *MsgAgreementDurationIncrease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.DurationIncrease != 0 {
		n += 1 + sovTx(uint64(m.DurationIncrease))
	}
	return n
}

func (m *MsgAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgProviderCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubstationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Rate.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.AccessPolicy != 0 {
		n += 1 + sovTx(uint64(m.AccessPolicy))
	}
	l = m.ProviderCancellationPenalty.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.ConsumerCancellationPenalty.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.CapacityMinimum != 0 {
		n += 1 + sovTx(uint64(m.CapacityMinimum))
	}
	if m.CapacityMaximum != 0 {
		n += 1 + sovTx(uint64(m.CapacityMaximum))
	}
	if m.DurationMinimum != 0 {
		n += 1 + sovTx(uint64(m.DurationMinimum))
	}
	if m.DurationMaximum != 0 {
		n += 1 + sovTx(uint64(m.DurationMaximum))
	}
	return n
}

func (m *MsgProviderWithdrawBalance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestinationAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgProviderUpdateCapacityMinimum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NewMinimumCapacity != 0 {
		n += 1 + sovTx(uint64(m.NewMinimumCapacity))
	}
	return n
}

func (m *MsgProviderUpdateCapacityMaximum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NewMaximumCapacity != 0 {
		n += 1 + sovTx(uint64(m.NewMaximumCapacity))
	}
	return n
}

func (m *MsgProviderUpdateDurationMinimum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NewMinimumDuration != 0 {
		n += 1 + sovTx(uint64(m.NewMinimumDuration))
	}
	return n
}

func (m *MsgProviderUpdateDurationMaximum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NewMaximumDuration != 0 {
		n += 1 + sovTx(uint64(m.NewMaximumDuration))
	}
	return n
}

func (m *MsgProviderUpdateAccessPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AccessPolicy != 0 {
		n += 1 + sovTx(uint64(m.AccessPolicy))
	}
	return n
}

func (m *MsgProviderGuildGrant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.GuildId) > 0 {
		for _, s := range m.GuildId {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgProviderGuildRevoke) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.GuildId) > 0 {
		for _, s := range m.GuildId {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgProviderDelete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProviderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRegister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofPubKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofPubKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofSignature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofSignature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRegisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRegisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRegisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRevoke) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRevoke: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRevoke: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRevokeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRevokeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRevokeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationType", wireType)
			}
			m.AllocationType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AllocationType |= AllocationType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationDelete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationDelete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationDelete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationUpdateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationUpdateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFleetMove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFleetMove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFleetMove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FleetId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FleetId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationLocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationLocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFleetMoveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFleetMoveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFleetMoveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fleet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Fleet == nil {
				m.Fleet = &Fleet{}
			}
			if err := m.Fleet.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntrySubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntrySubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateOwnerId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateOwnerId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateOwnerId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateEntrySubstationId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateEntrySubstationId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateEntrySubstationId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntrySubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntrySubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateJoinInfusionMinimum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinInfusionMinimum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinInfusionMinimum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinInfusionMinimum", wireType)
			}
			m.JoinInfusionMinimum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JoinInfusionMinimum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinInfusionMinimumBypassByRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinInfusionMinimumBypassByRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildJoinBypassLevel", wireType)
			}
			m.GuildJoinBypassLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildJoinBypassLevel |= GuildJoinBypassLevel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateJoinInfusionMinimumBypassByInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinInfusionMinimumBypassByInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinInfusionMinimumBypassByInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildJoinBypassLevel", wireType)
			}
			m.GuildJoinBypassLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildJoinBypassLevel |= GuildJoinBypassLevel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipInviteApprove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipInviteApprove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipInviteApprove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipInviteDeny) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipInviteDeny: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipInviteDeny: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipInviteRevoke) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipInviteRevoke: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipInviteRevoke: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipJoin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipJoin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipJoin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfusionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InfusionId = append(m.InfusionId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipJoinProxy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipJoinProxy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipJoinProxy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofPubKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofPubKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofSignature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofSignature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipKick) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipKick: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipKick: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipRequestApprove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipRequestApprove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipRequestApprove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipRequestDeny) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipRequestDeny: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipRequestDeny: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipRequestRevoke) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipRequestRevoke: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipRequestRevoke: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildMembershipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildMembershipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildMembershipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildMembershipApplication", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuildMembershipApplication == nil {
				m.GuildMembershipApplication = &GuildMembershipApplication{}
			}
			if err := m.GuildMembershipApplication.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionGrantOnObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionGrantOnObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionGrantOnObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionGrantOnAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionGrantOnAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionGrantOnAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionRevokeOnObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionRevokeOnObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionRevokeOnObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionRevokeOnAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionRevokeOnAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionRevokeOnAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionSetOnObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionSetOnObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionSetOnObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionSetOnAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionSetOnAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionSetOnAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPermissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPermissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPermissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlanetExplore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlanetExplore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlanetExplore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlanetExploreResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlanetExploreResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlanetExploreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Planet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Planet.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlanetRaidComplete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlanetRaidComplete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlanetRaidComplete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FleetId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FleetId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlanetRaidCompleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlanetRaidCompleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlanetRaidCompleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fleet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fleet.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Planet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Planet.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OreStolen", wireType)
			}
			m.OreStolen = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OreStolen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerUpdatePrimaryAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrimaryAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerResume) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerResume: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerResume: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerResumeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerResumeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerResumeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructActivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructActivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructActivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructDeactivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructDeactivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructDeactivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildInitiate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildInitiate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildInitiate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructTypeId", wireType)
			}
			m.StructTypeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructTypeId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatingAmbit", wireType)
			}
			m.OperatingAmbit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OperatingAmbit |= Ambit(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			m.Slot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Slot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildComplete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildComplete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildComplete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildCancel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildCancel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildCancel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildCompleteAndStash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildCompleteAndStash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildCompleteAndStash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageDestinationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StorageDestinationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageAmbit", wireType)
			}
			m.StorageAmbit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorageAmbit |= Ambit(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageSlot", wireType)
			}
			m.StorageSlot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorageSlot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructDefenseSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructDefenseSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructDefenseSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenderStructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefenderStructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProtectedStructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProtectedStructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructDefenseClear) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructDefenseClear: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructDefenseClear: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenderStructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefenderStructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationType", wireType)
			}
			m.LocationType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocationType |= ObjectType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ambit", wireType)
			}
			m.Ambit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ambit |= Ambit(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			m.Slot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Slot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructAttack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructAttack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructAttack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatingStructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatingStructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetStructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetStructId = append(m.TargetStructId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeaponSystem", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WeaponSystem = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructAttackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructAttackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructAttackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructStealthActivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructStealthActivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructStealthActivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructStealthDeactivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructStealthDeactivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructStealthDeactivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructGeneratorInfuse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructGeneratorInfuse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructGeneratorInfuse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfuseAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InfuseAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructGeneratorStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructGeneratorStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructGeneratorStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructOreMinerComplete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructOreMinerComplete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructOreMinerComplete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructOreMinerStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructOreMinerStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructOreMinerStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructOreRefineryComplete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructOreRefineryComplete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructOreRefineryComplete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructOreRefineryStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructOreRefineryStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructOreRefineryStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructStorageStash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructStorageStash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructStorageStash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ambit", wireType)
			}
			m.Ambit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ambit |= Ambit(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			m.Slot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Slot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructStorageRecall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructStorageRecall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructStorageRecall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ambit", wireType)
			}
			m.Ambit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ambit |= Ambit(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			m.Slot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Slot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Activate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Activate = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationDelete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationDelete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationDelete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MigrationSubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MigrationSubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationConnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationConnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationDisconnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllocationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationDisconnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerConnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerConnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerDisconnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerDisconnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerMigrate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerMigrate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerMigrate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = append(m.PlayerId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerMigrateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerMigrateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerMigrateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAgreementOpen) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAgreementOpen: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAgreementOpen: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Capacity", wireType)
			}
			m.Capacity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Capacity |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAgreementClose) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAgreementClose: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAgreementClose: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAgreementCapacityIncrease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAgreementCapacityIncrease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAgreementCapacityIncrease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CapacityIncrease", wireType)
			}
			m.CapacityIncrease = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CapacityIncrease |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAgreementCapacityDecrease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAgreementCapacityDecrease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAgreementCapacityDecrease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CapacityDecrease", wireType)
			}
			m.CapacityDecrease = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CapacityDecrease |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAgreementDurationIncrease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAgreementDurationIncrease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAgreementDurationIncrease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationIncrease", wireType)
			}
			m.DurationIncrease = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationIncrease |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubstationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Rate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessPolicy", wireType)
			}
			m.AccessPolicy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccessPolicy |= ProviderAccessPolicy(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderCancellationPenalty", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ProviderCancellationPenalty.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumerCancellationPenalty", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ConsumerCancellationPenalty.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CapacityMinimum", wireType)
			}
			m.CapacityMinimum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CapacityMinimum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CapacityMaximum", wireType)
			}
			m.CapacityMaximum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CapacityMaximum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationMinimum", wireType)
			}
			m.DurationMinimum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationMinimum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationMaximum", wireType)
			}
			m.DurationMaximum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationMaximum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderWithdrawBalance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderWithdrawBalance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderWithdrawBalance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderUpdateCapacityMinimum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderUpdateCapacityMinimum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderUpdateCapacityMinimum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewMinimumCapacity", wireType)
			}
			m.NewMinimumCapacity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewMinimumCapacity |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderUpdateCapacityMaximum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderUpdateCapacityMaximum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderUpdateCapacityMaximum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewMaximumCapacity", wireType)
			}
			m.NewMaximumCapacity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewMaximumCapacity |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderUpdateDurationMinimum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderUpdateDurationMinimum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderUpdateDurationMinimum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewMinimumDuration", wireType)
			}
			m.NewMinimumDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewMinimumDuration |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderUpdateDurationMaximum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderUpdateDurationMaximum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderUpdateDurationMaximum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewMaximumDuration", wireType)
			}
			m.NewMaximumDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewMaximumDuration |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderUpdateAccessPolicy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderUpdateAccessPolicy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderUpdateAccessPolicy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessPolicy", wireType)
			}
			m.AccessPolicy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccessPolicy |= ProviderAccessPolicy(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderGuildGrant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderGuildGrant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderGuildGrant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = append(m.GuildId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderGuildRevoke) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderGuildRevoke: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderGuildRevoke: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildId = append(m.GuildId, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderDelete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderDelete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderDelete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
