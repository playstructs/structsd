// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: structs/structs/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSubstationCreate struct {
	Creator                    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner                      uint64 `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	PlayerConnectionAllocation uint64 `protobuf:"varint,3,opt,name=playerConnectionAllocation,proto3" json:"playerConnectionAllocation,omitempty"`
}

func (m *MsgSubstationCreate) Reset()         { *m = MsgSubstationCreate{} }
func (m *MsgSubstationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationCreate) ProtoMessage()    {}
func (*MsgSubstationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{0}
}
func (m *MsgSubstationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationCreate.Merge(m, src)
}
func (m *MsgSubstationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationCreate proto.InternalMessageInfo

func (m *MsgSubstationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationCreate) GetOwner() uint64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *MsgSubstationCreate) GetPlayerConnectionAllocation() uint64 {
	if m != nil {
		return m.PlayerConnectionAllocation
	}
	return 0
}

type MsgSubstationCreateResponse struct {
	SubstationId uint64 `protobuf:"varint,1,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (m *MsgSubstationCreateResponse) Reset()         { *m = MsgSubstationCreateResponse{} }
func (m *MsgSubstationCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationCreateResponse) ProtoMessage()    {}
func (*MsgSubstationCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{1}
}
func (m *MsgSubstationCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationCreateResponse.Merge(m, src)
}
func (m *MsgSubstationCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationCreateResponse proto.InternalMessageInfo

func (m *MsgSubstationCreateResponse) GetSubstationId() uint64 {
	if m != nil {
		return m.SubstationId
	}
	return 0
}

type MsgSubstationDelete struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubstationId          uint64 `protobuf:"varint,2,opt,name=substationId,proto3" json:"substationId,omitempty"`
	MigrationSubstationId uint64 `protobuf:"varint,3,opt,name=migrationSubstationId,proto3" json:"migrationSubstationId,omitempty"`
}

func (m *MsgSubstationDelete) Reset()         { *m = MsgSubstationDelete{} }
func (m *MsgSubstationDelete) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationDelete) ProtoMessage()    {}
func (*MsgSubstationDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{2}
}
func (m *MsgSubstationDelete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationDelete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationDelete.Merge(m, src)
}
func (m *MsgSubstationDelete) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationDelete proto.InternalMessageInfo

func (m *MsgSubstationDelete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationDelete) GetSubstationId() uint64 {
	if m != nil {
		return m.SubstationId
	}
	return 0
}

func (m *MsgSubstationDelete) GetMigrationSubstationId() uint64 {
	if m != nil {
		return m.MigrationSubstationId
	}
	return 0
}

type MsgSubstationDeleteResponse struct {
}

func (m *MsgSubstationDeleteResponse) Reset()         { *m = MsgSubstationDeleteResponse{} }
func (m *MsgSubstationDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationDeleteResponse) ProtoMessage()    {}
func (*MsgSubstationDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{3}
}
func (m *MsgSubstationDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationDeleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationDeleteResponse.Merge(m, src)
}
func (m *MsgSubstationDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationDeleteResponse proto.InternalMessageInfo

type MsgSubstationAllocationConnect struct {
	Creator                 string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId            uint64 `protobuf:"varint,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
	DestinationSubstationId uint64 `protobuf:"varint,3,opt,name=destinationSubstationId,proto3" json:"destinationSubstationId,omitempty"`
}

func (m *MsgSubstationAllocationConnect) Reset()         { *m = MsgSubstationAllocationConnect{} }
func (m *MsgSubstationAllocationConnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationConnect) ProtoMessage()    {}
func (*MsgSubstationAllocationConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{4}
}
func (m *MsgSubstationAllocationConnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationConnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationConnect.Merge(m, src)
}
func (m *MsgSubstationAllocationConnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationConnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationConnect proto.InternalMessageInfo

func (m *MsgSubstationAllocationConnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationAllocationConnect) GetAllocationId() uint64 {
	if m != nil {
		return m.AllocationId
	}
	return 0
}

func (m *MsgSubstationAllocationConnect) GetDestinationSubstationId() uint64 {
	if m != nil {
		return m.DestinationSubstationId
	}
	return 0
}

type MsgSubstationAllocationConnectResponse struct {
}

func (m *MsgSubstationAllocationConnectResponse) Reset() {
	*m = MsgSubstationAllocationConnectResponse{}
}
func (m *MsgSubstationAllocationConnectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationConnectResponse) ProtoMessage()    {}
func (*MsgSubstationAllocationConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{5}
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationConnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationConnectResponse.Merge(m, src)
}
func (m *MsgSubstationAllocationConnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationConnectResponse proto.InternalMessageInfo

type MsgSubstationAllocationDisconnect struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AllocationId uint64 `protobuf:"varint,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgSubstationAllocationDisconnect) Reset()         { *m = MsgSubstationAllocationDisconnect{} }
func (m *MsgSubstationAllocationDisconnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationDisconnect) ProtoMessage()    {}
func (*MsgSubstationAllocationDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{6}
}
func (m *MsgSubstationAllocationDisconnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationDisconnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationDisconnect.Merge(m, src)
}
func (m *MsgSubstationAllocationDisconnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationDisconnect proto.InternalMessageInfo

func (m *MsgSubstationAllocationDisconnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationAllocationDisconnect) GetAllocationId() uint64 {
	if m != nil {
		return m.AllocationId
	}
	return 0
}

type MsgSubstationAllocationDisconnectResponse struct {
}

func (m *MsgSubstationAllocationDisconnectResponse) Reset() {
	*m = MsgSubstationAllocationDisconnectResponse{}
}
func (m *MsgSubstationAllocationDisconnectResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgSubstationAllocationDisconnectResponse) ProtoMessage() {}
func (*MsgSubstationAllocationDisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{7}
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationDisconnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationDisconnectResponse.Merge(m, src)
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationDisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationDisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationDisconnectResponse proto.InternalMessageInfo

type MsgSubstationPlayerConnect struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubstationId uint64 `protobuf:"varint,2,opt,name=substationId,proto3" json:"substationId,omitempty"`
	PlayerId     uint64 `protobuf:"varint,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSubstationPlayerConnect) Reset()         { *m = MsgSubstationPlayerConnect{} }
func (m *MsgSubstationPlayerConnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerConnect) ProtoMessage()    {}
func (*MsgSubstationPlayerConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{8}
}
func (m *MsgSubstationPlayerConnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerConnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerConnect.Merge(m, src)
}
func (m *MsgSubstationPlayerConnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerConnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerConnect proto.InternalMessageInfo

func (m *MsgSubstationPlayerConnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationPlayerConnect) GetSubstationId() uint64 {
	if m != nil {
		return m.SubstationId
	}
	return 0
}

func (m *MsgSubstationPlayerConnect) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type MsgSubstationPlayerConnectResponse struct {
}

func (m *MsgSubstationPlayerConnectResponse) Reset()         { *m = MsgSubstationPlayerConnectResponse{} }
func (m *MsgSubstationPlayerConnectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerConnectResponse) ProtoMessage()    {}
func (*MsgSubstationPlayerConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{9}
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerConnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerConnectResponse.Merge(m, src)
}
func (m *MsgSubstationPlayerConnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerConnectResponse proto.InternalMessageInfo

type MsgSubstationPlayerDisconnect struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId uint64 `protobuf:"varint,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSubstationPlayerDisconnect) Reset()         { *m = MsgSubstationPlayerDisconnect{} }
func (m *MsgSubstationPlayerDisconnect) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerDisconnect) ProtoMessage()    {}
func (*MsgSubstationPlayerDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{10}
}
func (m *MsgSubstationPlayerDisconnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerDisconnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerDisconnect.Merge(m, src)
}
func (m *MsgSubstationPlayerDisconnect) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerDisconnect proto.InternalMessageInfo

func (m *MsgSubstationPlayerDisconnect) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationPlayerDisconnect) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type MsgSubstationPlayerDisconnectResponse struct {
}

func (m *MsgSubstationPlayerDisconnectResponse) Reset()         { *m = MsgSubstationPlayerDisconnectResponse{} }
func (m *MsgSubstationPlayerDisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationPlayerDisconnectResponse) ProtoMessage()    {}
func (*MsgSubstationPlayerDisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{11}
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationPlayerDisconnectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationPlayerDisconnectResponse.Merge(m, src)
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationPlayerDisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationPlayerDisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationPlayerDisconnectResponse proto.InternalMessageInfo

type MsgAllocationCreate struct {
	Creator    string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Controller string     `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	SourceType ObjectType `protobuf:"varint,3,opt,name=sourceType,proto3,enum=structs.ObjectType" json:"sourceType,omitempty"`
	SourceId   uint64     `protobuf:"varint,4,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	Power      uint64     `protobuf:"varint,5,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *MsgAllocationCreate) Reset()         { *m = MsgAllocationCreate{} }
func (m *MsgAllocationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationCreate) ProtoMessage()    {}
func (*MsgAllocationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{12}
}
func (m *MsgAllocationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationCreate.Merge(m, src)
}
func (m *MsgAllocationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationCreate proto.InternalMessageInfo

func (m *MsgAllocationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAllocationCreate) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgAllocationCreate) GetSourceType() ObjectType {
	if m != nil {
		return m.SourceType
	}
	return ObjectType_guild
}

func (m *MsgAllocationCreate) GetSourceId() uint64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *MsgAllocationCreate) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type MsgAllocationCreateResponse struct {
	AllocationId uint64 `protobuf:"varint,1,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
}

func (m *MsgAllocationCreateResponse) Reset()         { *m = MsgAllocationCreateResponse{} }
func (m *MsgAllocationCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAllocationCreateResponse) ProtoMessage()    {}
func (*MsgAllocationCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{13}
}
func (m *MsgAllocationCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAllocationCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAllocationCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAllocationCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllocationCreateResponse.Merge(m, src)
}
func (m *MsgAllocationCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAllocationCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllocationCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllocationCreateResponse proto.InternalMessageInfo

func (m *MsgAllocationCreateResponse) GetAllocationId() uint64 {
	if m != nil {
		return m.AllocationId
	}
	return 0
}

type MsgSubstationAllocationCreate struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Controller string `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	SourceId   uint64 `protobuf:"varint,3,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	Power      uint64 `protobuf:"varint,4,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *MsgSubstationAllocationCreate) Reset()         { *m = MsgSubstationAllocationCreate{} }
func (m *MsgSubstationAllocationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgSubstationAllocationCreate) ProtoMessage()    {}
func (*MsgSubstationAllocationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{14}
}
func (m *MsgSubstationAllocationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubstationAllocationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubstationAllocationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubstationAllocationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubstationAllocationCreate.Merge(m, src)
}
func (m *MsgSubstationAllocationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubstationAllocationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubstationAllocationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubstationAllocationCreate proto.InternalMessageInfo

func (m *MsgSubstationAllocationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubstationAllocationCreate) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgSubstationAllocationCreate) GetSourceId() uint64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *MsgSubstationAllocationCreate) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type MsgReactorAllocationCreate struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Controller string `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	SourceId   uint64 `protobuf:"varint,3,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	Power      uint64 `protobuf:"varint,4,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *MsgReactorAllocationCreate) Reset()         { *m = MsgReactorAllocationCreate{} }
func (m *MsgReactorAllocationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgReactorAllocationCreate) ProtoMessage()    {}
func (*MsgReactorAllocationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{15}
}
func (m *MsgReactorAllocationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReactorAllocationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReactorAllocationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReactorAllocationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReactorAllocationCreate.Merge(m, src)
}
func (m *MsgReactorAllocationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgReactorAllocationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReactorAllocationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReactorAllocationCreate proto.InternalMessageInfo

func (m *MsgReactorAllocationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgReactorAllocationCreate) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgReactorAllocationCreate) GetSourceId() uint64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *MsgReactorAllocationCreate) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type MsgStructAllocationCreate struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Controller string `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	SourceId   uint64 `protobuf:"varint,3,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	Power      uint64 `protobuf:"varint,4,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *MsgStructAllocationCreate) Reset()         { *m = MsgStructAllocationCreate{} }
func (m *MsgStructAllocationCreate) String() string { return proto.CompactTextString(m) }
func (*MsgStructAllocationCreate) ProtoMessage()    {}
func (*MsgStructAllocationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{16}
}
func (m *MsgStructAllocationCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructAllocationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructAllocationCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructAllocationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructAllocationCreate.Merge(m, src)
}
func (m *MsgStructAllocationCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructAllocationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructAllocationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructAllocationCreate proto.InternalMessageInfo

func (m *MsgStructAllocationCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructAllocationCreate) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgStructAllocationCreate) GetSourceId() uint64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *MsgStructAllocationCreate) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type MsgGuildCreate struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Endpoint          string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	EntrySubstationId uint64 `protobuf:"varint,3,opt,name=entrySubstationId,proto3" json:"entrySubstationId,omitempty"`
}

func (m *MsgGuildCreate) Reset()         { *m = MsgGuildCreate{} }
func (m *MsgGuildCreate) String() string { return proto.CompactTextString(m) }
func (*MsgGuildCreate) ProtoMessage()    {}
func (*MsgGuildCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{17}
}
func (m *MsgGuildCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildCreate.Merge(m, src)
}
func (m *MsgGuildCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildCreate proto.InternalMessageInfo

func (m *MsgGuildCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildCreate) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *MsgGuildCreate) GetEntrySubstationId() uint64 {
	if m != nil {
		return m.EntrySubstationId
	}
	return 0
}

type MsgGuildCreateResponse struct {
	GuildId uint64 `protobuf:"varint,1,opt,name=guildId,proto3" json:"guildId,omitempty"`
}

func (m *MsgGuildCreateResponse) Reset()         { *m = MsgGuildCreateResponse{} }
func (m *MsgGuildCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGuildCreateResponse) ProtoMessage()    {}
func (*MsgGuildCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{18}
}
func (m *MsgGuildCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildCreateResponse.Merge(m, src)
}
func (m *MsgGuildCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildCreateResponse proto.InternalMessageInfo

func (m *MsgGuildCreateResponse) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

type MsgGuildUpdateOwnerId struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Owner   uint64 `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *MsgGuildUpdateOwnerId) Reset()         { *m = MsgGuildUpdateOwnerId{} }
func (m *MsgGuildUpdateOwnerId) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateOwnerId) ProtoMessage()    {}
func (*MsgGuildUpdateOwnerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{19}
}
func (m *MsgGuildUpdateOwnerId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateOwnerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateOwnerId.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateOwnerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateOwnerId.Merge(m, src)
}
func (m *MsgGuildUpdateOwnerId) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateOwnerId) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateOwnerId.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateOwnerId proto.InternalMessageInfo

func (m *MsgGuildUpdateOwnerId) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateOwnerId) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateOwnerId) GetOwner() uint64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

type MsgGuildUpdateEntrySubstationId struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	EntrySubstationId uint64 `protobuf:"varint,3,opt,name=entrySubstationId,proto3" json:"entrySubstationId,omitempty"`
}

func (m *MsgGuildUpdateEntrySubstationId) Reset()         { *m = MsgGuildUpdateEntrySubstationId{} }
func (m *MsgGuildUpdateEntrySubstationId) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateEntrySubstationId) ProtoMessage()    {}
func (*MsgGuildUpdateEntrySubstationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{20}
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateEntrySubstationId.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateEntrySubstationId.Merge(m, src)
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateEntrySubstationId) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateEntrySubstationId.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateEntrySubstationId proto.InternalMessageInfo

func (m *MsgGuildUpdateEntrySubstationId) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateEntrySubstationId) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateEntrySubstationId) GetEntrySubstationId() uint64 {
	if m != nil {
		return m.EntrySubstationId
	}
	return 0
}

type MsgGuildUpdateEndpoint struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (m *MsgGuildUpdateEndpoint) Reset()         { *m = MsgGuildUpdateEndpoint{} }
func (m *MsgGuildUpdateEndpoint) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateEndpoint) ProtoMessage()    {}
func (*MsgGuildUpdateEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{21}
}
func (m *MsgGuildUpdateEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateEndpoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateEndpoint.Merge(m, src)
}
func (m *MsgGuildUpdateEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateEndpoint proto.InternalMessageInfo

func (m *MsgGuildUpdateEndpoint) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateEndpoint) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateEndpoint) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type MsgGuildUpdateJoinType struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	GuildJoinType uint64 `protobuf:"varint,3,opt,name=guildJoinType,proto3" json:"guildJoinType,omitempty"`
}

func (m *MsgGuildUpdateJoinType) Reset()         { *m = MsgGuildUpdateJoinType{} }
func (m *MsgGuildUpdateJoinType) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateJoinType) ProtoMessage()    {}
func (*MsgGuildUpdateJoinType) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{22}
}
func (m *MsgGuildUpdateJoinType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateJoinType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateJoinType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateJoinType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateJoinType.Merge(m, src)
}
func (m *MsgGuildUpdateJoinType) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateJoinType) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateJoinType.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateJoinType proto.InternalMessageInfo

func (m *MsgGuildUpdateJoinType) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateJoinType) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateJoinType) GetGuildJoinType() uint64 {
	if m != nil {
		return m.GuildJoinType
	}
	return 0
}

type MsgGuildUpdateInfusionJoinMinimum struct {
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                  uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	InfusionJoinMinimum uint64 `protobuf:"varint,3,opt,name=infusionJoinMinimum,proto3" json:"infusionJoinMinimum,omitempty"`
}

func (m *MsgGuildUpdateInfusionJoinMinimum) Reset()         { *m = MsgGuildUpdateInfusionJoinMinimum{} }
func (m *MsgGuildUpdateInfusionJoinMinimum) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateInfusionJoinMinimum) ProtoMessage()    {}
func (*MsgGuildUpdateInfusionJoinMinimum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{23}
}
func (m *MsgGuildUpdateInfusionJoinMinimum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateInfusionJoinMinimum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateInfusionJoinMinimum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateInfusionJoinMinimum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateInfusionJoinMinimum.Merge(m, src)
}
func (m *MsgGuildUpdateInfusionJoinMinimum) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateInfusionJoinMinimum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateInfusionJoinMinimum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateInfusionJoinMinimum proto.InternalMessageInfo

func (m *MsgGuildUpdateInfusionJoinMinimum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateInfusionJoinMinimum) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateInfusionJoinMinimum) GetInfusionJoinMinimum() uint64 {
	if m != nil {
		return m.InfusionJoinMinimum
	}
	return 0
}

type MsgGuildUpdateSquadJoinTypeMinimum struct {
	Creator              string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	SquadJoinTypeMinimum uint64 `protobuf:"varint,3,opt,name=squadJoinTypeMinimum,proto3" json:"squadJoinTypeMinimum,omitempty"`
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) Reset()         { *m = MsgGuildUpdateSquadJoinTypeMinimum{} }
func (m *MsgGuildUpdateSquadJoinTypeMinimum) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateSquadJoinTypeMinimum) ProtoMessage()    {}
func (*MsgGuildUpdateSquadJoinTypeMinimum) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{24}
}
func (m *MsgGuildUpdateSquadJoinTypeMinimum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateSquadJoinTypeMinimum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateSquadJoinTypeMinimum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateSquadJoinTypeMinimum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateSquadJoinTypeMinimum.Merge(m, src)
}
func (m *MsgGuildUpdateSquadJoinTypeMinimum) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateSquadJoinTypeMinimum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateSquadJoinTypeMinimum.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateSquadJoinTypeMinimum proto.InternalMessageInfo

func (m *MsgGuildUpdateSquadJoinTypeMinimum) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) GetSquadJoinTypeMinimum() uint64 {
	if m != nil {
		return m.SquadJoinTypeMinimum
	}
	return 0
}

type MsgGuildUpdateOpenSquadCreation struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	OpenSquadCreation bool   `protobuf:"varint,3,opt,name=openSquadCreation,proto3" json:"openSquadCreation,omitempty"`
}

func (m *MsgGuildUpdateOpenSquadCreation) Reset()         { *m = MsgGuildUpdateOpenSquadCreation{} }
func (m *MsgGuildUpdateOpenSquadCreation) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateOpenSquadCreation) ProtoMessage()    {}
func (*MsgGuildUpdateOpenSquadCreation) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{25}
}
func (m *MsgGuildUpdateOpenSquadCreation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateOpenSquadCreation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateOpenSquadCreation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateOpenSquadCreation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateOpenSquadCreation.Merge(m, src)
}
func (m *MsgGuildUpdateOpenSquadCreation) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateOpenSquadCreation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateOpenSquadCreation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateOpenSquadCreation proto.InternalMessageInfo

func (m *MsgGuildUpdateOpenSquadCreation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildUpdateOpenSquadCreation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgGuildUpdateOpenSquadCreation) GetOpenSquadCreation() bool {
	if m != nil {
		return m.OpenSquadCreation
	}
	return false
}

type MsgGuildUpdateResponse struct {
}

func (m *MsgGuildUpdateResponse) Reset()         { *m = MsgGuildUpdateResponse{} }
func (m *MsgGuildUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGuildUpdateResponse) ProtoMessage()    {}
func (*MsgGuildUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{26}
}
func (m *MsgGuildUpdateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildUpdateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildUpdateResponse.Merge(m, src)
}
func (m *MsgGuildUpdateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildUpdateResponse proto.InternalMessageInfo

type MsgSquadCreate struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId           uint64 `protobuf:"varint,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	Leader            uint64 `protobuf:"varint,3,opt,name=leader,proto3" json:"leader,omitempty"`
	SquadJoinType     uint64 `protobuf:"varint,4,opt,name=squadJoinType,proto3" json:"squadJoinType,omitempty"`
	EntrySubstationId uint64 `protobuf:"varint,5,opt,name=entrySubstationId,proto3" json:"entrySubstationId,omitempty"`
}

func (m *MsgSquadCreate) Reset()         { *m = MsgSquadCreate{} }
func (m *MsgSquadCreate) String() string { return proto.CompactTextString(m) }
func (*MsgSquadCreate) ProtoMessage()    {}
func (*MsgSquadCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{27}
}
func (m *MsgSquadCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadCreate.Merge(m, src)
}
func (m *MsgSquadCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadCreate proto.InternalMessageInfo

func (m *MsgSquadCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSquadCreate) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *MsgSquadCreate) GetLeader() uint64 {
	if m != nil {
		return m.Leader
	}
	return 0
}

func (m *MsgSquadCreate) GetSquadJoinType() uint64 {
	if m != nil {
		return m.SquadJoinType
	}
	return 0
}

func (m *MsgSquadCreate) GetEntrySubstationId() uint64 {
	if m != nil {
		return m.EntrySubstationId
	}
	return 0
}

type MsgSquadCreateResponse struct {
	SquadId uint64 `protobuf:"varint,1,opt,name=squadId,proto3" json:"squadId,omitempty"`
}

func (m *MsgSquadCreateResponse) Reset()         { *m = MsgSquadCreateResponse{} }
func (m *MsgSquadCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSquadCreateResponse) ProtoMessage()    {}
func (*MsgSquadCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{28}
}
func (m *MsgSquadCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadCreateResponse.Merge(m, src)
}
func (m *MsgSquadCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadCreateResponse proto.InternalMessageInfo

func (m *MsgSquadCreateResponse) GetSquadId() uint64 {
	if m != nil {
		return m.SquadId
	}
	return 0
}

type MsgSquadLeaderProposal struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SquadId uint64 `protobuf:"varint,2,opt,name=squadId,proto3" json:"squadId,omitempty"`
	Leader  uint64 `protobuf:"varint,3,opt,name=leader,proto3" json:"leader,omitempty"`
}

func (m *MsgSquadLeaderProposal) Reset()         { *m = MsgSquadLeaderProposal{} }
func (m *MsgSquadLeaderProposal) String() string { return proto.CompactTextString(m) }
func (*MsgSquadLeaderProposal) ProtoMessage()    {}
func (*MsgSquadLeaderProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{29}
}
func (m *MsgSquadLeaderProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadLeaderProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadLeaderProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadLeaderProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadLeaderProposal.Merge(m, src)
}
func (m *MsgSquadLeaderProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadLeaderProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadLeaderProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadLeaderProposal proto.InternalMessageInfo

func (m *MsgSquadLeaderProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSquadLeaderProposal) GetSquadId() uint64 {
	if m != nil {
		return m.SquadId
	}
	return 0
}

func (m *MsgSquadLeaderProposal) GetLeader() uint64 {
	if m != nil {
		return m.Leader
	}
	return 0
}

type MsgSquadLeaderProposalResponse struct {
}

func (m *MsgSquadLeaderProposalResponse) Reset()         { *m = MsgSquadLeaderProposalResponse{} }
func (m *MsgSquadLeaderProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSquadLeaderProposalResponse) ProtoMessage()    {}
func (*MsgSquadLeaderProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{30}
}
func (m *MsgSquadLeaderProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadLeaderProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadLeaderProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadLeaderProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadLeaderProposalResponse.Merge(m, src)
}
func (m *MsgSquadLeaderProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadLeaderProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadLeaderProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadLeaderProposalResponse proto.InternalMessageInfo

type MsgSquadApproveLeaderProposal struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Approve  bool   `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	SquadId  uint64 `protobuf:"varint,3,opt,name=squadId,proto3" json:"squadId,omitempty"`
	PlayerId uint64 `protobuf:"varint,4,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSquadApproveLeaderProposal) Reset()         { *m = MsgSquadApproveLeaderProposal{} }
func (m *MsgSquadApproveLeaderProposal) String() string { return proto.CompactTextString(m) }
func (*MsgSquadApproveLeaderProposal) ProtoMessage()    {}
func (*MsgSquadApproveLeaderProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{31}
}
func (m *MsgSquadApproveLeaderProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadApproveLeaderProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadApproveLeaderProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadApproveLeaderProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadApproveLeaderProposal.Merge(m, src)
}
func (m *MsgSquadApproveLeaderProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadApproveLeaderProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadApproveLeaderProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadApproveLeaderProposal proto.InternalMessageInfo

func (m *MsgSquadApproveLeaderProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSquadApproveLeaderProposal) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

func (m *MsgSquadApproveLeaderProposal) GetSquadId() uint64 {
	if m != nil {
		return m.SquadId
	}
	return 0
}

func (m *MsgSquadApproveLeaderProposal) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type MsgSquadApproveLeaderProposalResponse struct {
}

func (m *MsgSquadApproveLeaderProposalResponse) Reset()         { *m = MsgSquadApproveLeaderProposalResponse{} }
func (m *MsgSquadApproveLeaderProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSquadApproveLeaderProposalResponse) ProtoMessage()    {}
func (*MsgSquadApproveLeaderProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{32}
}
func (m *MsgSquadApproveLeaderProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadApproveLeaderProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadApproveLeaderProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadApproveLeaderProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadApproveLeaderProposalResponse.Merge(m, src)
}
func (m *MsgSquadApproveLeaderProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadApproveLeaderProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadApproveLeaderProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadApproveLeaderProposalResponse proto.InternalMessageInfo

type MsgSquadApproveInvite struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Approve  bool   `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	SquadId  uint64 `protobuf:"varint,3,opt,name=squadId,proto3" json:"squadId,omitempty"`
	PlayerId uint64 `protobuf:"varint,4,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSquadApproveInvite) Reset()         { *m = MsgSquadApproveInvite{} }
func (m *MsgSquadApproveInvite) String() string { return proto.CompactTextString(m) }
func (*MsgSquadApproveInvite) ProtoMessage()    {}
func (*MsgSquadApproveInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{33}
}
func (m *MsgSquadApproveInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadApproveInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadApproveInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadApproveInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadApproveInvite.Merge(m, src)
}
func (m *MsgSquadApproveInvite) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadApproveInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadApproveInvite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadApproveInvite proto.InternalMessageInfo

func (m *MsgSquadApproveInvite) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSquadApproveInvite) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

func (m *MsgSquadApproveInvite) GetSquadId() uint64 {
	if m != nil {
		return m.SquadId
	}
	return 0
}

func (m *MsgSquadApproveInvite) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type MsgSquadApproveInviteResponse struct {
}

func (m *MsgSquadApproveInviteResponse) Reset()         { *m = MsgSquadApproveInviteResponse{} }
func (m *MsgSquadApproveInviteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSquadApproveInviteResponse) ProtoMessage()    {}
func (*MsgSquadApproveInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{34}
}
func (m *MsgSquadApproveInviteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadApproveInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadApproveInviteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadApproveInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadApproveInviteResponse.Merge(m, src)
}
func (m *MsgSquadApproveInviteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadApproveInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadApproveInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadApproveInviteResponse proto.InternalMessageInfo

type MsgSquadApproveJoinRequest struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Approve  bool   `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	SquadId  uint64 `protobuf:"varint,3,opt,name=squadId,proto3" json:"squadId,omitempty"`
	PlayerId uint64 `protobuf:"varint,4,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgSquadApproveJoinRequest) Reset()         { *m = MsgSquadApproveJoinRequest{} }
func (m *MsgSquadApproveJoinRequest) String() string { return proto.CompactTextString(m) }
func (*MsgSquadApproveJoinRequest) ProtoMessage()    {}
func (*MsgSquadApproveJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{35}
}
func (m *MsgSquadApproveJoinRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadApproveJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadApproveJoinRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadApproveJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadApproveJoinRequest.Merge(m, src)
}
func (m *MsgSquadApproveJoinRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadApproveJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadApproveJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadApproveJoinRequest proto.InternalMessageInfo

func (m *MsgSquadApproveJoinRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSquadApproveJoinRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

func (m *MsgSquadApproveJoinRequest) GetSquadId() uint64 {
	if m != nil {
		return m.SquadId
	}
	return 0
}

func (m *MsgSquadApproveJoinRequest) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type MsgSquadApproveJoinRequestResponse struct {
}

func (m *MsgSquadApproveJoinRequestResponse) Reset()         { *m = MsgSquadApproveJoinRequestResponse{} }
func (m *MsgSquadApproveJoinRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSquadApproveJoinRequestResponse) ProtoMessage()    {}
func (*MsgSquadApproveJoinRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{36}
}
func (m *MsgSquadApproveJoinRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSquadApproveJoinRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSquadApproveJoinRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSquadApproveJoinRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSquadApproveJoinRequestResponse.Merge(m, src)
}
func (m *MsgSquadApproveJoinRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSquadApproveJoinRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSquadApproveJoinRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSquadApproveJoinRequestResponse proto.InternalMessageInfo

type MsgPlayerCreateProxy struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgPlayerCreateProxy) Reset()         { *m = MsgPlayerCreateProxy{} }
func (m *MsgPlayerCreateProxy) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerCreateProxy) ProtoMessage()    {}
func (*MsgPlayerCreateProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{37}
}
func (m *MsgPlayerCreateProxy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerCreateProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerCreateProxy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerCreateProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerCreateProxy.Merge(m, src)
}
func (m *MsgPlayerCreateProxy) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerCreateProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerCreateProxy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerCreateProxy proto.InternalMessageInfo

func (m *MsgPlayerCreateProxy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlayerCreateProxy) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgPlayerCreateProxyResponse struct {
}

func (m *MsgPlayerCreateProxyResponse) Reset()         { *m = MsgPlayerCreateProxyResponse{} }
func (m *MsgPlayerCreateProxyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerCreateProxyResponse) ProtoMessage()    {}
func (*MsgPlayerCreateProxyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{38}
}
func (m *MsgPlayerCreateProxyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerCreateProxyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerCreateProxyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerCreateProxyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerCreateProxyResponse.Merge(m, src)
}
func (m *MsgPlayerCreateProxyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerCreateProxyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerCreateProxyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerCreateProxyResponse proto.InternalMessageInfo

type MsgPlayerCreate struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GuildId uint64 `protobuf:"varint,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
}

func (m *MsgPlayerCreate) Reset()         { *m = MsgPlayerCreate{} }
func (m *MsgPlayerCreate) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerCreate) ProtoMessage()    {}
func (*MsgPlayerCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{39}
}
func (m *MsgPlayerCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerCreate.Merge(m, src)
}
func (m *MsgPlayerCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerCreate proto.InternalMessageInfo

func (m *MsgPlayerCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlayerCreate) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

type MsgPlayerCreateResponse struct {
}

func (m *MsgPlayerCreateResponse) Reset()         { *m = MsgPlayerCreateResponse{} }
func (m *MsgPlayerCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerCreateResponse) ProtoMessage()    {}
func (*MsgPlayerCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{40}
}
func (m *MsgPlayerCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerCreateResponse.Merge(m, src)
}
func (m *MsgPlayerCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerCreateResponse proto.InternalMessageInfo

type MsgAddressApproveRegister struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Approve     bool   `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	AddressType string `protobuf:"bytes,3,opt,name=addressType,proto3" json:"addressType,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Permissions uint64 `protobuf:"varint,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (m *MsgAddressApproveRegister) Reset()         { *m = MsgAddressApproveRegister{} }
func (m *MsgAddressApproveRegister) String() string { return proto.CompactTextString(m) }
func (*MsgAddressApproveRegister) ProtoMessage()    {}
func (*MsgAddressApproveRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{41}
}
func (m *MsgAddressApproveRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressApproveRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressApproveRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressApproveRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressApproveRegister.Merge(m, src)
}
func (m *MsgAddressApproveRegister) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressApproveRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressApproveRegister.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressApproveRegister proto.InternalMessageInfo

func (m *MsgAddressApproveRegister) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddressApproveRegister) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

func (m *MsgAddressApproveRegister) GetAddressType() string {
	if m != nil {
		return m.AddressType
	}
	return ""
}

func (m *MsgAddressApproveRegister) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgAddressApproveRegister) GetPermissions() uint64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

type MsgAddressRegister struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerId uint64 `protobuf:"varint,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgAddressRegister) Reset()         { *m = MsgAddressRegister{} }
func (m *MsgAddressRegister) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRegister) ProtoMessage()    {}
func (*MsgAddressRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{42}
}
func (m *MsgAddressRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRegister.Merge(m, src)
}
func (m *MsgAddressRegister) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRegister.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRegister proto.InternalMessageInfo

func (m *MsgAddressRegister) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddressRegister) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MsgAddressRegister) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgAddressRegisterResponse struct {
}

func (m *MsgAddressRegisterResponse) Reset()         { *m = MsgAddressRegisterResponse{} }
func (m *MsgAddressRegisterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRegisterResponse) ProtoMessage()    {}
func (*MsgAddressRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{43}
}
func (m *MsgAddressRegisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRegisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRegisterResponse.Merge(m, src)
}
func (m *MsgAddressRegisterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRegisterResponse proto.InternalMessageInfo

type MsgAddressRevoke struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgAddressRevoke) Reset()         { *m = MsgAddressRevoke{} }
func (m *MsgAddressRevoke) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRevoke) ProtoMessage()    {}
func (*MsgAddressRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{44}
}
func (m *MsgAddressRevoke) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRevoke.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRevoke.Merge(m, src)
}
func (m *MsgAddressRevoke) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRevoke proto.InternalMessageInfo

func (m *MsgAddressRevoke) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddressRevoke) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgAddressRevokeResponse struct {
}

func (m *MsgAddressRevokeResponse) Reset()         { *m = MsgAddressRevokeResponse{} }
func (m *MsgAddressRevokeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddressRevokeResponse) ProtoMessage()    {}
func (*MsgAddressRevokeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{45}
}
func (m *MsgAddressRevokeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddressRevokeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddressRevokeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddressRevokeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddressRevokeResponse.Merge(m, src)
}
func (m *MsgAddressRevokeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddressRevokeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddressRevokeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddressRevokeResponse proto.InternalMessageInfo

type MsgGuildApproveRegister struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Approve  bool   `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	GuildId  uint64 `protobuf:"varint,3,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId uint64 `protobuf:"varint,4,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *MsgGuildApproveRegister) Reset()         { *m = MsgGuildApproveRegister{} }
func (m *MsgGuildApproveRegister) String() string { return proto.CompactTextString(m) }
func (*MsgGuildApproveRegister) ProtoMessage()    {}
func (*MsgGuildApproveRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{46}
}
func (m *MsgGuildApproveRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildApproveRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildApproveRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildApproveRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildApproveRegister.Merge(m, src)
}
func (m *MsgGuildApproveRegister) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildApproveRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildApproveRegister.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildApproveRegister proto.InternalMessageInfo

func (m *MsgGuildApproveRegister) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgGuildApproveRegister) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

func (m *MsgGuildApproveRegister) GetGuildId() uint64 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *MsgGuildApproveRegister) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type MsgGuildApproveRegisterResponse struct {
}

func (m *MsgGuildApproveRegisterResponse) Reset()         { *m = MsgGuildApproveRegisterResponse{} }
func (m *MsgGuildApproveRegisterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGuildApproveRegisterResponse) ProtoMessage()    {}
func (*MsgGuildApproveRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{47}
}
func (m *MsgGuildApproveRegisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGuildApproveRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGuildApproveRegisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGuildApproveRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGuildApproveRegisterResponse.Merge(m, src)
}
func (m *MsgGuildApproveRegisterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGuildApproveRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGuildApproveRegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGuildApproveRegisterResponse proto.InternalMessageInfo

type MsgPlanetExplore struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgPlanetExplore) Reset()         { *m = MsgPlanetExplore{} }
func (m *MsgPlanetExplore) String() string { return proto.CompactTextString(m) }
func (*MsgPlanetExplore) ProtoMessage()    {}
func (*MsgPlanetExplore) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{48}
}
func (m *MsgPlanetExplore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlanetExplore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlanetExplore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlanetExplore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlanetExplore.Merge(m, src)
}
func (m *MsgPlanetExplore) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlanetExplore) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlanetExplore.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlanetExplore proto.InternalMessageInfo

func (m *MsgPlanetExplore) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgPlanetExploreResponse struct {
	Planet Planet `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet"`
}

func (m *MsgPlanetExploreResponse) Reset()         { *m = MsgPlanetExploreResponse{} }
func (m *MsgPlanetExploreResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlanetExploreResponse) ProtoMessage()    {}
func (*MsgPlanetExploreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{49}
}
func (m *MsgPlanetExploreResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlanetExploreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlanetExploreResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlanetExploreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlanetExploreResponse.Merge(m, src)
}
func (m *MsgPlanetExploreResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlanetExploreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlanetExploreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlanetExploreResponse proto.InternalMessageInfo

func (m *MsgPlanetExploreResponse) GetPlanet() Planet {
	if m != nil {
		return m.Planet
	}
	return Planet{}
}

type MsgStructActivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructActivate) Reset()         { *m = MsgStructActivate{} }
func (m *MsgStructActivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructActivate) ProtoMessage()    {}
func (*MsgStructActivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{50}
}
func (m *MsgStructActivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructActivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructActivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructActivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructActivate.Merge(m, src)
}
func (m *MsgStructActivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructActivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructActivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructActivate proto.InternalMessageInfo

func (m *MsgStructActivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructActivate) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

type MsgStructActivateResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructActivateResponse) Reset()         { *m = MsgStructActivateResponse{} }
func (m *MsgStructActivateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructActivateResponse) ProtoMessage()    {}
func (*MsgStructActivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{51}
}
func (m *MsgStructActivateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructActivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructActivateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructActivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructActivateResponse.Merge(m, src)
}
func (m *MsgStructActivateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructActivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructActivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructActivateResponse proto.InternalMessageInfo

func (m *MsgStructActivateResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructBuildInitiate struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructType string `protobuf:"bytes,2,opt,name=structType,proto3" json:"structType,omitempty"`
	PlanetId   uint64 `protobuf:"varint,3,opt,name=planetId,proto3" json:"planetId,omitempty"`
	Slot       uint64 `protobuf:"varint,4,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (m *MsgStructBuildInitiate) Reset()         { *m = MsgStructBuildInitiate{} }
func (m *MsgStructBuildInitiate) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildInitiate) ProtoMessage()    {}
func (*MsgStructBuildInitiate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{52}
}
func (m *MsgStructBuildInitiate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildInitiate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildInitiate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildInitiate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildInitiate.Merge(m, src)
}
func (m *MsgStructBuildInitiate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildInitiate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildInitiate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildInitiate proto.InternalMessageInfo

func (m *MsgStructBuildInitiate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructBuildInitiate) GetStructType() string {
	if m != nil {
		return m.StructType
	}
	return ""
}

func (m *MsgStructBuildInitiate) GetPlanetId() uint64 {
	if m != nil {
		return m.PlanetId
	}
	return 0
}

func (m *MsgStructBuildInitiate) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type MsgStructBuildInitiateResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructBuildInitiateResponse) Reset()         { *m = MsgStructBuildInitiateResponse{} }
func (m *MsgStructBuildInitiateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildInitiateResponse) ProtoMessage()    {}
func (*MsgStructBuildInitiateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{53}
}
func (m *MsgStructBuildInitiateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildInitiateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildInitiateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildInitiateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildInitiateResponse.Merge(m, src)
}
func (m *MsgStructBuildInitiateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildInitiateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildInitiateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildInitiateResponse proto.InternalMessageInfo

func (m *MsgStructBuildInitiateResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructBuildComplete struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStructBuildComplete) Reset()         { *m = MsgStructBuildComplete{} }
func (m *MsgStructBuildComplete) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildComplete) ProtoMessage()    {}
func (*MsgStructBuildComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{54}
}
func (m *MsgStructBuildComplete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildComplete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildComplete.Merge(m, src)
}
func (m *MsgStructBuildComplete) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildComplete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildComplete proto.InternalMessageInfo

func (m *MsgStructBuildComplete) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructBuildComplete) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

func (m *MsgStructBuildComplete) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructBuildComplete) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgStructBuildCompleteResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructBuildCompleteResponse) Reset()         { *m = MsgStructBuildCompleteResponse{} }
func (m *MsgStructBuildCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructBuildCompleteResponse) ProtoMessage()    {}
func (*MsgStructBuildCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{55}
}
func (m *MsgStructBuildCompleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructBuildCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructBuildCompleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructBuildCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructBuildCompleteResponse.Merge(m, src)
}
func (m *MsgStructBuildCompleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructBuildCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructBuildCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructBuildCompleteResponse proto.InternalMessageInfo

func (m *MsgStructBuildCompleteResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructMineActivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructMineActivate) Reset()         { *m = MsgStructMineActivate{} }
func (m *MsgStructMineActivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructMineActivate) ProtoMessage()    {}
func (*MsgStructMineActivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{56}
}
func (m *MsgStructMineActivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMineActivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMineActivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMineActivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMineActivate.Merge(m, src)
}
func (m *MsgStructMineActivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMineActivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMineActivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMineActivate proto.InternalMessageInfo

func (m *MsgStructMineActivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructMineActivate) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

type MsgStructMineActivateResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructMineActivateResponse) Reset()         { *m = MsgStructMineActivateResponse{} }
func (m *MsgStructMineActivateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructMineActivateResponse) ProtoMessage()    {}
func (*MsgStructMineActivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{57}
}
func (m *MsgStructMineActivateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMineActivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMineActivateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMineActivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMineActivateResponse.Merge(m, src)
}
func (m *MsgStructMineActivateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMineActivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMineActivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMineActivateResponse proto.InternalMessageInfo

func (m *MsgStructMineActivateResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructMineDeactivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructMineDeactivate) Reset()         { *m = MsgStructMineDeactivate{} }
func (m *MsgStructMineDeactivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructMineDeactivate) ProtoMessage()    {}
func (*MsgStructMineDeactivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{58}
}
func (m *MsgStructMineDeactivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMineDeactivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMineDeactivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMineDeactivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMineDeactivate.Merge(m, src)
}
func (m *MsgStructMineDeactivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMineDeactivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMineDeactivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMineDeactivate proto.InternalMessageInfo

func (m *MsgStructMineDeactivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructMineDeactivate) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

type MsgStructMineDeactivateResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructMineDeactivateResponse) Reset()         { *m = MsgStructMineDeactivateResponse{} }
func (m *MsgStructMineDeactivateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructMineDeactivateResponse) ProtoMessage()    {}
func (*MsgStructMineDeactivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{59}
}
func (m *MsgStructMineDeactivateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMineDeactivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMineDeactivateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMineDeactivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMineDeactivateResponse.Merge(m, src)
}
func (m *MsgStructMineDeactivateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMineDeactivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMineDeactivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMineDeactivateResponse proto.InternalMessageInfo

func (m *MsgStructMineDeactivateResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructMine struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStructMine) Reset()         { *m = MsgStructMine{} }
func (m *MsgStructMine) String() string { return proto.CompactTextString(m) }
func (*MsgStructMine) ProtoMessage()    {}
func (*MsgStructMine) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{60}
}
func (m *MsgStructMine) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMine.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMine.Merge(m, src)
}
func (m *MsgStructMine) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMine) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMine.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMine proto.InternalMessageInfo

func (m *MsgStructMine) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructMine) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

func (m *MsgStructMine) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructMine) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgStructMineResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructMineResponse) Reset()         { *m = MsgStructMineResponse{} }
func (m *MsgStructMineResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructMineResponse) ProtoMessage()    {}
func (*MsgStructMineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{61}
}
func (m *MsgStructMineResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructMineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructMineResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructMineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructMineResponse.Merge(m, src)
}
func (m *MsgStructMineResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructMineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructMineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructMineResponse proto.InternalMessageInfo

func (m *MsgStructMineResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructRefineActivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructRefineActivate) Reset()         { *m = MsgStructRefineActivate{} }
func (m *MsgStructRefineActivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructRefineActivate) ProtoMessage()    {}
func (*MsgStructRefineActivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{62}
}
func (m *MsgStructRefineActivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructRefineActivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructRefineActivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructRefineActivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructRefineActivate.Merge(m, src)
}
func (m *MsgStructRefineActivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructRefineActivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructRefineActivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructRefineActivate proto.InternalMessageInfo

func (m *MsgStructRefineActivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructRefineActivate) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

type MsgStructRefineActivateResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructRefineActivateResponse) Reset()         { *m = MsgStructRefineActivateResponse{} }
func (m *MsgStructRefineActivateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructRefineActivateResponse) ProtoMessage()    {}
func (*MsgStructRefineActivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{63}
}
func (m *MsgStructRefineActivateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructRefineActivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructRefineActivateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructRefineActivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructRefineActivateResponse.Merge(m, src)
}
func (m *MsgStructRefineActivateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructRefineActivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructRefineActivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructRefineActivateResponse proto.InternalMessageInfo

func (m *MsgStructRefineActivateResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructRefineDeactivate struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
}

func (m *MsgStructRefineDeactivate) Reset()         { *m = MsgStructRefineDeactivate{} }
func (m *MsgStructRefineDeactivate) String() string { return proto.CompactTextString(m) }
func (*MsgStructRefineDeactivate) ProtoMessage()    {}
func (*MsgStructRefineDeactivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{64}
}
func (m *MsgStructRefineDeactivate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructRefineDeactivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructRefineDeactivate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructRefineDeactivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructRefineDeactivate.Merge(m, src)
}
func (m *MsgStructRefineDeactivate) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructRefineDeactivate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructRefineDeactivate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructRefineDeactivate proto.InternalMessageInfo

func (m *MsgStructRefineDeactivate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructRefineDeactivate) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

type MsgStructRefineDeactivateResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructRefineDeactivateResponse) Reset()         { *m = MsgStructRefineDeactivateResponse{} }
func (m *MsgStructRefineDeactivateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructRefineDeactivateResponse) ProtoMessage()    {}
func (*MsgStructRefineDeactivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{65}
}
func (m *MsgStructRefineDeactivateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructRefineDeactivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructRefineDeactivateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructRefineDeactivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructRefineDeactivateResponse.Merge(m, src)
}
func (m *MsgStructRefineDeactivateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructRefineDeactivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructRefineDeactivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructRefineDeactivateResponse proto.InternalMessageInfo

func (m *MsgStructRefineDeactivateResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgStructRefine struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStructRefine) Reset()         { *m = MsgStructRefine{} }
func (m *MsgStructRefine) String() string { return proto.CompactTextString(m) }
func (*MsgStructRefine) ProtoMessage()    {}
func (*MsgStructRefine) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{66}
}
func (m *MsgStructRefine) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructRefine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructRefine.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructRefine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructRefine.Merge(m, src)
}
func (m *MsgStructRefine) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructRefine) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructRefine.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructRefine proto.InternalMessageInfo

func (m *MsgStructRefine) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructRefine) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

func (m *MsgStructRefine) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgStructRefine) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgStructRefineResponse struct {
	Struct Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct"`
}

func (m *MsgStructRefineResponse) Reset()         { *m = MsgStructRefineResponse{} }
func (m *MsgStructRefineResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructRefineResponse) ProtoMessage()    {}
func (*MsgStructRefineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{67}
}
func (m *MsgStructRefineResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructRefineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructRefineResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructRefineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructRefineResponse.Merge(m, src)
}
func (m *MsgStructRefineResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructRefineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructRefineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructRefineResponse proto.InternalMessageInfo

func (m *MsgStructRefineResponse) GetStruct() Struct {
	if m != nil {
		return m.Struct
	}
	return Struct{}
}

type MsgPlayerUpdatePrimaryAddress struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PrimaryAddress string `protobuf:"bytes,2,opt,name=primaryAddress,proto3" json:"primaryAddress,omitempty"`
}

func (m *MsgPlayerUpdatePrimaryAddress) Reset()         { *m = MsgPlayerUpdatePrimaryAddress{} }
func (m *MsgPlayerUpdatePrimaryAddress) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerUpdatePrimaryAddress) ProtoMessage()    {}
func (*MsgPlayerUpdatePrimaryAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{68}
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerUpdatePrimaryAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddress.Merge(m, src)
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerUpdatePrimaryAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerUpdatePrimaryAddress proto.InternalMessageInfo

func (m *MsgPlayerUpdatePrimaryAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPlayerUpdatePrimaryAddress) GetPrimaryAddress() string {
	if m != nil {
		return m.PrimaryAddress
	}
	return ""
}

type MsgPlayerUpdatePrimaryAddressResponse struct {
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) Reset()         { *m = MsgPlayerUpdatePrimaryAddressResponse{} }
func (m *MsgPlayerUpdatePrimaryAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerUpdatePrimaryAddressResponse) ProtoMessage()    {}
func (*MsgPlayerUpdatePrimaryAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{69}
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse.Merge(m, src)
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerUpdatePrimaryAddressResponse proto.InternalMessageInfo

type MsgStructInfuse struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId     uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
	InfuseAmount string `protobuf:"bytes,3,opt,name=infuseAmount,proto3" json:"infuseAmount,omitempty"`
}

func (m *MsgStructInfuse) Reset()         { *m = MsgStructInfuse{} }
func (m *MsgStructInfuse) String() string { return proto.CompactTextString(m) }
func (*MsgStructInfuse) ProtoMessage()    {}
func (*MsgStructInfuse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{70}
}
func (m *MsgStructInfuse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructInfuse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructInfuse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructInfuse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructInfuse.Merge(m, src)
}
func (m *MsgStructInfuse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructInfuse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructInfuse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructInfuse proto.InternalMessageInfo

func (m *MsgStructInfuse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStructInfuse) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

func (m *MsgStructInfuse) GetInfuseAmount() string {
	if m != nil {
		return m.InfuseAmount
	}
	return ""
}

type MsgStructInfuseResponse struct {
}

func (m *MsgStructInfuseResponse) Reset()         { *m = MsgStructInfuseResponse{} }
func (m *MsgStructInfuseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStructInfuseResponse) ProtoMessage()    {}
func (*MsgStructInfuseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{71}
}
func (m *MsgStructInfuseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStructInfuseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStructInfuseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStructInfuseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStructInfuseResponse.Merge(m, src)
}
func (m *MsgStructInfuseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStructInfuseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStructInfuseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStructInfuseResponse proto.InternalMessageInfo

type MsgSabotage struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StructId uint64 `protobuf:"varint,2,opt,name=structId,proto3" json:"structId,omitempty"`
	Proof    string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	Nonce    string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgSabotage) Reset()         { *m = MsgSabotage{} }
func (m *MsgSabotage) String() string { return proto.CompactTextString(m) }
func (*MsgSabotage) ProtoMessage()    {}
func (*MsgSabotage) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{72}
}
func (m *MsgSabotage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSabotage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSabotage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSabotage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSabotage.Merge(m, src)
}
func (m *MsgSabotage) XXX_Size() int {
	return m.Size()
}
func (m *MsgSabotage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSabotage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSabotage proto.InternalMessageInfo

func (m *MsgSabotage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSabotage) GetStructId() uint64 {
	if m != nil {
		return m.StructId
	}
	return 0
}

func (m *MsgSabotage) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *MsgSabotage) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type MsgSabotageResponse struct {
}

func (m *MsgSabotageResponse) Reset()         { *m = MsgSabotageResponse{} }
func (m *MsgSabotageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSabotageResponse) ProtoMessage()    {}
func (*MsgSabotageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fd6c203bede659, []int{73}
}
func (m *MsgSabotageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSabotageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSabotageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSabotageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSabotageResponse.Merge(m, src)
}
func (m *MsgSabotageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSabotageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSabotageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSabotageResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSubstationCreate)(nil), "structs.MsgSubstationCreate")
	proto.RegisterType((*MsgSubstationCreateResponse)(nil), "structs.MsgSubstationCreateResponse")
	proto.RegisterType((*MsgSubstationDelete)(nil), "structs.MsgSubstationDelete")
	proto.RegisterType((*MsgSubstationDeleteResponse)(nil), "structs.MsgSubstationDeleteResponse")
	proto.RegisterType((*MsgSubstationAllocationConnect)(nil), "structs.MsgSubstationAllocationConnect")
	proto.RegisterType((*MsgSubstationAllocationConnectResponse)(nil), "structs.MsgSubstationAllocationConnectResponse")
	proto.RegisterType((*MsgSubstationAllocationDisconnect)(nil), "structs.MsgSubstationAllocationDisconnect")
	proto.RegisterType((*MsgSubstationAllocationDisconnectResponse)(nil), "structs.MsgSubstationAllocationDisconnectResponse")
	proto.RegisterType((*MsgSubstationPlayerConnect)(nil), "structs.MsgSubstationPlayerConnect")
	proto.RegisterType((*MsgSubstationPlayerConnectResponse)(nil), "structs.MsgSubstationPlayerConnectResponse")
	proto.RegisterType((*MsgSubstationPlayerDisconnect)(nil), "structs.MsgSubstationPlayerDisconnect")
	proto.RegisterType((*MsgSubstationPlayerDisconnectResponse)(nil), "structs.MsgSubstationPlayerDisconnectResponse")
	proto.RegisterType((*MsgAllocationCreate)(nil), "structs.MsgAllocationCreate")
	proto.RegisterType((*MsgAllocationCreateResponse)(nil), "structs.MsgAllocationCreateResponse")
	proto.RegisterType((*MsgSubstationAllocationCreate)(nil), "structs.MsgSubstationAllocationCreate")
	proto.RegisterType((*MsgReactorAllocationCreate)(nil), "structs.MsgReactorAllocationCreate")
	proto.RegisterType((*MsgStructAllocationCreate)(nil), "structs.MsgStructAllocationCreate")
	proto.RegisterType((*MsgGuildCreate)(nil), "structs.MsgGuildCreate")
	proto.RegisterType((*MsgGuildCreateResponse)(nil), "structs.MsgGuildCreateResponse")
	proto.RegisterType((*MsgGuildUpdateOwnerId)(nil), "structs.MsgGuildUpdateOwnerId")
	proto.RegisterType((*MsgGuildUpdateEntrySubstationId)(nil), "structs.MsgGuildUpdateEntrySubstationId")
	proto.RegisterType((*MsgGuildUpdateEndpoint)(nil), "structs.MsgGuildUpdateEndpoint")
	proto.RegisterType((*MsgGuildUpdateJoinType)(nil), "structs.MsgGuildUpdateJoinType")
	proto.RegisterType((*MsgGuildUpdateInfusionJoinMinimum)(nil), "structs.MsgGuildUpdateInfusionJoinMinimum")
	proto.RegisterType((*MsgGuildUpdateSquadJoinTypeMinimum)(nil), "structs.MsgGuildUpdateSquadJoinTypeMinimum")
	proto.RegisterType((*MsgGuildUpdateOpenSquadCreation)(nil), "structs.MsgGuildUpdateOpenSquadCreation")
	proto.RegisterType((*MsgGuildUpdateResponse)(nil), "structs.MsgGuildUpdateResponse")
	proto.RegisterType((*MsgSquadCreate)(nil), "structs.MsgSquadCreate")
	proto.RegisterType((*MsgSquadCreateResponse)(nil), "structs.MsgSquadCreateResponse")
	proto.RegisterType((*MsgSquadLeaderProposal)(nil), "structs.MsgSquadLeaderProposal")
	proto.RegisterType((*MsgSquadLeaderProposalResponse)(nil), "structs.MsgSquadLeaderProposalResponse")
	proto.RegisterType((*MsgSquadApproveLeaderProposal)(nil), "structs.MsgSquadApproveLeaderProposal")
	proto.RegisterType((*MsgSquadApproveLeaderProposalResponse)(nil), "structs.MsgSquadApproveLeaderProposalResponse")
	proto.RegisterType((*MsgSquadApproveInvite)(nil), "structs.MsgSquadApproveInvite")
	proto.RegisterType((*MsgSquadApproveInviteResponse)(nil), "structs.MsgSquadApproveInviteResponse")
	proto.RegisterType((*MsgSquadApproveJoinRequest)(nil), "structs.MsgSquadApproveJoinRequest")
	proto.RegisterType((*MsgSquadApproveJoinRequestResponse)(nil), "structs.MsgSquadApproveJoinRequestResponse")
	proto.RegisterType((*MsgPlayerCreateProxy)(nil), "structs.MsgPlayerCreateProxy")
	proto.RegisterType((*MsgPlayerCreateProxyResponse)(nil), "structs.MsgPlayerCreateProxyResponse")
	proto.RegisterType((*MsgPlayerCreate)(nil), "structs.MsgPlayerCreate")
	proto.RegisterType((*MsgPlayerCreateResponse)(nil), "structs.MsgPlayerCreateResponse")
	proto.RegisterType((*MsgAddressApproveRegister)(nil), "structs.MsgAddressApproveRegister")
	proto.RegisterType((*MsgAddressRegister)(nil), "structs.MsgAddressRegister")
	proto.RegisterType((*MsgAddressRegisterResponse)(nil), "structs.MsgAddressRegisterResponse")
	proto.RegisterType((*MsgAddressRevoke)(nil), "structs.MsgAddressRevoke")
	proto.RegisterType((*MsgAddressRevokeResponse)(nil), "structs.MsgAddressRevokeResponse")
	proto.RegisterType((*MsgGuildApproveRegister)(nil), "structs.MsgGuildApproveRegister")
	proto.RegisterType((*MsgGuildApproveRegisterResponse)(nil), "structs.MsgGuildApproveRegisterResponse")
	proto.RegisterType((*MsgPlanetExplore)(nil), "structs.MsgPlanetExplore")
	proto.RegisterType((*MsgPlanetExploreResponse)(nil), "structs.MsgPlanetExploreResponse")
	proto.RegisterType((*MsgStructActivate)(nil), "structs.MsgStructActivate")
	proto.RegisterType((*MsgStructActivateResponse)(nil), "structs.MsgStructActivateResponse")
	proto.RegisterType((*MsgStructBuildInitiate)(nil), "structs.MsgStructBuildInitiate")
	proto.RegisterType((*MsgStructBuildInitiateResponse)(nil), "structs.MsgStructBuildInitiateResponse")
	proto.RegisterType((*MsgStructBuildComplete)(nil), "structs.MsgStructBuildComplete")
	proto.RegisterType((*MsgStructBuildCompleteResponse)(nil), "structs.MsgStructBuildCompleteResponse")
	proto.RegisterType((*MsgStructMineActivate)(nil), "structs.MsgStructMineActivate")
	proto.RegisterType((*MsgStructMineActivateResponse)(nil), "structs.MsgStructMineActivateResponse")
	proto.RegisterType((*MsgStructMineDeactivate)(nil), "structs.MsgStructMineDeactivate")
	proto.RegisterType((*MsgStructMineDeactivateResponse)(nil), "structs.MsgStructMineDeactivateResponse")
	proto.RegisterType((*MsgStructMine)(nil), "structs.MsgStructMine")
	proto.RegisterType((*MsgStructMineResponse)(nil), "structs.MsgStructMineResponse")
	proto.RegisterType((*MsgStructRefineActivate)(nil), "structs.MsgStructRefineActivate")
	proto.RegisterType((*MsgStructRefineActivateResponse)(nil), "structs.MsgStructRefineActivateResponse")
	proto.RegisterType((*MsgStructRefineDeactivate)(nil), "structs.MsgStructRefineDeactivate")
	proto.RegisterType((*MsgStructRefineDeactivateResponse)(nil), "structs.MsgStructRefineDeactivateResponse")
	proto.RegisterType((*MsgStructRefine)(nil), "structs.MsgStructRefine")
	proto.RegisterType((*MsgStructRefineResponse)(nil), "structs.MsgStructRefineResponse")
	proto.RegisterType((*MsgPlayerUpdatePrimaryAddress)(nil), "structs.MsgPlayerUpdatePrimaryAddress")
	proto.RegisterType((*MsgPlayerUpdatePrimaryAddressResponse)(nil), "structs.MsgPlayerUpdatePrimaryAddressResponse")
	proto.RegisterType((*MsgStructInfuse)(nil), "structs.MsgStructInfuse")
	proto.RegisterType((*MsgStructInfuseResponse)(nil), "structs.MsgStructInfuseResponse")
	proto.RegisterType((*MsgSabotage)(nil), "structs.MsgSabotage")
	proto.RegisterType((*MsgSabotageResponse)(nil), "structs.MsgSabotageResponse")
}

func init() { proto.RegisterFile("structs/structs/tx.proto", fileDescriptor_38fd6c203bede659) }

var fileDescriptor_38fd6c203bede659 = []byte{
	// 2069 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0x4f, 0x73, 0xdb, 0xb8,
	0x15, 0x0f, 0x2d, 0x25, 0x71, 0x5e, 0x12, 0x27, 0xa1, 0x1d, 0x5b, 0x66, 0x1c, 0xc9, 0x61, 0xb2,
	0x8e, 0x9b, 0x6c, 0xe3, 0xd6, 0xdb, 0x43, 0x4f, 0x3b, 0xe3, 0xfc, 0xd9, 0xad, 0x33, 0x55, 0xe3,
	0x2a, 0xcd, 0xee, 0xb4, 0xd3, 0xe9, 0x0e, 0x2d, 0xc1, 0x5a, 0xae, 0x25, 0x82, 0x21, 0x29, 0xc7,
	0xea, 0xa5, 0xff, 0xa6, 0x7f, 0x76, 0x7a, 0xe9, 0xb1, 0x5f, 0xa2, 0x9d, 0x9e, 0xfa, 0x19, 0xf6,
	0xb8, 0xc7, 0x9e, 0x3a, 0x9d, 0xe4, 0x8b, 0x74, 0x08, 0x80, 0x20, 0x40, 0x00, 0xa4, 0x24, 0x7b,
	0x9c, 0x93, 0x0d, 0xbc, 0x87, 0xdf, 0xfb, 0xe1, 0xe1, 0xe1, 0x01, 0x78, 0x14, 0x34, 0xe2, 0x24,
	0x1a, 0x75, 0x93, 0x78, 0x2b, 0xfb, 0x9b, 0x1c, 0x3f, 0x0a, 0x23, 0x9c, 0x60, 0xfb, 0x22, 0xeb,
	0x71, 0x96, 0xfa, 0xb8, 0x8f, 0x49, 0xdf, 0x56, 0xfa, 0x1f, 0x15, 0x3b, 0xab, 0x7d, 0x8c, 0xfb,
	0x03, 0xb4, 0x45, 0x5a, 0xfb, 0xa3, 0x83, 0x2d, 0x2f, 0x18, 0x67, 0xa2, 0x2e, 0x8e, 0x87, 0x38,
	0xfe, 0x82, 0x8e, 0xa1, 0x0d, 0x26, 0x72, 0x8a, 0xe6, 0x0e, 0xd1, 0x38, 0x93, 0xad, 0x15, 0x65,
	0xe1, 0xc0, 0x0b, 0x50, 0x62, 0x92, 0xd2, 0xbf, 0x4c, 0x7a, 0x4b, 0x91, 0xbe, 0x1e, 0x79, 0x3d,
	0x2a, 0x74, 0xff, 0x68, 0xc1, 0x62, 0x3b, 0xee, 0xbf, 0x1c, 0xed, 0xc7, 0x89, 0x97, 0xf8, 0x38,
	0x78, 0x12, 0x21, 0x2f, 0x41, 0x76, 0x03, 0x2e, 0x76, 0xd3, 0xff, 0x70, 0xd4, 0xb0, 0xd6, 0xad,
	0xcd, 0x4b, 0x9d, 0xac, 0x69, 0x2f, 0xc1, 0x79, 0xfc, 0x26, 0x40, 0x51, 0x63, 0x6e, 0xdd, 0xda,
	0xac, 0x77, 0x68, 0xc3, 0xfe, 0x18, 0x9c, 0x70, 0xe0, 0x8d, 0x51, 0xf4, 0x04, 0x07, 0x01, 0xea,
	0xa6, 0x48, 0x3b, 0x83, 0x01, 0xee, 0x12, 0xcc, 0x46, 0x8d, 0xa8, 0x96, 0x68, 0xb8, 0x3b, 0x70,
	0x4b, 0x43, 0xa3, 0x83, 0xe2, 0x10, 0x07, 0x31, 0xb2, 0x5d, 0xb8, 0x12, 0x73, 0xd9, 0x6e, 0x8f,
	0x70, 0xaa, 0x77, 0xa4, 0x3e, 0xf7, 0xeb, 0xe2, 0x54, 0x9e, 0xa2, 0x01, 0x2a, 0x9d, 0x4a, 0x11,
	0x75, 0x4e, 0x45, 0xb5, 0x7f, 0x00, 0x37, 0x87, 0x7e, 0x3f, 0x22, 0xcd, 0x97, 0xa2, 0x32, 0x9d,
	0x93, 0x5e, 0xe8, 0xde, 0x2e, 0x4c, 0x87, 0x52, 0xc9, 0xa6, 0xe3, 0xfe, 0xdd, 0x82, 0xa6, 0x24,
	0xcf, 0x3d, 0xc1, 0xbc, 0x53, 0xce, 0xda, 0xe3, 0xea, 0x39, 0x6b, 0xb1, 0xcf, 0xfe, 0x21, 0xac,
	0xf4, 0x50, 0x9c, 0xf8, 0x81, 0x89, 0xb7, 0x49, 0xec, 0x6e, 0xc2, 0x46, 0x39, 0x33, 0x3e, 0x09,
	0x0f, 0xee, 0x18, 0x34, 0x9f, 0xfa, 0x71, 0xf7, 0x34, 0xa6, 0xe1, 0x3e, 0x84, 0xef, 0x54, 0x9a,
	0xe0, 0x7c, 0x8e, 0xc0, 0x91, 0x94, 0xf7, 0xc4, 0x68, 0x3b, 0x61, 0x14, 0x38, 0x30, 0x4f, 0x83,
	0x97, 0x3b, 0x90, 0xb7, 0xdd, 0x7b, 0xe0, 0x9a, 0xed, 0x72, 0x76, 0xaf, 0xe0, 0xb6, 0x46, 0x6b,
	0x22, 0x4f, 0x89, 0xc6, 0xe7, 0x0a, 0xc6, 0xef, 0xc3, 0x07, 0xa5, 0xb0, 0xdc, 0xfe, 0xbf, 0xe9,
	0xee, 0x10, 0x96, 0xb3, 0x6a, 0xa3, 0x37, 0x01, 0xba, 0x38, 0x48, 0x22, 0x3c, 0x18, 0xb0, 0xdd,
	0x7e, 0xa9, 0x23, 0xf4, 0xd8, 0x1f, 0x01, 0xc4, 0x78, 0x14, 0x75, 0xd1, 0xcf, 0xc6, 0x21, 0x22,
	0x5e, 0x59, 0xd8, 0x5e, 0x7c, 0xc4, 0x92, 0xcc, 0x23, 0xbc, 0xff, 0x15, 0xea, 0x26, 0xa9, 0xa8,
	0x23, 0xa8, 0xa5, 0x73, 0xa1, 0xad, 0xdd, 0x5e, 0xa3, 0x4e, 0xe7, 0x92, 0xb5, 0xd3, 0xcc, 0x12,
	0xe2, 0x37, 0x28, 0x6a, 0x9c, 0xa7, 0x99, 0x85, 0x34, 0x58, 0x66, 0x28, 0xf2, 0x16, 0x33, 0x83,
	0x14, 0x46, 0x96, 0x26, 0x8c, 0xfe, 0x6a, 0x15, 0x9c, 0x7f, 0x8a, 0x5e, 0x10, 0x27, 0x54, 0x33,
	0x4d, 0xa8, 0x2e, 0x4e, 0xe8, 0x2f, 0x16, 0x09, 0xd4, 0x0e, 0xf2, 0xba, 0x09, 0x8e, 0xde, 0x2b,
	0x95, 0x3f, 0x5b, 0xb0, 0x9a, 0x3a, 0x86, 0xac, 0xd9, 0x7b, 0x65, 0x92, 0xc0, 0x42, 0x3b, 0xee,
	0x7f, 0x3a, 0xf2, 0x07, 0xbd, 0x4a, 0xeb, 0x0e, 0xcc, 0xa3, 0xa0, 0x17, 0x62, 0x3f, 0x48, 0x98,
	0x6d, 0xde, 0xb6, 0x3f, 0x84, 0x1b, 0x28, 0x48, 0xa2, 0xb1, 0x26, 0xe5, 0xa9, 0x02, 0x77, 0x1b,
	0x96, 0x65, 0xab, 0x3c, 0xac, 0x1a, 0x70, 0xb1, 0x9f, 0x76, 0xf3, 0x88, 0xca, 0x9a, 0xee, 0xe7,
	0x70, 0x33, 0x1b, 0xf3, 0x2a, 0xec, 0x79, 0x09, 0x7a, 0x91, 0x1e, 0x80, 0xbb, 0xbd, 0x12, 0xc2,
	0x0b, 0x30, 0xe7, 0x67, 0x5b, 0x77, 0xce, 0xef, 0xe5, 0x47, 0x68, 0x4d, 0x38, 0x42, 0xdd, 0x31,
	0xb4, 0x64, 0xe0, 0x67, 0x45, 0xbe, 0x53, 0x98, 0x98, 0xce, 0x0f, 0xbf, 0xca, 0xfd, 0x90, 0x99,
	0x66, 0xfe, 0x9c, 0xdc, 0xa2, 0xb8, 0x2a, 0x35, 0x79, 0x55, 0xdc, 0x2f, 0x8b, 0xf8, 0xcf, 0xb1,
	0x1f, 0x90, 0x7c, 0x30, 0x39, 0xfe, 0x3d, 0xb8, 0x4a, 0x96, 0x20, 0x1b, 0xca, 0x66, 0x23, 0x77,
	0xba, 0xbf, 0x21, 0x87, 0x92, 0x60, 0x69, 0x37, 0x38, 0x18, 0xc5, 0x3e, 0x0e, 0x52, 0x8d, 0xb6,
	0x1f, 0xf8, 0xc3, 0xd1, 0x70, 0x0a, 0xa3, 0xdf, 0x83, 0x45, 0x5f, 0x05, 0x60, 0xa6, 0x75, 0x22,
	0xf7, 0xf7, 0x16, 0x39, 0x0e, 0x04, 0x06, 0x2f, 0xd3, 0xeb, 0x56, 0x46, 0x70, 0x7a, 0x0a, 0xdb,
	0xb0, 0x14, 0x6b, 0x10, 0x18, 0x07, 0xad, 0x4c, 0x0d, 0xa5, 0x17, 0x21, 0x0a, 0x08, 0x0f, 0x12,
	0xe6, 0x3e, 0x0e, 0xa6, 0x0b, 0x25, 0x5c, 0x1c, 0x4e, 0xac, 0xcf, 0x77, 0x54, 0x81, 0xdb, 0x28,
	0x2e, 0x35, 0x3f, 0x81, 0xfe, 0x65, 0x91, 0x3d, 0x9e, 0xab, 0x97, 0xad, 0xbe, 0xb0, 0xff, 0xe6,
	0xa4, 0xfd, 0x67, 0x2f, 0xc3, 0x85, 0x01, 0xf2, 0x7a, 0x7c, 0xf7, 0xb0, 0x56, 0x1a, 0x1f, 0x92,
	0x2f, 0x58, 0x7e, 0x91, 0x3b, 0xf5, 0xfb, 0xe2, 0x7c, 0x79, 0x7e, 0x10, 0x18, 0x8b, 0xf9, 0x81,
	0x00, 0xe7, 0xf9, 0x81, 0x35, 0xdd, 0x5e, 0x3e, 0xe6, 0xc7, 0x84, 0xd9, 0x5e, 0x84, 0x43, 0x1c,
	0x7b, 0x83, 0xf2, 0xd9, 0x66, 0x68, 0x73, 0x12, 0x9a, 0x69, 0xb6, 0xee, 0x3a, 0xbd, 0x40, 0xaa,
	0x56, 0xb8, 0xbb, 0xbf, 0x66, 0x87, 0x5e, 0xaa, 0xb2, 0x13, 0x86, 0x11, 0x3e, 0x42, 0xd3, 0xf0,
	0xf1, 0xe8, 0x10, 0xc2, 0x67, 0xbe, 0x93, 0x35, 0x45, 0xa6, 0x35, 0x99, 0xa9, 0x78, 0x4b, 0xa9,
	0xeb, 0x6f, 0x29, 0x46, 0x2a, 0x9c, 0xf4, 0xef, 0x2c, 0x92, 0x5d, 0x45, 0xcd, 0xdd, 0xe0, 0xc8,
	0xaf, 0x0a, 0x95, 0x53, 0x25, 0xdb, 0x52, 0xfc, 0x46, 0x29, 0x70, 0x92, 0x7f, 0xa2, 0x07, 0xb8,
	0xa8, 0x91, 0xc6, 0x57, 0x07, 0xbd, 0x1e, 0xa1, 0x38, 0x39, 0x43, 0xa6, 0xec, 0xe6, 0xa9, 0xe7,
	0xc1, 0xe9, 0x3e, 0x87, 0xa5, 0x76, 0xdc, 0x67, 0xb7, 0x52, 0x12, 0xc5, 0x7b, 0x11, 0x3e, 0x1e,
	0x57, 0xf0, 0xec, 0xf5, 0x22, 0x14, 0xc7, 0xec, 0x7c, 0xcd, 0x9a, 0x6e, 0x13, 0xd6, 0x74, 0x58,
	0xdc, 0xd6, 0x33, 0xb8, 0x56, 0x90, 0xcf, 0xb2, 0xc7, 0xdd, 0x55, 0x58, 0x29, 0xc0, 0x70, 0x0b,
	0xff, 0xa0, 0x57, 0x96, 0x1d, 0x4a, 0x88, 0x4d, 0xbb, 0x83, 0xfa, 0x7e, 0x9c, 0xa0, 0x68, 0x26,
	0xdf, 0xaf, 0xc3, 0x65, 0x36, 0x3d, 0x7e, 0xac, 0x5c, 0xea, 0x88, 0x5d, 0xa2, 0x3f, 0xea, 0x92,
	0x3f, 0xd2, 0xb1, 0x21, 0x8a, 0x86, 0x7e, 0x9c, 0x1e, 0x03, 0x31, 0x4b, 0x24, 0x62, 0x97, 0xdb,
	0x03, 0x3b, 0xa7, 0x3b, 0x01, 0xcf, 0x92, 0xcb, 0xbe, 0xc8, 0xa3, 0x26, 0xaf, 0xcb, 0x1a, 0x89,
	0xc8, 0x82, 0x15, 0xee, 0xb3, 0x4f, 0xe0, 0xba, 0x28, 0x3d, 0xc2, 0x87, 0x68, 0xa6, 0xd5, 0x77,
	0xa0, 0x51, 0xc4, 0xe1, 0x36, 0xfe, 0x60, 0x91, 0x35, 0x23, 0x89, 0xff, 0x34, 0x56, 0x45, 0x08,
	0x8e, 0x9a, 0x7c, 0x00, 0x94, 0xed, 0x88, 0x3b, 0xf9, 0xc1, 0x57, 0x20, 0xc1, 0x89, 0x7e, 0x48,
	0x9c, 0xb1, 0x47, 0xea, 0x27, 0xcf, 0x8e, 0xc3, 0x01, 0x8e, 0x4a, 0x9c, 0xe1, 0xee, 0x92, 0x29,
	0x4b, 0xda, 0xfc, 0x0c, 0xf8, 0x2e, 0x5c, 0xa0, 0x65, 0x18, 0x32, 0xe8, 0xf2, 0xf6, 0x35, 0xfe,
	0xf8, 0xa1, 0xfa, 0x8f, 0xeb, 0xdf, 0xfc, 0xb7, 0x75, 0xae, 0xc3, 0x94, 0xdc, 0x5d, 0xb8, 0x91,
	0xdf, 0xb5, 0xbb, 0x89, 0x7f, 0x54, 0x79, 0xcb, 0xa5, 0x70, 0x79, 0x20, 0x64, 0x6d, 0xf7, 0xb9,
	0x78, 0x6d, 0x67, 0x50, 0x22, 0x2d, 0xaa, 0xa8, 0xd0, 0xa2, 0x03, 0x32, 0x5a, 0xb4, 0x37, 0xbd,
	0xb0, 0x2c, 0x73, 0xb0, 0xc7, 0xc4, 0xc7, 0x81, 0x9f, 0xf8, 0x95, 0x0f, 0x00, 0x3a, 0x9c, 0x6c,
	0x19, 0xf6, 0x00, 0xc8, 0x7b, 0xd8, 0x1a, 0x05, 0x28, 0x91, 0xde, 0xcb, 0xa4, 0x6d, 0xdb, 0x50,
	0x8f, 0x07, 0x38, 0x61, 0x6b, 0x47, 0xfe, 0x77, 0x5f, 0xd0, 0xe3, 0x4c, 0xe5, 0x30, 0xeb, 0xac,
	0x7e, 0x5d, 0x9c, 0xd4, 0x13, 0x3c, 0x0c, 0x2b, 0xca, 0x41, 0x25, 0x1e, 0x27, 0xaf, 0x96, 0x08,
	0xe3, 0x03, 0xb6, 0xf1, 0x68, 0x23, 0xed, 0x0d, 0x70, 0xd0, 0x45, 0x2c, 0x2d, 0xd0, 0x86, 0x3a,
	0x99, 0xcc, 0xf6, 0xac, 0x93, 0x69, 0xd3, 0x43, 0x91, 0x34, 0xda, 0x7e, 0x80, 0x4e, 0x18, 0x3d,
	0x3f, 0xa1, 0x07, 0x9c, 0x02, 0x37, 0x2b, 0xbd, 0x17, 0x64, 0xe7, 0xe7, 0x78, 0x4f, 0xd3, 0x97,
	0xed, 0x49, 0x08, 0xee, 0x91, 0x5d, 0xac, 0x03, 0x9c, 0x95, 0xe2, 0x6b, 0xb8, 0x2a, 0x21, 0x9e,
	0x41, 0x14, 0x7c, 0x52, 0x58, 0xb4, 0xd3, 0xf0, 0x6e, 0x07, 0x1d, 0x9c, 0x7c, 0xf9, 0x45, 0xef,
	0xca, 0x80, 0xb3, 0x52, 0xfc, 0xa9, 0x90, 0x8e, 0x28, 0xe2, 0x89, 0x43, 0xa0, 0x43, 0x8b, 0x8b,
	0x5a, 0xc8, 0x59, 0x69, 0xc6, 0xe4, 0x72, 0x22, 0x62, 0x9e, 0x41, 0x18, 0xfc, 0x48, 0x59, 0xbe,
	0x59, 0xe9, 0x7b, 0x64, 0xdb, 0xd2, 0x4b, 0x11, 0x7d, 0x5a, 0xed, 0x45, 0xfe, 0xd0, 0x8b, 0xc6,
	0xec, 0x40, 0x2e, 0x99, 0xcc, 0x06, 0x2c, 0x84, 0x92, 0x2e, 0x4b, 0xd9, 0x85, 0x5e, 0x76, 0x4f,
	0x37, 0x9b, 0xe0, 0x87, 0xe8, 0xa1, 0xe0, 0x4a, 0xf2, 0xc2, 0x9e, 0xd5, 0x95, 0x2e, 0x5c, 0x21,
	0xaf, 0x68, 0xb4, 0x33, 0xc4, 0x23, 0x5e, 0x39, 0x90, 0xfa, 0xd8, 0x6d, 0x50, 0x34, 0xc6, 0x79,
	0x60, 0xb8, 0x9c, 0x8a, 0xbc, 0x7d, 0x9c, 0x78, 0xfd, 0xb3, 0x58, 0xce, 0x9b, 0xf4, 0x1b, 0x03,
	0x33, 0x98, 0xf1, 0xd8, 0xfe, 0x67, 0x0b, 0x6a, 0xed, 0xb8, 0x6f, 0x7f, 0x06, 0xd7, 0x95, 0x32,
	0xda, 0x1a, 0x5f, 0x56, 0x4d, 0x1d, 0xd3, 0xb9, 0x57, 0x26, 0xe5, 0xa1, 0xd2, 0x83, 0x15, 0x53,
	0xbd, 0xf0, 0xae, 0x08, 0x60, 0x50, 0x9a, 0xd0, 0xca, 0x57, 0xe0, 0x94, 0xd4, 0x48, 0x37, 0x44,
	0x0c, 0xb3, 0xde, 0x84, 0xb6, 0x3e, 0x83, 0xeb, 0xca, 0x47, 0xa7, 0x35, 0xbd, 0x05, 0x1d, 0xae,
	0xf1, 0x4b, 0x91, 0x84, 0xcb, 0xbe, 0x00, 0x19, 0x70, 0xa9, 0xd4, 0x84, 0x2b, 0x7f, 0xb2, 0xb1,
	0xdf, 0xc0, 0xad, 0xb2, 0xcf, 0x35, 0xf7, 0x2b, 0x9d, 0x43, 0x15, 0x9d, 0xad, 0x09, 0x15, 0xb9,
	0xe1, 0xdf, 0x5a, 0xd0, 0xac, 0xf8, 0xc8, 0xf2, 0xa0, 0x0a, 0x33, 0xd7, 0x75, 0xb6, 0x27, 0xd7,
	0xe5, 0x14, 0x0e, 0x61, 0xc5, 0xf4, 0x59, 0xe5, 0xae, 0x1e, 0x4e, 0x52, 0x72, 0x1e, 0x4e, 0xa0,
	0xc4, 0x8d, 0x25, 0x62, 0x10, 0x2a, 0x5f, 0x49, 0x36, 0xca, 0xa0, 0x84, 0x69, 0x3e, 0x9a, 0x4c,
	0x8f, 0x5b, 0xfd, 0x14, 0x2e, 0x8b, 0xc5, 0xe7, 0x15, 0x71, 0xb8, 0x20, 0x70, 0x5a, 0x06, 0x01,
	0x07, 0x7a, 0x05, 0xb6, 0xa6, 0x36, 0xdc, 0x54, 0x86, 0x49, 0x72, 0x0d, 0xac, 0x5c, 0x3c, 0xb3,
	0x7d, 0x58, 0x2b, 0xad, 0x0c, 0x6f, 0x1a, 0x00, 0x14, 0xcd, 0x6a, 0x53, 0x9f, 0xc3, 0xa2, 0xae,
	0x12, 0xdc, 0x32, 0x5a, 0xa0, 0x0a, 0xd3, 0x02, 0xf3, 0x92, 0x9c, 0x69, 0x5c, 0xa6, 0x50, 0x0d,
	0x3c, 0x84, 0x66, 0x45, 0xc5, 0xf7, 0x81, 0x01, 0x42, 0xa3, 0x5b, 0x6d, 0x0e, 0x43, 0xab, 0xaa,
	0xbc, 0xfb, 0xd0, 0x80, 0xa1, 0x53, 0x9e, 0x76, 0xf1, 0xd5, 0x5a, 0xae, 0x69, 0xf1, 0x15, 0xcd,
	0x6a, 0x53, 0xfb, 0xb0, 0xa4, 0x7d, 0xc2, 0xaf, 0x2b, 0x03, 0x0b, 0x1a, 0xce, 0x66, 0x95, 0x86,
	0xb8, 0xd7, 0xc4, 0x22, 0xb0, 0xb4, 0xd7, 0x04, 0x81, 0x4c, 0x56, 0x57, 0x84, 0xfd, 0x02, 0x16,
	0x75, 0x75, 0x56, 0x75, 0x9c, 0xac, 0xe0, 0xdc, 0xaf, 0x50, 0x90, 0x72, 0x91, 0xb9, 0x7e, 0xba,
	0xa1, 0xc0, 0x68, 0xf5, 0x0a, 0xb9, 0xa8, 0xb2, 0x08, 0x6a, 0xff, 0x12, 0x6c, 0x4d, 0x01, 0xb4,
	0x69, 0x42, 0xa1, 0x72, 0x67, 0xa3, 0x5c, 0x2e, 0x25, 0x73, 0x43, 0xe5, 0xf2, 0xae, 0x09, 0x42,
	0x50, 0x2a, 0x24, 0xf3, 0xf2, 0xda, 0xa3, 0xfd, 0x73, 0xb8, 0xa1, 0x16, 0x1e, 0x6f, 0x8b, 0x08,
	0x8a, 0xd8, 0xf9, 0xa0, 0x54, 0xcc, 0xa1, 0x9f, 0xc3, 0x15, 0xb9, 0xce, 0x68, 0x1a, 0xe6, 0xac,
	0x9b, 0x24, 0xe2, 0x3a, 0x97, 0xdc, 0xab, 0x37, 0xd4, 0xf1, 0x3a, 0x3d, 0x79, 0x9d, 0xab, 0x2f,
	0xd1, 0xf6, 0x4b, 0xb8, 0x56, 0xac, 0x0b, 0xde, 0x92, 0xee, 0x4e, 0xb2, 0xd0, 0xb9, 0x5b, 0x22,
	0xe4, 0xa0, 0x1e, 0x2c, 0x1b, 0x6a, 0xa3, 0xae, 0x66, 0x78, 0x71, 0x13, 0x4f, 0x64, 0xa2, 0x0d,
	0x57, 0xe5, 0x5a, 0xe2, 0xaa, 0x76, 0x54, 0x2a, 0x72, 0xee, 0x18, 0x45, 0x22, 0x9c, 0x5c, 0x8d,
	0x5b, 0x2d, 0xf8, 0x31, 0x17, 0xc9, 0x70, 0xfa, 0xaa, 0xdc, 0x1e, 0x2c, 0x14, 0x6a, 0x6c, 0x8e,
	0x14, 0xb1, 0x92, 0xcc, 0x71, 0xcd, 0x32, 0x21, 0x27, 0x2e, 0x1b, 0xbe, 0x90, 0xeb, 0x46, 0xcf,
	0x76, 0x1d, 0x4e, 0x53, 0x99, 0xa6, 0x02, 0xd7, 0x52, 0x0d, 0x48, 0x0a, 0x85, 0x54, 0x56, 0x52,
	0x3f, 0x93, 0x0d, 0xf0, 0x6a, 0x98, 0xc9, 0x40, 0xa6, 0x60, 0x34, 0xa0, 0xd4, 0xb4, 0xd2, 0xac,
	0xa5, 0x56, 0xa8, 0x9a, 0xea, 0x70, 0x51, 0x5e, 0xc8, 0x5a, 0xe6, 0x92, 0xd4, 0x3e, 0x2c, 0x69,
	0x0b, 0x4c, 0xeb, 0xfa, 0xf1, 0xb9, 0x86, 0x7c, 0x2e, 0x95, 0xd6, 0x94, 0x9e, 0x02, 0x08, 0x15,
	0xa2, 0x65, 0xfd, 0x38, 0xc7, 0x30, 0x23, 0x95, 0x69, 0xa1, 0x58, 0xa3, 0x61, 0x2a, 0x6b, 0xe8,
	0x98, 0x1a, 0xea, 0x33, 0x5f, 0x66, 0x11, 0xa9, 0x54, 0x5b, 0x5c, 0x13, 0x86, 0xe0, 0x91, 0x07,
	0xd5, 0x3a, 0x62, 0x96, 0x95, 0x0b, 0x26, 0xa6, 0xb1, 0x8e, 0x71, 0x7e, 0x2a, 0x56, 0x56, 0x31,
	0x50, 0x47, 0x50, 0x89, 0x0e, 0x4b, 0x7e, 0xf8, 0xdb, 0x1f, 0xc3, 0x3c, 0x7f, 0xf5, 0x2f, 0x49,
	0xda, 0xac, 0xd7, 0x59, 0xd3, 0xf5, 0x66, 0xe3, 0x1f, 0x7f, 0xff, 0x9b, 0xb7, 0x4d, 0xeb, 0xdb,
	0xb7, 0x4d, 0xeb, 0x7f, 0x6f, 0x9b, 0xd6, 0xdf, 0xde, 0x35, 0xcf, 0x7d, 0xfb, 0xae, 0x79, 0xee,
	0x3f, 0xef, 0x9a, 0xe7, 0x7e, 0xb1, 0x92, 0xfd, 0x4c, 0xf2, 0x38, 0xff, 0xdd, 0xe7, 0x38, 0x44,
	0xf1, 0xfe, 0x05, 0xf2, 0x8b, 0xc9, 0x8f, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x68, 0x0a, 0xb3,
	0x63, 0x17, 0x2a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	AllocationCreate(ctx context.Context, in *MsgAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error)
	ReactorAllocationCreate(ctx context.Context, in *MsgReactorAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error)
	SubstationAllocationCreate(ctx context.Context, in *MsgSubstationAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error)
	SubstationCreate(ctx context.Context, in *MsgSubstationCreate, opts ...grpc.CallOption) (*MsgSubstationCreateResponse, error)
	SubstationDelete(ctx context.Context, in *MsgSubstationDelete, opts ...grpc.CallOption) (*MsgSubstationDeleteResponse, error)
	SubstationAllocationConnect(ctx context.Context, in *MsgSubstationAllocationConnect, opts ...grpc.CallOption) (*MsgSubstationAllocationConnectResponse, error)
	SubstationAllocationDisconnect(ctx context.Context, in *MsgSubstationAllocationDisconnect, opts ...grpc.CallOption) (*MsgSubstationAllocationDisconnectResponse, error)
	SubstationPlayerConnect(ctx context.Context, in *MsgSubstationPlayerConnect, opts ...grpc.CallOption) (*MsgSubstationPlayerConnectResponse, error)
	SubstationPlayerDisconnect(ctx context.Context, in *MsgSubstationPlayerDisconnect, opts ...grpc.CallOption) (*MsgSubstationPlayerDisconnectResponse, error)
	GuildCreate(ctx context.Context, in *MsgGuildCreate, opts ...grpc.CallOption) (*MsgGuildCreateResponse, error)
	GuildUpdateOwnerId(ctx context.Context, in *MsgGuildUpdateOwnerId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateEntrySubstationId(ctx context.Context, in *MsgGuildUpdateEntrySubstationId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateEndpoint(ctx context.Context, in *MsgGuildUpdateEndpoint, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinType(ctx context.Context, in *MsgGuildUpdateJoinType, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateInfusionJoinMinimum(ctx context.Context, in *MsgGuildUpdateInfusionJoinMinimum, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateSquadJoinTypeMinimum(ctx context.Context, in *MsgGuildUpdateSquadJoinTypeMinimum, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildUpdateOpenSquadCreation(ctx context.Context, in *MsgGuildUpdateOpenSquadCreation, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error)
	GuildApproveRegister(ctx context.Context, in *MsgGuildApproveRegister, opts ...grpc.CallOption) (*MsgGuildApproveRegisterResponse, error)
	SquadCreate(ctx context.Context, in *MsgSquadCreate, opts ...grpc.CallOption) (*MsgSquadCreateResponse, error)
	SquadLeaderProposal(ctx context.Context, in *MsgSquadLeaderProposal, opts ...grpc.CallOption) (*MsgSquadLeaderProposalResponse, error)
	SquadApproveLeaderProposal(ctx context.Context, in *MsgSquadApproveLeaderProposal, opts ...grpc.CallOption) (*MsgSquadApproveLeaderProposalResponse, error)
	SquadApproveInvite(ctx context.Context, in *MsgSquadApproveInvite, opts ...grpc.CallOption) (*MsgSquadApproveInviteResponse, error)
	SquadApproveJoinRequest(ctx context.Context, in *MsgSquadApproveJoinRequest, opts ...grpc.CallOption) (*MsgSquadApproveJoinRequestResponse, error)
	PlayerCreateProxy(ctx context.Context, in *MsgPlayerCreateProxy, opts ...grpc.CallOption) (*MsgPlayerCreateProxyResponse, error)
	PlayerCreate(ctx context.Context, in *MsgPlayerCreate, opts ...grpc.CallOption) (*MsgPlayerCreateResponse, error)
	PlayerUpdatePrimaryAddress(ctx context.Context, in *MsgPlayerUpdatePrimaryAddress, opts ...grpc.CallOption) (*MsgPlayerUpdatePrimaryAddressResponse, error)
	AddressRegister(ctx context.Context, in *MsgAddressRegister, opts ...grpc.CallOption) (*MsgAddressRegisterResponse, error)
	AddressApproveRegister(ctx context.Context, in *MsgAddressApproveRegister, opts ...grpc.CallOption) (*MsgAddressRegisterResponse, error)
	AddressRevoke(ctx context.Context, in *MsgAddressRevoke, opts ...grpc.CallOption) (*MsgAddressRevokeResponse, error)
	PlanetExplore(ctx context.Context, in *MsgPlanetExplore, opts ...grpc.CallOption) (*MsgPlanetExploreResponse, error)
	StructActivate(ctx context.Context, in *MsgStructActivate, opts ...grpc.CallOption) (*MsgStructActivateResponse, error)
	StructAllocationCreate(ctx context.Context, in *MsgStructAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error)
	StructBuildInitiate(ctx context.Context, in *MsgStructBuildInitiate, opts ...grpc.CallOption) (*MsgStructBuildInitiateResponse, error)
	StructBuildComplete(ctx context.Context, in *MsgStructBuildComplete, opts ...grpc.CallOption) (*MsgStructBuildCompleteResponse, error)
	StructMineActivate(ctx context.Context, in *MsgStructMineActivate, opts ...grpc.CallOption) (*MsgStructMineActivateResponse, error)
	StructMineDeactivate(ctx context.Context, in *MsgStructMineDeactivate, opts ...grpc.CallOption) (*MsgStructMineDeactivateResponse, error)
	StructMine(ctx context.Context, in *MsgStructMine, opts ...grpc.CallOption) (*MsgStructMineResponse, error)
	StructRefineActivate(ctx context.Context, in *MsgStructRefineActivate, opts ...grpc.CallOption) (*MsgStructRefineActivateResponse, error)
	StructRefineDeactivate(ctx context.Context, in *MsgStructRefineDeactivate, opts ...grpc.CallOption) (*MsgStructRefineDeactivateResponse, error)
	StructRefine(ctx context.Context, in *MsgStructRefine, opts ...grpc.CallOption) (*MsgStructRefineResponse, error)
	StructInfuse(ctx context.Context, in *MsgStructInfuse, opts ...grpc.CallOption) (*MsgStructInfuseResponse, error)
	// To Remove after battle mechanics added
	Sabotage(ctx context.Context, in *MsgSabotage, opts ...grpc.CallOption) (*MsgSabotageResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AllocationCreate(ctx context.Context, in *MsgAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error) {
	out := new(MsgAllocationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/AllocationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReactorAllocationCreate(ctx context.Context, in *MsgReactorAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error) {
	out := new(MsgAllocationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/ReactorAllocationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationAllocationCreate(ctx context.Context, in *MsgSubstationAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error) {
	out := new(MsgAllocationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationAllocationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationCreate(ctx context.Context, in *MsgSubstationCreate, opts ...grpc.CallOption) (*MsgSubstationCreateResponse, error) {
	out := new(MsgSubstationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationDelete(ctx context.Context, in *MsgSubstationDelete, opts ...grpc.CallOption) (*MsgSubstationDeleteResponse, error) {
	out := new(MsgSubstationDeleteResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationAllocationConnect(ctx context.Context, in *MsgSubstationAllocationConnect, opts ...grpc.CallOption) (*MsgSubstationAllocationConnectResponse, error) {
	out := new(MsgSubstationAllocationConnectResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationAllocationConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationAllocationDisconnect(ctx context.Context, in *MsgSubstationAllocationDisconnect, opts ...grpc.CallOption) (*MsgSubstationAllocationDisconnectResponse, error) {
	out := new(MsgSubstationAllocationDisconnectResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationAllocationDisconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationPlayerConnect(ctx context.Context, in *MsgSubstationPlayerConnect, opts ...grpc.CallOption) (*MsgSubstationPlayerConnectResponse, error) {
	out := new(MsgSubstationPlayerConnectResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationPlayerConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubstationPlayerDisconnect(ctx context.Context, in *MsgSubstationPlayerDisconnect, opts ...grpc.CallOption) (*MsgSubstationPlayerDisconnectResponse, error) {
	out := new(MsgSubstationPlayerDisconnectResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SubstationPlayerDisconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildCreate(ctx context.Context, in *MsgGuildCreate, opts ...grpc.CallOption) (*MsgGuildCreateResponse, error) {
	out := new(MsgGuildCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateOwnerId(ctx context.Context, in *MsgGuildUpdateOwnerId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateOwnerId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateEntrySubstationId(ctx context.Context, in *MsgGuildUpdateEntrySubstationId, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateEntrySubstationId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateEndpoint(ctx context.Context, in *MsgGuildUpdateEndpoint, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateJoinType(ctx context.Context, in *MsgGuildUpdateJoinType, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateJoinType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateInfusionJoinMinimum(ctx context.Context, in *MsgGuildUpdateInfusionJoinMinimum, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateInfusionJoinMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateSquadJoinTypeMinimum(ctx context.Context, in *MsgGuildUpdateSquadJoinTypeMinimum, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateSquadJoinTypeMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildUpdateOpenSquadCreation(ctx context.Context, in *MsgGuildUpdateOpenSquadCreation, opts ...grpc.CallOption) (*MsgGuildUpdateResponse, error) {
	out := new(MsgGuildUpdateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildUpdateOpenSquadCreation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GuildApproveRegister(ctx context.Context, in *MsgGuildApproveRegister, opts ...grpc.CallOption) (*MsgGuildApproveRegisterResponse, error) {
	out := new(MsgGuildApproveRegisterResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/GuildApproveRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SquadCreate(ctx context.Context, in *MsgSquadCreate, opts ...grpc.CallOption) (*MsgSquadCreateResponse, error) {
	out := new(MsgSquadCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SquadCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SquadLeaderProposal(ctx context.Context, in *MsgSquadLeaderProposal, opts ...grpc.CallOption) (*MsgSquadLeaderProposalResponse, error) {
	out := new(MsgSquadLeaderProposalResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SquadLeaderProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SquadApproveLeaderProposal(ctx context.Context, in *MsgSquadApproveLeaderProposal, opts ...grpc.CallOption) (*MsgSquadApproveLeaderProposalResponse, error) {
	out := new(MsgSquadApproveLeaderProposalResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SquadApproveLeaderProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SquadApproveInvite(ctx context.Context, in *MsgSquadApproveInvite, opts ...grpc.CallOption) (*MsgSquadApproveInviteResponse, error) {
	out := new(MsgSquadApproveInviteResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SquadApproveInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SquadApproveJoinRequest(ctx context.Context, in *MsgSquadApproveJoinRequest, opts ...grpc.CallOption) (*MsgSquadApproveJoinRequestResponse, error) {
	out := new(MsgSquadApproveJoinRequestResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/SquadApproveJoinRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlayerCreateProxy(ctx context.Context, in *MsgPlayerCreateProxy, opts ...grpc.CallOption) (*MsgPlayerCreateProxyResponse, error) {
	out := new(MsgPlayerCreateProxyResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/PlayerCreateProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlayerCreate(ctx context.Context, in *MsgPlayerCreate, opts ...grpc.CallOption) (*MsgPlayerCreateResponse, error) {
	out := new(MsgPlayerCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/PlayerCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlayerUpdatePrimaryAddress(ctx context.Context, in *MsgPlayerUpdatePrimaryAddress, opts ...grpc.CallOption) (*MsgPlayerUpdatePrimaryAddressResponse, error) {
	out := new(MsgPlayerUpdatePrimaryAddressResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/PlayerUpdatePrimaryAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddressRegister(ctx context.Context, in *MsgAddressRegister, opts ...grpc.CallOption) (*MsgAddressRegisterResponse, error) {
	out := new(MsgAddressRegisterResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/AddressRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddressApproveRegister(ctx context.Context, in *MsgAddressApproveRegister, opts ...grpc.CallOption) (*MsgAddressRegisterResponse, error) {
	out := new(MsgAddressRegisterResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/AddressApproveRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddressRevoke(ctx context.Context, in *MsgAddressRevoke, opts ...grpc.CallOption) (*MsgAddressRevokeResponse, error) {
	out := new(MsgAddressRevokeResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/AddressRevoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PlanetExplore(ctx context.Context, in *MsgPlanetExplore, opts ...grpc.CallOption) (*MsgPlanetExploreResponse, error) {
	out := new(MsgPlanetExploreResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/PlanetExplore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructActivate(ctx context.Context, in *MsgStructActivate, opts ...grpc.CallOption) (*MsgStructActivateResponse, error) {
	out := new(MsgStructActivateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructActivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructAllocationCreate(ctx context.Context, in *MsgStructAllocationCreate, opts ...grpc.CallOption) (*MsgAllocationCreateResponse, error) {
	out := new(MsgAllocationCreateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructAllocationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructBuildInitiate(ctx context.Context, in *MsgStructBuildInitiate, opts ...grpc.CallOption) (*MsgStructBuildInitiateResponse, error) {
	out := new(MsgStructBuildInitiateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructBuildInitiate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructBuildComplete(ctx context.Context, in *MsgStructBuildComplete, opts ...grpc.CallOption) (*MsgStructBuildCompleteResponse, error) {
	out := new(MsgStructBuildCompleteResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructBuildComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructMineActivate(ctx context.Context, in *MsgStructMineActivate, opts ...grpc.CallOption) (*MsgStructMineActivateResponse, error) {
	out := new(MsgStructMineActivateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructMineActivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructMineDeactivate(ctx context.Context, in *MsgStructMineDeactivate, opts ...grpc.CallOption) (*MsgStructMineDeactivateResponse, error) {
	out := new(MsgStructMineDeactivateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructMineDeactivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructMine(ctx context.Context, in *MsgStructMine, opts ...grpc.CallOption) (*MsgStructMineResponse, error) {
	out := new(MsgStructMineResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructMine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructRefineActivate(ctx context.Context, in *MsgStructRefineActivate, opts ...grpc.CallOption) (*MsgStructRefineActivateResponse, error) {
	out := new(MsgStructRefineActivateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructRefineActivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructRefineDeactivate(ctx context.Context, in *MsgStructRefineDeactivate, opts ...grpc.CallOption) (*MsgStructRefineDeactivateResponse, error) {
	out := new(MsgStructRefineDeactivateResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructRefineDeactivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructRefine(ctx context.Context, in *MsgStructRefine, opts ...grpc.CallOption) (*MsgStructRefineResponse, error) {
	out := new(MsgStructRefineResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructRefine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StructInfuse(ctx context.Context, in *MsgStructInfuse, opts ...grpc.CallOption) (*MsgStructInfuseResponse, error) {
	out := new(MsgStructInfuseResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/StructInfuse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Sabotage(ctx context.Context, in *MsgSabotage, opts ...grpc.CallOption) (*MsgSabotageResponse, error) {
	out := new(MsgSabotageResponse)
	err := c.cc.Invoke(ctx, "/structs.Msg/Sabotage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	AllocationCreate(context.Context, *MsgAllocationCreate) (*MsgAllocationCreateResponse, error)
	ReactorAllocationCreate(context.Context, *MsgReactorAllocationCreate) (*MsgAllocationCreateResponse, error)
	SubstationAllocationCreate(context.Context, *MsgSubstationAllocationCreate) (*MsgAllocationCreateResponse, error)
	SubstationCreate(context.Context, *MsgSubstationCreate) (*MsgSubstationCreateResponse, error)
	SubstationDelete(context.Context, *MsgSubstationDelete) (*MsgSubstationDeleteResponse, error)
	SubstationAllocationConnect(context.Context, *MsgSubstationAllocationConnect) (*MsgSubstationAllocationConnectResponse, error)
	SubstationAllocationDisconnect(context.Context, *MsgSubstationAllocationDisconnect) (*MsgSubstationAllocationDisconnectResponse, error)
	SubstationPlayerConnect(context.Context, *MsgSubstationPlayerConnect) (*MsgSubstationPlayerConnectResponse, error)
	SubstationPlayerDisconnect(context.Context, *MsgSubstationPlayerDisconnect) (*MsgSubstationPlayerDisconnectResponse, error)
	GuildCreate(context.Context, *MsgGuildCreate) (*MsgGuildCreateResponse, error)
	GuildUpdateOwnerId(context.Context, *MsgGuildUpdateOwnerId) (*MsgGuildUpdateResponse, error)
	GuildUpdateEntrySubstationId(context.Context, *MsgGuildUpdateEntrySubstationId) (*MsgGuildUpdateResponse, error)
	GuildUpdateEndpoint(context.Context, *MsgGuildUpdateEndpoint) (*MsgGuildUpdateResponse, error)
	GuildUpdateJoinType(context.Context, *MsgGuildUpdateJoinType) (*MsgGuildUpdateResponse, error)
	GuildUpdateInfusionJoinMinimum(context.Context, *MsgGuildUpdateInfusionJoinMinimum) (*MsgGuildUpdateResponse, error)
	GuildUpdateSquadJoinTypeMinimum(context.Context, *MsgGuildUpdateSquadJoinTypeMinimum) (*MsgGuildUpdateResponse, error)
	GuildUpdateOpenSquadCreation(context.Context, *MsgGuildUpdateOpenSquadCreation) (*MsgGuildUpdateResponse, error)
	GuildApproveRegister(context.Context, *MsgGuildApproveRegister) (*MsgGuildApproveRegisterResponse, error)
	SquadCreate(context.Context, *MsgSquadCreate) (*MsgSquadCreateResponse, error)
	SquadLeaderProposal(context.Context, *MsgSquadLeaderProposal) (*MsgSquadLeaderProposalResponse, error)
	SquadApproveLeaderProposal(context.Context, *MsgSquadApproveLeaderProposal) (*MsgSquadApproveLeaderProposalResponse, error)
	SquadApproveInvite(context.Context, *MsgSquadApproveInvite) (*MsgSquadApproveInviteResponse, error)
	SquadApproveJoinRequest(context.Context, *MsgSquadApproveJoinRequest) (*MsgSquadApproveJoinRequestResponse, error)
	PlayerCreateProxy(context.Context, *MsgPlayerCreateProxy) (*MsgPlayerCreateProxyResponse, error)
	PlayerCreate(context.Context, *MsgPlayerCreate) (*MsgPlayerCreateResponse, error)
	PlayerUpdatePrimaryAddress(context.Context, *MsgPlayerUpdatePrimaryAddress) (*MsgPlayerUpdatePrimaryAddressResponse, error)
	AddressRegister(context.Context, *MsgAddressRegister) (*MsgAddressRegisterResponse, error)
	AddressApproveRegister(context.Context, *MsgAddressApproveRegister) (*MsgAddressRegisterResponse, error)
	AddressRevoke(context.Context, *MsgAddressRevoke) (*MsgAddressRevokeResponse, error)
	PlanetExplore(context.Context, *MsgPlanetExplore) (*MsgPlanetExploreResponse, error)
	StructActivate(context.Context, *MsgStructActivate) (*MsgStructActivateResponse, error)
	StructAllocationCreate(context.Context, *MsgStructAllocationCreate) (*MsgAllocationCreateResponse, error)
	StructBuildInitiate(context.Context, *MsgStructBuildInitiate) (*MsgStructBuildInitiateResponse, error)
	StructBuildComplete(context.Context, *MsgStructBuildComplete) (*MsgStructBuildCompleteResponse, error)
	StructMineActivate(context.Context, *MsgStructMineActivate) (*MsgStructMineActivateResponse, error)
	StructMineDeactivate(context.Context, *MsgStructMineDeactivate) (*MsgStructMineDeactivateResponse, error)
	StructMine(context.Context, *MsgStructMine) (*MsgStructMineResponse, error)
	StructRefineActivate(context.Context, *MsgStructRefineActivate) (*MsgStructRefineActivateResponse, error)
	StructRefineDeactivate(context.Context, *MsgStructRefineDeactivate) (*MsgStructRefineDeactivateResponse, error)
	StructRefine(context.Context, *MsgStructRefine) (*MsgStructRefineResponse, error)
	StructInfuse(context.Context, *MsgStructInfuse) (*MsgStructInfuseResponse, error)
	// To Remove after battle mechanics added
	Sabotage(context.Context, *MsgSabotage) (*MsgSabotageResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AllocationCreate(ctx context.Context, req *MsgAllocationCreate) (*MsgAllocationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocationCreate not implemented")
}
func (*UnimplementedMsgServer) ReactorAllocationCreate(ctx context.Context, req *MsgReactorAllocationCreate) (*MsgAllocationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReactorAllocationCreate not implemented")
}
func (*UnimplementedMsgServer) SubstationAllocationCreate(ctx context.Context, req *MsgSubstationAllocationCreate) (*MsgAllocationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationAllocationCreate not implemented")
}
func (*UnimplementedMsgServer) SubstationCreate(ctx context.Context, req *MsgSubstationCreate) (*MsgSubstationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationCreate not implemented")
}
func (*UnimplementedMsgServer) SubstationDelete(ctx context.Context, req *MsgSubstationDelete) (*MsgSubstationDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationDelete not implemented")
}
func (*UnimplementedMsgServer) SubstationAllocationConnect(ctx context.Context, req *MsgSubstationAllocationConnect) (*MsgSubstationAllocationConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationAllocationConnect not implemented")
}
func (*UnimplementedMsgServer) SubstationAllocationDisconnect(ctx context.Context, req *MsgSubstationAllocationDisconnect) (*MsgSubstationAllocationDisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationAllocationDisconnect not implemented")
}
func (*UnimplementedMsgServer) SubstationPlayerConnect(ctx context.Context, req *MsgSubstationPlayerConnect) (*MsgSubstationPlayerConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationPlayerConnect not implemented")
}
func (*UnimplementedMsgServer) SubstationPlayerDisconnect(ctx context.Context, req *MsgSubstationPlayerDisconnect) (*MsgSubstationPlayerDisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubstationPlayerDisconnect not implemented")
}
func (*UnimplementedMsgServer) GuildCreate(ctx context.Context, req *MsgGuildCreate) (*MsgGuildCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildCreate not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateOwnerId(ctx context.Context, req *MsgGuildUpdateOwnerId) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateOwnerId not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateEntrySubstationId(ctx context.Context, req *MsgGuildUpdateEntrySubstationId) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateEntrySubstationId not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateEndpoint(ctx context.Context, req *MsgGuildUpdateEndpoint) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateEndpoint not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateJoinType(ctx context.Context, req *MsgGuildUpdateJoinType) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateJoinType not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateInfusionJoinMinimum(ctx context.Context, req *MsgGuildUpdateInfusionJoinMinimum) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateInfusionJoinMinimum not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateSquadJoinTypeMinimum(ctx context.Context, req *MsgGuildUpdateSquadJoinTypeMinimum) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateSquadJoinTypeMinimum not implemented")
}
func (*UnimplementedMsgServer) GuildUpdateOpenSquadCreation(ctx context.Context, req *MsgGuildUpdateOpenSquadCreation) (*MsgGuildUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildUpdateOpenSquadCreation not implemented")
}
func (*UnimplementedMsgServer) GuildApproveRegister(ctx context.Context, req *MsgGuildApproveRegister) (*MsgGuildApproveRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuildApproveRegister not implemented")
}
func (*UnimplementedMsgServer) SquadCreate(ctx context.Context, req *MsgSquadCreate) (*MsgSquadCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquadCreate not implemented")
}
func (*UnimplementedMsgServer) SquadLeaderProposal(ctx context.Context, req *MsgSquadLeaderProposal) (*MsgSquadLeaderProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquadLeaderProposal not implemented")
}
func (*UnimplementedMsgServer) SquadApproveLeaderProposal(ctx context.Context, req *MsgSquadApproveLeaderProposal) (*MsgSquadApproveLeaderProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquadApproveLeaderProposal not implemented")
}
func (*UnimplementedMsgServer) SquadApproveInvite(ctx context.Context, req *MsgSquadApproveInvite) (*MsgSquadApproveInviteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquadApproveInvite not implemented")
}
func (*UnimplementedMsgServer) SquadApproveJoinRequest(ctx context.Context, req *MsgSquadApproveJoinRequest) (*MsgSquadApproveJoinRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquadApproveJoinRequest not implemented")
}
func (*UnimplementedMsgServer) PlayerCreateProxy(ctx context.Context, req *MsgPlayerCreateProxy) (*MsgPlayerCreateProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerCreateProxy not implemented")
}
func (*UnimplementedMsgServer) PlayerCreate(ctx context.Context, req *MsgPlayerCreate) (*MsgPlayerCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerCreate not implemented")
}
func (*UnimplementedMsgServer) PlayerUpdatePrimaryAddress(ctx context.Context, req *MsgPlayerUpdatePrimaryAddress) (*MsgPlayerUpdatePrimaryAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerUpdatePrimaryAddress not implemented")
}
func (*UnimplementedMsgServer) AddressRegister(ctx context.Context, req *MsgAddressRegister) (*MsgAddressRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddressRegister not implemented")
}
func (*UnimplementedMsgServer) AddressApproveRegister(ctx context.Context, req *MsgAddressApproveRegister) (*MsgAddressRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddressApproveRegister not implemented")
}
func (*UnimplementedMsgServer) AddressRevoke(ctx context.Context, req *MsgAddressRevoke) (*MsgAddressRevokeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddressRevoke not implemented")
}
func (*UnimplementedMsgServer) PlanetExplore(ctx context.Context, req *MsgPlanetExplore) (*MsgPlanetExploreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlanetExplore not implemented")
}
func (*UnimplementedMsgServer) StructActivate(ctx context.Context, req *MsgStructActivate) (*MsgStructActivateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructActivate not implemented")
}
func (*UnimplementedMsgServer) StructAllocationCreate(ctx context.Context, req *MsgStructAllocationCreate) (*MsgAllocationCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructAllocationCreate not implemented")
}
func (*UnimplementedMsgServer) StructBuildInitiate(ctx context.Context, req *MsgStructBuildInitiate) (*MsgStructBuildInitiateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructBuildInitiate not implemented")
}
func (*UnimplementedMsgServer) StructBuildComplete(ctx context.Context, req *MsgStructBuildComplete) (*MsgStructBuildCompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructBuildComplete not implemented")
}
func (*UnimplementedMsgServer) StructMineActivate(ctx context.Context, req *MsgStructMineActivate) (*MsgStructMineActivateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructMineActivate not implemented")
}
func (*UnimplementedMsgServer) StructMineDeactivate(ctx context.Context, req *MsgStructMineDeactivate) (*MsgStructMineDeactivateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructMineDeactivate not implemented")
}
func (*UnimplementedMsgServer) StructMine(ctx context.Context, req *MsgStructMine) (*MsgStructMineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructMine not implemented")
}
func (*UnimplementedMsgServer) StructRefineActivate(ctx context.Context, req *MsgStructRefineActivate) (*MsgStructRefineActivateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructRefineActivate not implemented")
}
func (*UnimplementedMsgServer) StructRefineDeactivate(ctx context.Context, req *MsgStructRefineDeactivate) (*MsgStructRefineDeactivateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructRefineDeactivate not implemented")
}
func (*UnimplementedMsgServer) StructRefine(ctx context.Context, req *MsgStructRefine) (*MsgStructRefineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructRefine not implemented")
}
func (*UnimplementedMsgServer) StructInfuse(ctx context.Context, req *MsgStructInfuse) (*MsgStructInfuseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StructInfuse not implemented")
}
func (*UnimplementedMsgServer) Sabotage(ctx context.Context, req *MsgSabotage) (*MsgSabotageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sabotage not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AllocationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAllocationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AllocationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/AllocationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AllocationCreate(ctx, req.(*MsgAllocationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReactorAllocationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReactorAllocationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReactorAllocationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/ReactorAllocationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReactorAllocationCreate(ctx, req.(*MsgReactorAllocationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationAllocationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationAllocationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationAllocationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationAllocationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationAllocationCreate(ctx, req.(*MsgSubstationAllocationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationCreate(ctx, req.(*MsgSubstationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationDelete(ctx, req.(*MsgSubstationDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationAllocationConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationAllocationConnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationAllocationConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationAllocationConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationAllocationConnect(ctx, req.(*MsgSubstationAllocationConnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationAllocationDisconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationAllocationDisconnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationAllocationDisconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationAllocationDisconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationAllocationDisconnect(ctx, req.(*MsgSubstationAllocationDisconnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationPlayerConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationPlayerConnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationPlayerConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationPlayerConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationPlayerConnect(ctx, req.(*MsgSubstationPlayerConnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubstationPlayerDisconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubstationPlayerDisconnect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubstationPlayerDisconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SubstationPlayerDisconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubstationPlayerDisconnect(ctx, req.(*MsgSubstationPlayerDisconnect))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildCreate(ctx, req.(*MsgGuildCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateOwnerId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateOwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateOwnerId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateOwnerId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateOwnerId(ctx, req.(*MsgGuildUpdateOwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateEntrySubstationId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateEntrySubstationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateEntrySubstationId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateEntrySubstationId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateEntrySubstationId(ctx, req.(*MsgGuildUpdateEntrySubstationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateEndpoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateEndpoint(ctx, req.(*MsgGuildUpdateEndpoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateJoinType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateJoinType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateJoinType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateJoinType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateJoinType(ctx, req.(*MsgGuildUpdateJoinType))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateInfusionJoinMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateInfusionJoinMinimum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateInfusionJoinMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateInfusionJoinMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateInfusionJoinMinimum(ctx, req.(*MsgGuildUpdateInfusionJoinMinimum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateSquadJoinTypeMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateSquadJoinTypeMinimum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateSquadJoinTypeMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateSquadJoinTypeMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateSquadJoinTypeMinimum(ctx, req.(*MsgGuildUpdateSquadJoinTypeMinimum))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildUpdateOpenSquadCreation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildUpdateOpenSquadCreation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildUpdateOpenSquadCreation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildUpdateOpenSquadCreation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildUpdateOpenSquadCreation(ctx, req.(*MsgGuildUpdateOpenSquadCreation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GuildApproveRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGuildApproveRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GuildApproveRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/GuildApproveRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GuildApproveRegister(ctx, req.(*MsgGuildApproveRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SquadCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSquadCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SquadCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SquadCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SquadCreate(ctx, req.(*MsgSquadCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SquadLeaderProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSquadLeaderProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SquadLeaderProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SquadLeaderProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SquadLeaderProposal(ctx, req.(*MsgSquadLeaderProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SquadApproveLeaderProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSquadApproveLeaderProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SquadApproveLeaderProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SquadApproveLeaderProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SquadApproveLeaderProposal(ctx, req.(*MsgSquadApproveLeaderProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SquadApproveInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSquadApproveInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SquadApproveInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SquadApproveInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SquadApproveInvite(ctx, req.(*MsgSquadApproveInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SquadApproveJoinRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSquadApproveJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SquadApproveJoinRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/SquadApproveJoinRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SquadApproveJoinRequest(ctx, req.(*MsgSquadApproveJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlayerCreateProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlayerCreateProxy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlayerCreateProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/PlayerCreateProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlayerCreateProxy(ctx, req.(*MsgPlayerCreateProxy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlayerCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlayerCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlayerCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/PlayerCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlayerCreate(ctx, req.(*MsgPlayerCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlayerUpdatePrimaryAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlayerUpdatePrimaryAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlayerUpdatePrimaryAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/PlayerUpdatePrimaryAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlayerUpdatePrimaryAddress(ctx, req.(*MsgPlayerUpdatePrimaryAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddressRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddressRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddressRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/AddressRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddressRegister(ctx, req.(*MsgAddressRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddressApproveRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddressApproveRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddressApproveRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/AddressApproveRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddressApproveRegister(ctx, req.(*MsgAddressApproveRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddressRevoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddressRevoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddressRevoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/AddressRevoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddressRevoke(ctx, req.(*MsgAddressRevoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PlanetExplore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPlanetExplore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PlanetExplore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/PlanetExplore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PlanetExplore(ctx, req.(*MsgPlanetExplore))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructActivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructActivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructActivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructActivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructActivate(ctx, req.(*MsgStructActivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructAllocationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructAllocationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructAllocationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructAllocationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructAllocationCreate(ctx, req.(*MsgStructAllocationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructBuildInitiate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructBuildInitiate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructBuildInitiate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructBuildInitiate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructBuildInitiate(ctx, req.(*MsgStructBuildInitiate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructBuildComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructBuildComplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructBuildComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructBuildComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructBuildComplete(ctx, req.(*MsgStructBuildComplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructMineActivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructMineActivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructMineActivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructMineActivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructMineActivate(ctx, req.(*MsgStructMineActivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructMineDeactivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructMineDeactivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructMineDeactivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructMineDeactivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructMineDeactivate(ctx, req.(*MsgStructMineDeactivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructMine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructMine)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructMine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructMine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructMine(ctx, req.(*MsgStructMine))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructRefineActivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructRefineActivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructRefineActivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructRefineActivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructRefineActivate(ctx, req.(*MsgStructRefineActivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructRefineDeactivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructRefineDeactivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructRefineDeactivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructRefineDeactivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructRefineDeactivate(ctx, req.(*MsgStructRefineDeactivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructRefine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructRefine)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructRefine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructRefine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructRefine(ctx, req.(*MsgStructRefine))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StructInfuse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStructInfuse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StructInfuse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/StructInfuse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StructInfuse(ctx, req.(*MsgStructInfuse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Sabotage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSabotage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Sabotage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.Msg/Sabotage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Sabotage(ctx, req.(*MsgSabotage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "structs.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AllocationCreate",
			Handler:    _Msg_AllocationCreate_Handler,
		},
		{
			MethodName: "ReactorAllocationCreate",
			Handler:    _Msg_ReactorAllocationCreate_Handler,
		},
		{
			MethodName: "SubstationAllocationCreate",
			Handler:    _Msg_SubstationAllocationCreate_Handler,
		},
		{
			MethodName: "SubstationCreate",
			Handler:    _Msg_SubstationCreate_Handler,
		},
		{
			MethodName: "SubstationDelete",
			Handler:    _Msg_SubstationDelete_Handler,
		},
		{
			MethodName: "SubstationAllocationConnect",
			Handler:    _Msg_SubstationAllocationConnect_Handler,
		},
		{
			MethodName: "SubstationAllocationDisconnect",
			Handler:    _Msg_SubstationAllocationDisconnect_Handler,
		},
		{
			MethodName: "SubstationPlayerConnect",
			Handler:    _Msg_SubstationPlayerConnect_Handler,
		},
		{
			MethodName: "SubstationPlayerDisconnect",
			Handler:    _Msg_SubstationPlayerDisconnect_Handler,
		},
		{
			MethodName: "GuildCreate",
			Handler:    _Msg_GuildCreate_Handler,
		},
		{
			MethodName: "GuildUpdateOwnerId",
			Handler:    _Msg_GuildUpdateOwnerId_Handler,
		},
		{
			MethodName: "GuildUpdateEntrySubstationId",
			Handler:    _Msg_GuildUpdateEntrySubstationId_Handler,
		},
		{
			MethodName: "GuildUpdateEndpoint",
			Handler:    _Msg_GuildUpdateEndpoint_Handler,
		},
		{
			MethodName: "GuildUpdateJoinType",
			Handler:    _Msg_GuildUpdateJoinType_Handler,
		},
		{
			MethodName: "GuildUpdateInfusionJoinMinimum",
			Handler:    _Msg_GuildUpdateInfusionJoinMinimum_Handler,
		},
		{
			MethodName: "GuildUpdateSquadJoinTypeMinimum",
			Handler:    _Msg_GuildUpdateSquadJoinTypeMinimum_Handler,
		},
		{
			MethodName: "GuildUpdateOpenSquadCreation",
			Handler:    _Msg_GuildUpdateOpenSquadCreation_Handler,
		},
		{
			MethodName: "GuildApproveRegister",
			Handler:    _Msg_GuildApproveRegister_Handler,
		},
		{
			MethodName: "SquadCreate",
			Handler:    _Msg_SquadCreate_Handler,
		},
		{
			MethodName: "SquadLeaderProposal",
			Handler:    _Msg_SquadLeaderProposal_Handler,
		},
		{
			MethodName: "SquadApproveLeaderProposal",
			Handler:    _Msg_SquadApproveLeaderProposal_Handler,
		},
		{
			MethodName: "SquadApproveInvite",
			Handler:    _Msg_SquadApproveInvite_Handler,
		},
		{
			MethodName: "SquadApproveJoinRequest",
			Handler:    _Msg_SquadApproveJoinRequest_Handler,
		},
		{
			MethodName: "PlayerCreateProxy",
			Handler:    _Msg_PlayerCreateProxy_Handler,
		},
		{
			MethodName: "PlayerCreate",
			Handler:    _Msg_PlayerCreate_Handler,
		},
		{
			MethodName: "PlayerUpdatePrimaryAddress",
			Handler:    _Msg_PlayerUpdatePrimaryAddress_Handler,
		},
		{
			MethodName: "AddressRegister",
			Handler:    _Msg_AddressRegister_Handler,
		},
		{
			MethodName: "AddressApproveRegister",
			Handler:    _Msg_AddressApproveRegister_Handler,
		},
		{
			MethodName: "AddressRevoke",
			Handler:    _Msg_AddressRevoke_Handler,
		},
		{
			MethodName: "PlanetExplore",
			Handler:    _Msg_PlanetExplore_Handler,
		},
		{
			MethodName: "StructActivate",
			Handler:    _Msg_StructActivate_Handler,
		},
		{
			MethodName: "StructAllocationCreate",
			Handler:    _Msg_StructAllocationCreate_Handler,
		},
		{
			MethodName: "StructBuildInitiate",
			Handler:    _Msg_StructBuildInitiate_Handler,
		},
		{
			MethodName: "StructBuildComplete",
			Handler:    _Msg_StructBuildComplete_Handler,
		},
		{
			MethodName: "StructMineActivate",
			Handler:    _Msg_StructMineActivate_Handler,
		},
		{
			MethodName: "StructMineDeactivate",
			Handler:    _Msg_StructMineDeactivate_Handler,
		},
		{
			MethodName: "StructMine",
			Handler:    _Msg_StructMine_Handler,
		},
		{
			MethodName: "StructRefineActivate",
			Handler:    _Msg_StructRefineActivate_Handler,
		},
		{
			MethodName: "StructRefineDeactivate",
			Handler:    _Msg_StructRefineDeactivate_Handler,
		},
		{
			MethodName: "StructRefine",
			Handler:    _Msg_StructRefine_Handler,
		},
		{
			MethodName: "StructInfuse",
			Handler:    _Msg_StructInfuse_Handler,
		},
		{
			MethodName: "Sabotage",
			Handler:    _Msg_Sabotage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "structs/structs/tx.proto",
}

func (m *MsgSubstationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerConnectionAllocation != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerConnectionAllocation))
		i--
		dAtA[i] = 0x18
	}
	if m.Owner != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Owner))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SubstationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationDelete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationDelete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationDelete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MigrationSubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MigrationSubstationId))
		i--
		dAtA[i] = 0x18
	}
	if m.SubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SubstationId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationConnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationConnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationConnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DestinationSubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DestinationSubstationId))
		i--
		dAtA[i] = 0x18
	}
	if m.AllocationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AllocationId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationConnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationConnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationConnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationDisconnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationDisconnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationDisconnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AllocationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AllocationId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationDisconnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationDisconnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationDisconnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerConnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerConnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerConnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x18
	}
	if m.SubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SubstationId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerConnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerConnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerConnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerDisconnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerDisconnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerDisconnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationPlayerDisconnectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationPlayerDisconnectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationPlayerDisconnectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAllocationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x28
	}
	if m.SourceId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SourceId))
		i--
		dAtA[i] = 0x20
	}
	if m.SourceType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SourceType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAllocationCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAllocationCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAllocationCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AllocationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AllocationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubstationAllocationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubstationAllocationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubstationAllocationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x20
	}
	if m.SourceId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SourceId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReactorAllocationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReactorAllocationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReactorAllocationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x20
	}
	if m.SourceId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SourceId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructAllocationCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructAllocationCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructAllocationCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x20
	}
	if m.SourceId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SourceId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EntrySubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntrySubstationId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Endpoint) > 0 {
		i -= len(m.Endpoint)
		copy(dAtA[i:], m.Endpoint)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Endpoint)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GuildId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateOwnerId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateOwnerId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateOwnerId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Owner != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Owner))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateEntrySubstationId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateEntrySubstationId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateEntrySubstationId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EntrySubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntrySubstationId))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Endpoint) > 0 {
		i -= len(m.Endpoint)
		copy(dAtA[i:], m.Endpoint)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Endpoint)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateJoinType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateJoinType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateJoinType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GuildJoinType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildJoinType))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateInfusionJoinMinimum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateInfusionJoinMinimum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateInfusionJoinMinimum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InfusionJoinMinimum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.InfusionJoinMinimum))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SquadJoinTypeMinimum != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadJoinTypeMinimum))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateOpenSquadCreation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateOpenSquadCreation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateOpenSquadCreation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OpenSquadCreation {
		i--
		if m.OpenSquadCreation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildUpdateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildUpdateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSquadCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EntrySubstationId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntrySubstationId))
		i--
		dAtA[i] = 0x28
	}
	if m.SquadJoinType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadJoinType))
		i--
		dAtA[i] = 0x20
	}
	if m.Leader != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Leader))
		i--
		dAtA[i] = 0x18
	}
	if m.GuildId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSquadCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SquadId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSquadLeaderProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadLeaderProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadLeaderProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Leader != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Leader))
		i--
		dAtA[i] = 0x18
	}
	if m.SquadId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSquadLeaderProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadLeaderProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadLeaderProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSquadApproveLeaderProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadApproveLeaderProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadApproveLeaderProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x20
	}
	if m.SquadId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadId))
		i--
		dAtA[i] = 0x18
	}
	if m.Approve {
		i--
		if m.Approve {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSquadApproveLeaderProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadApproveLeaderProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadApproveLeaderProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSquadApproveInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadApproveInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadApproveInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x20
	}
	if m.SquadId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadId))
		i--
		dAtA[i] = 0x18
	}
	if m.Approve {
		i--
		if m.Approve {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSquadApproveInviteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadApproveInviteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadApproveInviteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSquadApproveJoinRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadApproveJoinRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadApproveJoinRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x20
	}
	if m.SquadId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SquadId))
		i--
		dAtA[i] = 0x18
	}
	if m.Approve {
		i--
		if m.Approve {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSquadApproveJoinRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSquadApproveJoinRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSquadApproveJoinRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPlayerCreateProxy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerCreateProxy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerCreateProxy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerCreateProxyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerCreateProxyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerCreateProxyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPlayerCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GuildId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddressApproveRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressApproveRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressApproveRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permissions != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Permissions))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressType) > 0 {
		i -= len(m.AddressType)
		copy(dAtA[i:], m.AddressType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Approve {
		i--
		if m.Approve {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddressRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddressRegisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRegisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRegisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddressRevoke) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRevoke) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRevoke) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddressRevokeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddressRevokeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddressRevokeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGuildApproveRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildApproveRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildApproveRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlayerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x20
	}
	if m.GuildId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GuildId))
		i--
		dAtA[i] = 0x18
	}
	if m.Approve {
		i--
		if m.Approve {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGuildApproveRegisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGuildApproveRegisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGuildApproveRegisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPlanetExplore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlanetExplore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlanetExplore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlanetExploreResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlanetExploreResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlanetExploreResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Planet.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructActivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructActivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructActivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructActivateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructActivateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructActivateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildInitiate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildInitiate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildInitiate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Slot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Slot))
		i--
		dAtA[i] = 0x20
	}
	if m.PlanetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlanetId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.StructType) > 0 {
		i -= len(m.StructType)
		copy(dAtA[i:], m.StructType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StructType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildInitiateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildInitiateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildInitiateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildComplete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildComplete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildComplete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructBuildCompleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructBuildCompleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructBuildCompleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructMineActivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMineActivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMineActivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructMineActivateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMineActivateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMineActivateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructMineDeactivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMineDeactivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMineDeactivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructMineDeactivateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMineDeactivateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMineDeactivateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructMine) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMine) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMine) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructMineResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructMineResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructMineResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructRefineActivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructRefineActivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructRefineActivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructRefineActivateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructRefineActivateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructRefineActivateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructRefineDeactivate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructRefineDeactivate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructRefineDeactivate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructRefineDeactivateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructRefineDeactivateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructRefineDeactivateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgStructRefine) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructRefine) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructRefine) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructRefineResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructRefineResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructRefineResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Struct.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgPlayerUpdatePrimaryAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerUpdatePrimaryAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerUpdatePrimaryAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PrimaryAddress) > 0 {
		i -= len(m.PrimaryAddress)
		copy(dAtA[i:], m.PrimaryAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PrimaryAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgStructInfuse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructInfuse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructInfuse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InfuseAmount) > 0 {
		i -= len(m.InfuseAmount)
		copy(dAtA[i:], m.InfuseAmount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InfuseAmount)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStructInfuseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStructInfuseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStructInfuseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSabotage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSabotage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSabotage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nonce) > 0 {
		i -= len(m.Nonce)
		copy(dAtA[i:], m.Nonce)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nonce)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StructId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StructId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSabotageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSabotageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSabotageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSubstationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Owner != 0 {
		n += 1 + sovTx(uint64(m.Owner))
	}
	if m.PlayerConnectionAllocation != 0 {
		n += 1 + sovTx(uint64(m.PlayerConnectionAllocation))
	}
	return n
}

func (m *MsgSubstationCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubstationId != 0 {
		n += 1 + sovTx(uint64(m.SubstationId))
	}
	return n
}

func (m *MsgSubstationDelete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SubstationId != 0 {
		n += 1 + sovTx(uint64(m.SubstationId))
	}
	if m.MigrationSubstationId != 0 {
		n += 1 + sovTx(uint64(m.MigrationSubstationId))
	}
	return n
}

func (m *MsgSubstationDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationAllocationConnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AllocationId != 0 {
		n += 1 + sovTx(uint64(m.AllocationId))
	}
	if m.DestinationSubstationId != 0 {
		n += 1 + sovTx(uint64(m.DestinationSubstationId))
	}
	return n
}

func (m *MsgSubstationAllocationConnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationAllocationDisconnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AllocationId != 0 {
		n += 1 + sovTx(uint64(m.AllocationId))
	}
	return n
}

func (m *MsgSubstationAllocationDisconnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationPlayerConnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SubstationId != 0 {
		n += 1 + sovTx(uint64(m.SubstationId))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	return n
}

func (m *MsgSubstationPlayerConnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubstationPlayerDisconnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	return n
}

func (m *MsgSubstationPlayerDisconnectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAllocationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SourceType != 0 {
		n += 1 + sovTx(uint64(m.SourceType))
	}
	if m.SourceId != 0 {
		n += 1 + sovTx(uint64(m.SourceId))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	return n
}

func (m *MsgAllocationCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AllocationId != 0 {
		n += 1 + sovTx(uint64(m.AllocationId))
	}
	return n
}

func (m *MsgSubstationAllocationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SourceId != 0 {
		n += 1 + sovTx(uint64(m.SourceId))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	return n
}

func (m *MsgReactorAllocationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SourceId != 0 {
		n += 1 + sovTx(uint64(m.SourceId))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	return n
}

func (m *MsgStructAllocationCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SourceId != 0 {
		n += 1 + sovTx(uint64(m.SourceId))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	return n
}

func (m *MsgGuildCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Endpoint)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntrySubstationId != 0 {
		n += 1 + sovTx(uint64(m.EntrySubstationId))
	}
	return n
}

func (m *MsgGuildCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GuildId != 0 {
		n += 1 + sovTx(uint64(m.GuildId))
	}
	return n
}

func (m *MsgGuildUpdateOwnerId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Owner != 0 {
		n += 1 + sovTx(uint64(m.Owner))
	}
	return n
}

func (m *MsgGuildUpdateEntrySubstationId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.EntrySubstationId != 0 {
		n += 1 + sovTx(uint64(m.EntrySubstationId))
	}
	return n
}

func (m *MsgGuildUpdateEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Endpoint)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGuildUpdateJoinType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.GuildJoinType != 0 {
		n += 1 + sovTx(uint64(m.GuildJoinType))
	}
	return n
}

func (m *MsgGuildUpdateInfusionJoinMinimum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.InfusionJoinMinimum != 0 {
		n += 1 + sovTx(uint64(m.InfusionJoinMinimum))
	}
	return n
}

func (m *MsgGuildUpdateSquadJoinTypeMinimum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.SquadJoinTypeMinimum != 0 {
		n += 1 + sovTx(uint64(m.SquadJoinTypeMinimum))
	}
	return n
}

func (m *MsgGuildUpdateOpenSquadCreation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.OpenSquadCreation {
		n += 2
	}
	return n
}

func (m *MsgGuildUpdateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSquadCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GuildId != 0 {
		n += 1 + sovTx(uint64(m.GuildId))
	}
	if m.Leader != 0 {
		n += 1 + sovTx(uint64(m.Leader))
	}
	if m.SquadJoinType != 0 {
		n += 1 + sovTx(uint64(m.SquadJoinType))
	}
	if m.EntrySubstationId != 0 {
		n += 1 + sovTx(uint64(m.EntrySubstationId))
	}
	return n
}

func (m *MsgSquadCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SquadId != 0 {
		n += 1 + sovTx(uint64(m.SquadId))
	}
	return n
}

func (m *MsgSquadLeaderProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SquadId != 0 {
		n += 1 + sovTx(uint64(m.SquadId))
	}
	if m.Leader != 0 {
		n += 1 + sovTx(uint64(m.Leader))
	}
	return n
}

func (m *MsgSquadLeaderProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSquadApproveLeaderProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Approve {
		n += 2
	}
	if m.SquadId != 0 {
		n += 1 + sovTx(uint64(m.SquadId))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	return n
}

func (m *MsgSquadApproveLeaderProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSquadApproveInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Approve {
		n += 2
	}
	if m.SquadId != 0 {
		n += 1 + sovTx(uint64(m.SquadId))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	return n
}

func (m *MsgSquadApproveInviteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSquadApproveJoinRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Approve {
		n += 2
	}
	if m.SquadId != 0 {
		n += 1 + sovTx(uint64(m.SquadId))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	return n
}

func (m *MsgSquadApproveJoinRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPlayerCreateProxy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlayerCreateProxyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPlayerCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GuildId != 0 {
		n += 1 + sovTx(uint64(m.GuildId))
	}
	return n
}

func (m *MsgPlayerCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddressApproveRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Approve {
		n += 2
	}
	l = len(m.AddressType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Permissions != 0 {
		n += 1 + sovTx(uint64(m.Permissions))
	}
	return n
}

func (m *MsgAddressRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddressRegisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddressRevoke) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddressRevokeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGuildApproveRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Approve {
		n += 2
	}
	if m.GuildId != 0 {
		n += 1 + sovTx(uint64(m.GuildId))
	}
	if m.PlayerId != 0 {
		n += 1 + sovTx(uint64(m.PlayerId))
	}
	return n
}

func (m *MsgGuildApproveRegisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPlanetExplore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlanetExploreResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Planet.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructActivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	return n
}

func (m *MsgStructActivateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructBuildInitiate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StructType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.PlanetId != 0 {
		n += 1 + sovTx(uint64(m.PlanetId))
	}
	if m.Slot != 0 {
		n += 1 + sovTx(uint64(m.Slot))
	}
	return n
}

func (m *MsgStructBuildInitiateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructBuildComplete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructBuildCompleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructMineActivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	return n
}

func (m *MsgStructMineActivateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructMineDeactivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	return n
}

func (m *MsgStructMineDeactivateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructMine) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructMineResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructRefineActivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	return n
}

func (m *MsgStructRefineActivateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructRefineDeactivate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	return n
}

func (m *MsgStructRefineDeactivateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgStructRefine) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructRefineResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Struct.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgPlayerUpdatePrimaryAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PrimaryAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPlayerUpdatePrimaryAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgStructInfuse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	l = len(m.InfuseAmount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStructInfuseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSabotage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StructId != 0 {
		n += 1 + sovTx(uint64(m.StructId))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nonce)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSabotageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSubstationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			m.Owner = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Owner |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerConnectionAllocation", wireType)
			}
			m.PlayerConnectionAllocation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerConnectionAllocation |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			m.SubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationDelete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationDelete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationDelete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			m.SubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MigrationSubstationId", wireType)
			}
			m.MigrationSubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MigrationSubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationConnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			m.AllocationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AllocationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationSubstationId", wireType)
			}
			m.DestinationSubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DestinationSubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationConnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationConnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationDisconnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			m.AllocationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AllocationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationDisconnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationDisconnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerConnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
			}
			m.SubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerConnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerConnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerDisconnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationPlayerDisconnectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationPlayerDisconnectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			m.SourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceType |= ObjectType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceId", wireType)
			}
			m.SourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAllocationCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAllocationCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAllocationCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllocationId", wireType)
			}
			m.AllocationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AllocationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubstationAllocationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubstationAllocationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubstationAllocationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceId", wireType)
			}
			m.SourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReactorAllocationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReactorAllocationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReactorAllocationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceId", wireType)
			}
			m.SourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructAllocationCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructAllocationCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructAllocationCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceId", wireType)
			}
			m.SourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntrySubstationId", wireType)
			}
			m.EntrySubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntrySubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			m.GuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateOwnerId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateOwnerId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateOwnerId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			m.Owner = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Owner |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateEntrySubstationId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateEntrySubstationId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateEntrySubstationId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntrySubstationId", wireType)
			}
			m.EntrySubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntrySubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateJoinType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateJoinType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildJoinType", wireType)
			}
			m.GuildJoinType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildJoinType |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateInfusionJoinMinimum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateInfusionJoinMinimum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateInfusionJoinMinimum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfusionJoinMinimum", wireType)
			}
			m.InfusionJoinMinimum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfusionJoinMinimum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateSquadJoinTypeMinimum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateSquadJoinTypeMinimum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateSquadJoinTypeMinimum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadJoinTypeMinimum", wireType)
			}
			m.SquadJoinTypeMinimum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadJoinTypeMinimum |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateOpenSquadCreation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateOpenSquadCreation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateOpenSquadCreation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenSquadCreation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OpenSquadCreation = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildUpdateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildUpdateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			m.GuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Leader", wireType)
			}
			m.Leader = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Leader |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadJoinType", wireType)
			}
			m.SquadJoinType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadJoinType |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntrySubstationId", wireType)
			}
			m.EntrySubstationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntrySubstationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadId", wireType)
			}
			m.SquadId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadLeaderProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadLeaderProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadLeaderProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadId", wireType)
			}
			m.SquadId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Leader", wireType)
			}
			m.Leader = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Leader |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadLeaderProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadLeaderProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadLeaderProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadApproveLeaderProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadApproveLeaderProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadApproveLeaderProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approve", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approve = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadId", wireType)
			}
			m.SquadId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadApproveLeaderProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadApproveLeaderProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadApproveLeaderProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadApproveInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadApproveInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadApproveInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approve", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approve = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadId", wireType)
			}
			m.SquadId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadApproveInviteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadApproveInviteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadApproveInviteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadApproveJoinRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadApproveJoinRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadApproveJoinRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approve", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approve = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquadId", wireType)
			}
			m.SquadId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SquadId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSquadApproveJoinRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSquadApproveJoinRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSquadApproveJoinRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerCreateProxy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerCreateProxy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerCreateProxy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerCreateProxyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerCreateProxyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerCreateProxyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			m.GuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressApproveRegister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressApproveRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressApproveRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approve", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approve = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			m.Permissions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Permissions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRegister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRegisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRegisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRegisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRevoke) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRevoke: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRevoke: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddressRevokeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddressRevokeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddressRevokeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildApproveRegister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildApproveRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildApproveRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approve", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approve = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
			}
			m.GuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGuildApproveRegisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGuildApproveRegisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGuildApproveRegisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlanetExplore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlanetExplore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlanetExplore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlanetExploreResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlanetExploreResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlanetExploreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Planet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Planet.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructActivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructActivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructActivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructActivateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructActivateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructActivateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildInitiate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildInitiate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildInitiate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StructType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlanetId", wireType)
			}
			m.PlanetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlanetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			m.Slot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Slot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildInitiateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildInitiateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildInitiateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildComplete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildComplete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildComplete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructBuildCompleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructBuildCompleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructBuildCompleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMineActivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMineActivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMineActivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMineActivateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMineActivateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMineActivateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMineDeactivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMineDeactivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMineDeactivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMineDeactivateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMineDeactivateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMineDeactivateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMine) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMine: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMine: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructMineResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructMineResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructMineResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructRefineActivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructRefineActivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructRefineActivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructRefineActivateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructRefineActivateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructRefineActivateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructRefineDeactivate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructRefineDeactivate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructRefineDeactivate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructRefineDeactivateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructRefineDeactivateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructRefineDeactivateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructRefine) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructRefine: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructRefine: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructRefineResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructRefineResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructRefineResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Struct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Struct.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerUpdatePrimaryAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrimaryAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerUpdatePrimaryAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerUpdatePrimaryAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructInfuse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructInfuse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructInfuse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfuseAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InfuseAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStructInfuseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStructInfuseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStructInfuseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSabotage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSabotage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSabotage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StructId", wireType)
			}
			m.StructId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StructId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nonce = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSabotageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSabotageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSabotageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
