// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: structs/structs/events.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Cache Invalidation
type EventCacheInvalidation struct {
	ObjectId   uint64     `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ObjectType ObjectType `protobuf:"varint,2,opt,name=object_type,json=objectType,proto3,enum=structs.structs.ObjectType" json:"object_type,omitempty"`
}

func (m *EventCacheInvalidation) Reset()         { *m = EventCacheInvalidation{} }
func (m *EventCacheInvalidation) String() string { return proto.CompactTextString(m) }
func (*EventCacheInvalidation) ProtoMessage()    {}
func (*EventCacheInvalidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd7c2ee201e0d8dd, []int{0}
}
func (m *EventCacheInvalidation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventCacheInvalidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventCacheInvalidation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventCacheInvalidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCacheInvalidation.Merge(m, src)
}
func (m *EventCacheInvalidation) XXX_Size() int {
	return m.Size()
}
func (m *EventCacheInvalidation) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCacheInvalidation.DiscardUnknown(m)
}

var xxx_messageInfo_EventCacheInvalidation proto.InternalMessageInfo

func (m *EventCacheInvalidation) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *EventCacheInvalidation) GetObjectType() ObjectType {
	if m != nil {
		return m.ObjectType
	}
	return ObjectType_faction
}

func init() {
	proto.RegisterType((*EventCacheInvalidation)(nil), "structs.structs.EventCacheInvalidation")
}

func init() { proto.RegisterFile("structs/structs/events.proto", fileDescriptor_dd7c2ee201e0d8dd) }

var fileDescriptor_dd7c2ee201e0d8dd = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xbb, 0x22, 0xa2, 0x11, 0x14, 0x8a, 0x68, 0x49, 0xeb, 0x52, 0x3c, 0x15, 0x0f, 0x59,
	0xaa, 0x57, 0x4f, 0x8a, 0x87, 0x5e, 0x8b, 0x27, 0x2f, 0x32, 0xd9, 0x0e, 0x31, 0x9a, 0xee, 0xac,
	0xbb, 0xdb, 0x62, 0xde, 0xc2, 0xc7, 0xf2, 0xd8, 0xa3, 0x47, 0x49, 0x5e, 0x44, 0x92, 0x6c, 0xb4,
	0xc4, 0xd3, 0x0c, 0xf3, 0x7f, 0xf3, 0xcf, 0xcf, 0x04, 0x23, 0xeb, 0xcc, 0x4a, 0x3a, 0x2b, 0xda,
	0x8a, 0x6b, 0x54, 0xce, 0x46, 0xda, 0x90, 0xa3, 0xfe, 0xb1, 0x9f, 0x46, 0xbe, 0x86, 0x27, 0x09,
	0x25, 0x54, 0x6b, 0xa2, 0xea, 0x1a, 0x2c, 0x1c, 0x25, 0x44, 0x49, 0x86, 0x02, 0x74, 0x2a, 0x40,
	0x29, 0x72, 0xe0, 0x52, 0x52, 0xde, 0x24, 0xbc, 0x94, 0x64, 0x97, 0x64, 0x45, 0x0c, 0x16, 0xc5,
	0xdb, 0x0a, 0x4d, 0x2e, 0xd6, 0xd3, 0x18, 0x1d, 0x4c, 0x85, 0x86, 0x24, 0x55, 0x35, 0xdc, 0x3a,
	0x75, 0xe3, 0x68, 0x30, 0xb0, 0x6c, 0x9d, 0xce, 0xbb, 0xaa, 0x41, 0x90, 0x8e, 0x8c, 0x97, 0xc7,
	0x5d, 0xd9, 0xae, 0x62, 0xeb, 0xb6, 0xed, 0xff, 0x11, 0x90, 0x65, 0x24, 0xb7, 0x89, 0xb0, 0x4b,
	0xbc, 0x62, 0xee, 0xcf, 0x5f, 0xd8, 0xe0, 0xf4, 0xbe, 0xfa, 0xce, 0x1d, 0xc8, 0x67, 0x9c, 0xa9,
	0x35, 0x64, 0xe9, 0xa2, 0xde, 0xed, 0x0f, 0x83, 0x03, 0x8a, 0x5f, 0x50, 0xba, 0xa7, 0x74, 0x31,
	0x60, 0x63, 0x36, 0xd9, 0x9d, 0xef, 0x37, 0x83, 0xd9, 0xa2, 0x7f, 0x13, 0x1c, 0x7a, 0xd1, 0xe5,
	0x1a, 0x07, 0x3b, 0x63, 0x36, 0x39, 0xba, 0x1a, 0x46, 0x9d, 0xd7, 0x46, 0x0d, 0xf3, 0x90, 0x6b,
	0x9c, 0x07, 0x7f, 0xfd, 0xed, 0xf4, 0xb3, 0xe0, 0x6c, 0x53, 0x70, 0xf6, 0x5d, 0x70, 0xf6, 0x51,
	0xf2, 0xde, 0xa6, 0xe4, 0xbd, 0xaf, 0x92, 0xf7, 0x1e, 0xcf, 0xda, 0x88, 0xef, 0xbf, 0x61, 0xab,
	0x03, 0x36, 0xde, 0xab, 0xe3, 0x5e, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xc6, 0x13, 0x41,
	0xdc, 0x01, 0x00, 0x00,
}

func (m *EventCacheInvalidation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventCacheInvalidation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventCacheInvalidation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ObjectType != 0 {
		i = encodeVarintEvents(dAtA, i, uint64(m.ObjectType))
		i--
		dAtA[i] = 0x10
	}
	if m.ObjectId != 0 {
		i = encodeVarintEvents(dAtA, i, uint64(m.ObjectId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintEvents(dAtA []byte, offset int, v uint64) int {
	offset -= sovEvents(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EventCacheInvalidation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ObjectId != 0 {
		n += 1 + sovEvents(uint64(m.ObjectId))
	}
	if m.ObjectType != 0 {
		n += 1 + sovEvents(uint64(m.ObjectType))
	}
	return n
}

func sovEvents(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEvents(x uint64) (n int) {
	return sovEvents(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EventCacheInvalidation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventCacheInvalidation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventCacheInvalidation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectType", wireType)
			}
			m.ObjectType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectType |= ObjectType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEvents(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEvents
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEvents
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEvents
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEvents
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEvents        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEvents          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEvents = fmt.Errorf("proto: unexpected end of group")
)
