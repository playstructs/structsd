// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: structs/structs/keys.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ObjectType int32

const (
	ObjectType_guild      ObjectType = 0
	ObjectType_player     ObjectType = 1
	ObjectType_planet     ObjectType = 2
	ObjectType_reactor    ObjectType = 3
	ObjectType_substation ObjectType = 4
	ObjectType_struct     ObjectType = 5
	ObjectType_allocation ObjectType = 6
	ObjectType_infusion   ObjectType = 7
	ObjectType_address    ObjectType = 8
)

var ObjectType_name = map[int32]string{
	0: "guild",
	1: "player",
	2: "planet",
	3: "reactor",
	4: "substation",
	5: "struct",
	6: "allocation",
	7: "infusion",
	8: "address",
}

var ObjectType_value = map[string]int32{
	"guild":      0,
	"player":     1,
	"planet":     2,
	"reactor":    3,
	"substation": 4,
	"struct":     5,
	"allocation": 6,
	"infusion":   7,
	"address":    8,
}

func (x ObjectType) String() string {
	return proto.EnumName(ObjectType_name, int32(x))
}

func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{0}
}

type GridAttributeType int32

const (
	GridAttributeType_ore                    GridAttributeType = 0
	GridAttributeType_fuel                   GridAttributeType = 1
	GridAttributeType_capacity               GridAttributeType = 2
	GridAttributeType_load                   GridAttributeType = 3
	GridAttributeType_structsLoad            GridAttributeType = 4
	GridAttributeType_power                  GridAttributeType = 5
	GridAttributeType_connectionCapacity     GridAttributeType = 6
	GridAttributeType_connectionCount        GridAttributeType = 7
	GridAttributeType_allocationPointerStart GridAttributeType = 8
	GridAttributeType_allocationPointerEnd   GridAttributeType = 9
)

var GridAttributeType_name = map[int32]string{
	0: "ore",
	1: "fuel",
	2: "capacity",
	3: "load",
	4: "structsLoad",
	5: "power",
	6: "connectionCapacity",
	7: "connectionCount",
	8: "allocationPointerStart",
	9: "allocationPointerEnd",
}

var GridAttributeType_value = map[string]int32{
	"ore":                    0,
	"fuel":                   1,
	"capacity":               2,
	"load":                   3,
	"structsLoad":            4,
	"power":                  5,
	"connectionCapacity":     6,
	"connectionCount":        7,
	"allocationPointerStart": 8,
	"allocationPointerEnd":   9,
}

func (x GridAttributeType) String() string {
	return proto.EnumName(GridAttributeType_name, int32(x))
}

func (GridAttributeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{1}
}

type AllocationType int32

const (
	AllocationType_static    AllocationType = 0
	AllocationType_dynamic   AllocationType = 1
	AllocationType_automated AllocationType = 2
)

var AllocationType_name = map[int32]string{
	0: "static",
	1: "dynamic",
	2: "automated",
}

var AllocationType_value = map[string]int32{
	"static":    0,
	"dynamic":   1,
	"automated": 2,
}

func (x AllocationType) String() string {
	return proto.EnumName(AllocationType_name, int32(x))
}

func (AllocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{2}
}

type GuildJoinBypassLevel int32

const (
	GuildJoinBypassLevel_closed       GuildJoinBypassLevel = 0
	GuildJoinBypassLevel_permissioned GuildJoinBypassLevel = 1
	GuildJoinBypassLevel_member       GuildJoinBypassLevel = 2
)

var GuildJoinBypassLevel_name = map[int32]string{
	0: "closed",
	1: "permissioned",
	2: "member",
}

var GuildJoinBypassLevel_value = map[string]int32{
	"closed":       0,
	"permissioned": 1,
	"member":       2,
}

func (x GuildJoinBypassLevel) String() string {
	return proto.EnumName(GuildJoinBypassLevel_name, int32(x))
}

func (GuildJoinBypassLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{3}
}

type RegistrationStatus int32

const (
	RegistrationStatus_proposed RegistrationStatus = 0
	RegistrationStatus_approved RegistrationStatus = 1
	RegistrationStatus_denied   RegistrationStatus = 2
)

var RegistrationStatus_name = map[int32]string{
	0: "proposed",
	1: "approved",
	2: "denied",
}

var RegistrationStatus_value = map[string]int32{
	"proposed": 0,
	"approved": 1,
	"denied":   2,
}

func (x RegistrationStatus) String() string {
	return proto.EnumName(RegistrationStatus_name, int32(x))
}

func (RegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{4}
}

func init() {
	proto.RegisterEnum("structs.ObjectType", ObjectType_name, ObjectType_value)
	proto.RegisterEnum("structs.GridAttributeType", GridAttributeType_name, GridAttributeType_value)
	proto.RegisterEnum("structs.AllocationType", AllocationType_name, AllocationType_value)
	proto.RegisterEnum("structs.GuildJoinBypassLevel", GuildJoinBypassLevel_name, GuildJoinBypassLevel_value)
	proto.RegisterEnum("structs.RegistrationStatus", RegistrationStatus_name, RegistrationStatus_value)
}

func init() { proto.RegisterFile("structs/structs/keys.proto", fileDescriptor_d2b5c851dc116405) }

var fileDescriptor_d2b5c851dc116405 = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xbd, 0x6e, 0xd4, 0x40,
	0x10, 0xb6, 0xef, 0xff, 0x26, 0x47, 0x32, 0x2c, 0xa7, 0x80, 0xae, 0xf0, 0x03, 0xb8, 0x20, 0x42,
	0x34, 0x14, 0x14, 0x10, 0x44, 0x83, 0x52, 0x20, 0x85, 0x8a, 0x6e, 0xbd, 0x3b, 0xb1, 0x16, 0xec,
	0xdd, 0xd5, 0xee, 0x38, 0xe0, 0x9a, 0x17, 0xe0, 0x85, 0xe8, 0x29, 0x53, 0x52, 0xa2, 0xbb, 0x17,
	0x41, 0xeb, 0xbb, 0x23, 0x48, 0x54, 0x1e, 0x7f, 0xdf, 0xce, 0xcc, 0x37, 0xdf, 0x0c, 0x6c, 0x22,
	0x87, 0x4e, 0x71, 0xbc, 0x38, 0x7e, 0x3f, 0x53, 0x1f, 0x9f, 0xfa, 0xe0, 0xd8, 0x89, 0xf9, 0x01,
	0xdb, 0xac, 0x6b, 0x57, 0xbb, 0x01, 0xbb, 0x48, 0xd1, 0x9e, 0x2e, 0xbf, 0xe5, 0x00, 0xae, 0xfa,
	0x44, 0x8a, 0x3f, 0xf4, 0x9e, 0xc4, 0x12, 0xa6, 0x75, 0x67, 0x1a, 0x8d, 0x99, 0x00, 0x98, 0xf9,
	0x46, 0xf6, 0x14, 0x30, 0x3f, 0xc4, 0x96, 0x18, 0x47, 0xe2, 0x04, 0xe6, 0x81, 0xa4, 0x62, 0x17,
	0x70, 0x2c, 0x4e, 0x01, 0x62, 0x57, 0x45, 0x96, 0x6c, 0x9c, 0xc5, 0x49, 0x7a, 0xb8, 0xef, 0x87,
	0xd3, 0xc4, 0xc9, 0xa6, 0x71, 0x6a, 0xcf, 0xcd, 0xc4, 0x0a, 0x16, 0xc6, 0xde, 0x74, 0x31, 0xfd,
	0xcd, 0x53, 0x19, 0xa9, 0x75, 0xa0, 0x18, 0x71, 0x51, 0xfe, 0xc8, 0xe1, 0x61, 0x1d, 0x8c, 0x7e,
	0xcd, 0x1c, 0x4c, 0xd5, 0x31, 0x0d, 0x62, 0xe6, 0x30, 0x76, 0x81, 0x30, 0x13, 0x0b, 0x98, 0xdc,
	0x74, 0xd4, 0x60, 0x9e, 0x6a, 0x28, 0xe9, 0xa5, 0x32, 0xdc, 0xe3, 0x28, 0xe1, 0x8d, 0x93, 0x1a,
	0xc7, 0xe2, 0x0c, 0x4e, 0x0e, 0x73, 0x5e, 0x25, 0x60, 0x92, 0x06, 0xf1, 0xee, 0x0b, 0x05, 0x9c,
	0x8a, 0x73, 0x10, 0xca, 0x59, 0x4b, 0x2a, 0xe9, 0x78, 0x73, 0xcc, 0x9e, 0x89, 0x47, 0x70, 0xf6,
	0x0f, 0xee, 0x3a, 0xcb, 0x38, 0x17, 0x1b, 0x38, 0xbf, 0x17, 0xfd, 0xde, 0x19, 0xcb, 0x14, 0xae,
	0x59, 0x06, 0xc6, 0x85, 0x78, 0x02, 0xeb, 0xff, 0xb8, 0xb7, 0x56, 0xe3, 0xb2, 0x7c, 0x01, 0xa7,
	0xf7, 0xcc, 0xa0, 0x7d, 0x30, 0x42, 0xb2, 0x51, 0x98, 0xa5, 0x51, 0x75, 0x6f, 0x65, 0x6b, 0x14,
	0xe6, 0xe2, 0x01, 0x2c, 0x65, 0xc7, 0xae, 0x95, 0x4c, 0x1a, 0x47, 0xe5, 0x2b, 0x58, 0x0f, 0x86,
	0xbf, 0x73, 0xc6, 0x5e, 0xf6, 0x5e, 0xc6, 0x78, 0x45, 0xb7, 0xd4, 0xa4, 0x7c, 0xd5, 0xb8, 0x48,
	0x69, 0x13, 0x08, 0x2b, 0x4f, 0xa1, 0x35, 0x31, 0x59, 0x47, 0x7a, 0xbf, 0x8f, 0x96, 0xda, 0x8a,
	0x02, 0x8e, 0xca, 0x97, 0x20, 0x02, 0xd5, 0x26, 0x72, 0x18, 0xba, 0x5f, 0xb3, 0xe4, 0x2e, 0x26,
	0xa3, 0x7c, 0x70, 0xfe, 0x50, 0x61, 0x05, 0x0b, 0xe9, 0x7d, 0x70, 0xb7, 0xc7, 0x6c, 0x4d, 0xd6,
	0xa4, 0xfe, 0x97, 0xcf, 0x7e, 0x6e, 0x8b, 0xfc, 0x6e, 0x5b, 0xe4, 0xbf, 0xb7, 0x45, 0xfe, 0x7d,
	0x57, 0x64, 0x77, 0xbb, 0x22, 0xfb, 0xb5, 0x2b, 0xb2, 0x8f, 0x8f, 0x8f, 0xc7, 0xf4, 0xf5, 0xef,
	0x59, 0x71, 0xef, 0x29, 0x56, 0xb3, 0xe1, 0x72, 0x9e, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x28,
	0x12, 0xab, 0x29, 0x76, 0x02, 0x00, 0x00,
}
