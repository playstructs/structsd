// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: structs/structs/keys.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ObjectType int32

const (
	ObjectType_guild      ObjectType = 0
	ObjectType_player     ObjectType = 1
	ObjectType_planet     ObjectType = 2
	ObjectType_reactor    ObjectType = 3
	ObjectType_substation ObjectType = 4
	ObjectType_struct     ObjectType = 5
	ObjectType_allocation ObjectType = 6
	ObjectType_infusion   ObjectType = 7
	ObjectType_address    ObjectType = 8
)

var ObjectType_name = map[int32]string{
	0: "guild",
	1: "player",
	2: "planet",
	3: "reactor",
	4: "substation",
	5: "struct",
	6: "allocation",
	7: "infusion",
	8: "address",
}

var ObjectType_value = map[string]int32{
	"guild":      0,
	"player":     1,
	"planet":     2,
	"reactor":    3,
	"substation": 4,
	"struct":     5,
	"allocation": 6,
	"infusion":   7,
	"address":    8,
}

func (x ObjectType) String() string {
	return proto.EnumName(ObjectType_name, int32(x))
}

func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{0}
}

type GridAttributeType int32

const (
	GridAttributeType_ore                    GridAttributeType = 0
	GridAttributeType_fuel                   GridAttributeType = 1
	GridAttributeType_capacity               GridAttributeType = 2
	GridAttributeType_load                   GridAttributeType = 3
	GridAttributeType_structsLoad            GridAttributeType = 4
	GridAttributeType_power                  GridAttributeType = 5
	GridAttributeType_connectionCapacity     GridAttributeType = 6
	GridAttributeType_connectionCount        GridAttributeType = 7
	GridAttributeType_allocationPointerStart GridAttributeType = 8
	GridAttributeType_allocationPointerEnd   GridAttributeType = 9
)

var GridAttributeType_name = map[int32]string{
	0: "ore",
	1: "fuel",
	2: "capacity",
	3: "load",
	4: "structsLoad",
	5: "power",
	6: "connectionCapacity",
	7: "connectionCount",
	8: "allocationPointerStart",
	9: "allocationPointerEnd",
}

var GridAttributeType_value = map[string]int32{
	"ore":                    0,
	"fuel":                   1,
	"capacity":               2,
	"load":                   3,
	"structsLoad":            4,
	"power":                  5,
	"connectionCapacity":     6,
	"connectionCount":        7,
	"allocationPointerStart": 8,
	"allocationPointerEnd":   9,
}

func (x GridAttributeType) String() string {
	return proto.EnumName(GridAttributeType_name, int32(x))
}

func (GridAttributeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{1}
}

type AllocationType int32

const (
	AllocationType_static    AllocationType = 0
	AllocationType_dynamic   AllocationType = 1
	AllocationType_automated AllocationType = 2
)

var AllocationType_name = map[int32]string{
	0: "static",
	1: "dynamic",
	2: "automated",
}

var AllocationType_value = map[string]int32{
	"static":    0,
	"dynamic":   1,
	"automated": 2,
}

func (x AllocationType) String() string {
	return proto.EnumName(AllocationType_name, int32(x))
}

func (AllocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{2}
}

type GuildJoinBypassLevel int32

const (
	GuildJoinBypassLevel_closed       GuildJoinBypassLevel = 0
	GuildJoinBypassLevel_permissioned GuildJoinBypassLevel = 1
	GuildJoinBypassLevel_member       GuildJoinBypassLevel = 2
)

var GuildJoinBypassLevel_name = map[int32]string{
	0: "closed",
	1: "permissioned",
	2: "member",
}

var GuildJoinBypassLevel_value = map[string]int32{
	"closed":       0,
	"permissioned": 1,
	"member":       2,
}

func (x GuildJoinBypassLevel) String() string {
	return proto.EnumName(GuildJoinBypassLevel_name, int32(x))
}

func (GuildJoinBypassLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{3}
}

type GuildJoinType int32

const (
	GuildJoinType_invite  GuildJoinType = 0
	GuildJoinType_request GuildJoinType = 1
	GuildJoinType_direct  GuildJoinType = 2
	GuildJoinType_proxy   GuildJoinType = 3
)

var GuildJoinType_name = map[int32]string{
	0: "invite",
	1: "request",
	2: "direct",
	3: "proxy",
}

var GuildJoinType_value = map[string]int32{
	"invite":  0,
	"request": 1,
	"direct":  2,
	"proxy":   3,
}

func (x GuildJoinType) String() string {
	return proto.EnumName(GuildJoinType_name, int32(x))
}

func (GuildJoinType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{4}
}

type RegistrationStatus int32

const (
	RegistrationStatus_proposed RegistrationStatus = 0
	RegistrationStatus_approved RegistrationStatus = 1
	RegistrationStatus_denied   RegistrationStatus = 2
	RegistrationStatus_revoked  RegistrationStatus = 3
)

var RegistrationStatus_name = map[int32]string{
	0: "proposed",
	1: "approved",
	2: "denied",
	3: "revoked",
}

var RegistrationStatus_value = map[string]int32{
	"proposed": 0,
	"approved": 1,
	"denied":   2,
	"revoked":  3,
}

func (x RegistrationStatus) String() string {
	return proto.EnumName(RegistrationStatus_name, int32(x))
}

func (RegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{5}
}

type Ambit int32

const (
	Ambit_water Ambit = 0
	Ambit_land  Ambit = 1
	Ambit_air   Ambit = 2
	Ambit_space Ambit = 3
)

var Ambit_name = map[int32]string{
	0: "water",
	1: "land",
	2: "air",
	3: "space",
}

var Ambit_value = map[string]int32{
	"water": 0,
	"land":  1,
	"air":   2,
	"space": 3,
}

func (x Ambit) String() string {
	return proto.EnumName(Ambit_name, int32(x))
}

func (Ambit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{6}
}

type StructCategory int32

const (
	StructCategory_planetary StructCategory = 0
	StructCategory_fleet     StructCategory = 1
)

var StructCategory_name = map[int32]string{
	0: "planetary",
	1: "fleet",
}

var StructCategory_value = map[string]int32{
	"planetary": 0,
	"fleet":     1,
}

func (x StructCategory) String() string {
	return proto.EnumName(StructCategory_name, int32(x))
}

func (StructCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{7}
}

type StructStatus int32

const (
	StructStatus_building  StructStatus = 0
	StructStatus_active    StructStatus = 1
	StructStatus_inactive  StructStatus = 2
	StructStatus_destroyed StructStatus = 3
)

var StructStatus_name = map[int32]string{
	0: "building",
	1: "active",
	2: "inactive",
	3: "destroyed",
}

var StructStatus_value = map[string]int32{
	"building":  0,
	"active":    1,
	"inactive":  2,
	"destroyed": 3,
}

func (x StructStatus) String() string {
	return proto.EnumName(StructStatus_name, int32(x))
}

func (StructStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{8}
}

type StructType int32

const (
	StructType_miningRig      StructType = 0
	StructType_refinery       StructType = 1
	StructType_smallGenerator StructType = 2
)

var StructType_name = map[int32]string{
	0: "miningRig",
	1: "refinery",
	2: "smallGenerator",
}

var StructType_value = map[string]int32{
	"miningRig":      0,
	"refinery":       1,
	"smallGenerator": 2,
}

func (x StructType) String() string {
	return proto.EnumName(StructType_name, int32(x))
}

func (StructType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2b5c851dc116405, []int{9}
}

func init() {
	proto.RegisterEnum("structs.structs.ObjectType", ObjectType_name, ObjectType_value)
	proto.RegisterEnum("structs.structs.GridAttributeType", GridAttributeType_name, GridAttributeType_value)
	proto.RegisterEnum("structs.structs.AllocationType", AllocationType_name, AllocationType_value)
	proto.RegisterEnum("structs.structs.GuildJoinBypassLevel", GuildJoinBypassLevel_name, GuildJoinBypassLevel_value)
	proto.RegisterEnum("structs.structs.GuildJoinType", GuildJoinType_name, GuildJoinType_value)
	proto.RegisterEnum("structs.structs.RegistrationStatus", RegistrationStatus_name, RegistrationStatus_value)
	proto.RegisterEnum("structs.structs.Ambit", Ambit_name, Ambit_value)
	proto.RegisterEnum("structs.structs.StructCategory", StructCategory_name, StructCategory_value)
	proto.RegisterEnum("structs.structs.StructStatus", StructStatus_name, StructStatus_value)
	proto.RegisterEnum("structs.structs.StructType", StructType_name, StructType_value)
}

func init() { proto.RegisterFile("structs/structs/keys.proto", fileDescriptor_d2b5c851dc116405) }

var fileDescriptor_d2b5c851dc116405 = []byte{
	// 605 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x53, 0xbd, 0x6e, 0x14, 0x3b,
	0x14, 0xde, 0xd9, 0xc9, 0xfe, 0x9d, 0x6c, 0x36, 0xbe, 0xbe, 0x51, 0xee, 0x55, 0x8a, 0x7d, 0x80,
	0x29, 0x12, 0x10, 0x0d, 0x0d, 0x02, 0x12, 0x45, 0x08, 0x94, 0x02, 0x11, 0x2a, 0x3a, 0x8f, 0xe7,
	0xec, 0xc8, 0x64, 0xc6, 0x1e, 0x8e, 0xcf, 0x6c, 0x32, 0x35, 0x2f, 0xc0, 0x0b, 0xd1, 0x53, 0xa6,
	0xa4, 0x44, 0xc9, 0x8b, 0x20, 0x8f, 0x77, 0x13, 0x24, 0x2a, 0xdb, 0xe7, 0xf7, 0xfb, 0xbe, 0x73,
	0x0c, 0x47, 0x9e, 0xa9, 0xd5, 0xec, 0x4f, 0xb6, 0xe7, 0x15, 0x76, 0xfe, 0xb8, 0x21, 0xc7, 0x4e,
	0xee, 0x6f, 0x6c, 0xc7, 0x9b, 0xf3, 0xe8, 0xa0, 0x74, 0xa5, 0xeb, 0x7d, 0x27, 0xe1, 0x16, 0xc3,
	0xb2, 0xaf, 0x09, 0x80, 0xcb, 0x3f, 0xa3, 0xe6, 0x8f, 0x5d, 0x83, 0x72, 0x06, 0xa3, 0xb2, 0x35,
	0x55, 0x21, 0x06, 0x12, 0x60, 0xdc, 0x54, 0xaa, 0x43, 0x12, 0xc9, 0xe6, 0x6e, 0x91, 0xc5, 0x50,
	0xee, 0xc2, 0x84, 0x50, 0x69, 0x76, 0x24, 0x52, 0xb9, 0x00, 0xf0, 0x6d, 0xee, 0x59, 0xb1, 0x71,
	0x56, 0xec, 0x84, 0xc0, 0xd8, 0x4f, 0x8c, 0x82, 0x4f, 0x55, 0x95, 0xd3, 0xd1, 0x37, 0x96, 0x73,
	0x98, 0x1a, 0xbb, 0x6a, 0x7d, 0x78, 0x4d, 0x42, 0x19, 0x55, 0x14, 0x84, 0xde, 0x8b, 0x69, 0xf6,
	0x3d, 0x81, 0x7f, 0x4a, 0x32, 0xc5, 0x6b, 0x66, 0x32, 0x79, 0xcb, 0xd8, 0x83, 0x99, 0x40, 0xea,
	0x08, 0xc5, 0x40, 0x4e, 0x61, 0x67, 0xd5, 0x62, 0x25, 0x92, 0x50, 0x43, 0xab, 0x46, 0x69, 0xc3,
	0x9d, 0x18, 0x06, 0x7b, 0xe5, 0x54, 0x21, 0x52, 0xb9, 0x0f, 0xbb, 0x1b, 0x9e, 0x17, 0xc1, 0xb0,
	0x13, 0x88, 0x34, 0xee, 0x1a, 0x49, 0x8c, 0xe4, 0x21, 0x48, 0xed, 0xac, 0x45, 0x1d, 0x70, 0x9c,
	0x6d, 0xb3, 0xc7, 0xf2, 0x5f, 0xd8, 0xff, 0xc3, 0xee, 0x5a, 0xcb, 0x62, 0x22, 0x8f, 0xe0, 0xf0,
	0x11, 0xf4, 0x7b, 0x67, 0x2c, 0x23, 0x5d, 0xb2, 0x22, 0x16, 0x53, 0xf9, 0x3f, 0x1c, 0xfc, 0xe5,
	0x3b, 0xb7, 0x85, 0x98, 0x65, 0xcf, 0x61, 0xf1, 0xe8, 0xe9, 0xb1, 0xf7, 0x42, 0x28, 0x36, 0x5a,
	0x0c, 0x02, 0xd5, 0xa2, 0xb3, 0xaa, 0x36, 0x5a, 0x24, 0x72, 0x0f, 0x66, 0xaa, 0x65, 0x57, 0x2b,
	0xc6, 0x42, 0x0c, 0xb3, 0x57, 0x70, 0xd0, 0x0b, 0xfe, 0xce, 0x19, 0x7b, 0xda, 0x35, 0xca, 0xfb,
	0x0b, 0x5c, 0x63, 0x15, 0xf2, 0x75, 0xe5, 0x3c, 0x86, 0x49, 0x08, 0x98, 0x37, 0x48, 0xb5, 0xf1,
	0x41, 0x3a, 0x2c, 0xe2, 0x3c, 0x6a, 0xac, 0x73, 0x24, 0x31, 0xcc, 0x5e, 0xc2, 0xde, 0x43, 0x85,
	0x6d, 0x6b, 0x63, 0xd7, 0x86, 0x31, 0xb6, 0x26, 0xfc, 0xd2, 0xa2, 0xe7, 0x98, 0x55, 0x18, 0x42,
	0x1d, 0xa6, 0x18, 0xf4, 0x21, 0x77, 0xd3, 0x89, 0x34, 0x7b, 0x0b, 0x92, 0xb0, 0x34, 0x9e, 0xa9,
	0x87, 0x7f, 0xc9, 0x8a, 0x5b, 0x1f, 0x94, 0x6e, 0xc8, 0x35, 0x1b, 0x08, 0x73, 0x98, 0xaa, 0xa6,
	0x21, 0xb7, 0xde, 0xb6, 0x2f, 0xd0, 0x9a, 0x40, 0x20, 0x76, 0x58, 0xbb, 0x2b, 0x2c, 0x44, 0x9a,
	0x3d, 0x81, 0x91, 0xaa, 0x73, 0xc3, 0xa1, 0xfc, 0xb5, 0x62, 0xa4, 0x38, 0xbc, 0x4a, 0xd9, 0x90,
	0x36, 0x81, 0x54, 0x19, 0x8a, 0xcd, 0x7d, 0xa3, 0x34, 0x8a, 0x34, 0xcb, 0x60, 0x11, 0x07, 0x77,
	0xa6, 0x18, 0x4b, 0x47, 0x5d, 0x10, 0x28, 0xee, 0x9a, 0xa2, 0x4e, 0x0c, 0x42, 0xec, 0xaa, 0x42,
	0x64, 0x91, 0x64, 0xe7, 0x30, 0x8f, 0xb1, 0x8f, 0x10, 0xf3, 0xc0, 0xdc, 0xd8, 0x32, 0xee, 0xab,
	0xd2, 0x6c, 0xd6, 0x18, 0xd7, 0xc4, 0xd8, 0xcd, 0x6b, 0x18, 0x2a, 0x16, 0xe8, 0x99, 0x5c, 0xd7,
	0x83, 0x7c, 0x01, 0x10, 0xcb, 0xf4, 0x6a, 0xed, 0xc1, 0xac, 0x36, 0xd6, 0xd8, 0xf2, 0x83, 0x29,
	0x23, 0x51, 0xc2, 0x95, 0xb1, 0x48, 0x9d, 0x48, 0xa4, 0x84, 0x85, 0xaf, 0x55, 0x55, 0xbd, 0x41,
	0x8b, 0xa4, 0xc2, 0xca, 0x0f, 0x4f, 0x9f, 0xfe, 0xb8, 0x5b, 0x26, 0xb7, 0x77, 0xcb, 0xe4, 0xd7,
	0xdd, 0x32, 0xf9, 0x76, 0xbf, 0x1c, 0xdc, 0xde, 0x2f, 0x07, 0x3f, 0xef, 0x97, 0x83, 0x4f, 0xff,
	0x6d, 0xbf, 0xe1, 0xcd, 0xc3, 0x87, 0xe4, 0xae, 0x41, 0x9f, 0x8f, 0xfb, 0xbf, 0xf6, 0xec, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xef, 0xcb, 0xe7, 0xb0, 0x03, 0x00, 0x00,
}
