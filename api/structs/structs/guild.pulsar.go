// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package structs

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Guild                                    protoreflect.MessageDescriptor
	fd_Guild_id                                 protoreflect.FieldDescriptor
	fd_Guild_index                              protoreflect.FieldDescriptor
	fd_Guild_endpoint                           protoreflect.FieldDescriptor
	fd_Guild_creator                            protoreflect.FieldDescriptor
	fd_Guild_owner                              protoreflect.FieldDescriptor
	fd_Guild_joinInfusionMinimum                protoreflect.FieldDescriptor
	fd_Guild_joinInfusionMinimumBypassByRequest protoreflect.FieldDescriptor
	fd_Guild_joinInfusionMinimumBypassByInvite  protoreflect.FieldDescriptor
	fd_Guild_primaryReactorId                   protoreflect.FieldDescriptor
	fd_Guild_entrySubstationId                  protoreflect.FieldDescriptor
)

func init() {
	file_structs_structs_guild_proto_init()
	md_Guild = File_structs_structs_guild_proto.Messages().ByName("Guild")
	fd_Guild_id = md_Guild.Fields().ByName("id")
	fd_Guild_index = md_Guild.Fields().ByName("index")
	fd_Guild_endpoint = md_Guild.Fields().ByName("endpoint")
	fd_Guild_creator = md_Guild.Fields().ByName("creator")
	fd_Guild_owner = md_Guild.Fields().ByName("owner")
	fd_Guild_joinInfusionMinimum = md_Guild.Fields().ByName("joinInfusionMinimum")
	fd_Guild_joinInfusionMinimumBypassByRequest = md_Guild.Fields().ByName("joinInfusionMinimumBypassByRequest")
	fd_Guild_joinInfusionMinimumBypassByInvite = md_Guild.Fields().ByName("joinInfusionMinimumBypassByInvite")
	fd_Guild_primaryReactorId = md_Guild.Fields().ByName("primaryReactorId")
	fd_Guild_entrySubstationId = md_Guild.Fields().ByName("entrySubstationId")
}

var _ protoreflect.Message = (*fastReflection_Guild)(nil)

type fastReflection_Guild Guild

func (x *Guild) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Guild)(x)
}

func (x *Guild) slowProtoReflect() protoreflect.Message {
	mi := &file_structs_structs_guild_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Guild_messageType fastReflection_Guild_messageType
var _ protoreflect.MessageType = fastReflection_Guild_messageType{}

type fastReflection_Guild_messageType struct{}

func (x fastReflection_Guild_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Guild)(nil)
}
func (x fastReflection_Guild_messageType) New() protoreflect.Message {
	return new(fastReflection_Guild)
}
func (x fastReflection_Guild_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Guild
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Guild) Descriptor() protoreflect.MessageDescriptor {
	return md_Guild
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Guild) Type() protoreflect.MessageType {
	return _fastReflection_Guild_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Guild) New() protoreflect.Message {
	return new(fastReflection_Guild)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Guild) Interface() protoreflect.ProtoMessage {
	return (*Guild)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Guild) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_Guild_id, value) {
			return
		}
	}
	if x.Index != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Index)
		if !f(fd_Guild_index, value) {
			return
		}
	}
	if x.Endpoint != "" {
		value := protoreflect.ValueOfString(x.Endpoint)
		if !f(fd_Guild_endpoint, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_Guild_creator, value) {
			return
		}
	}
	if x.Owner != "" {
		value := protoreflect.ValueOfString(x.Owner)
		if !f(fd_Guild_owner, value) {
			return
		}
	}
	if x.JoinInfusionMinimum != uint64(0) {
		value := protoreflect.ValueOfUint64(x.JoinInfusionMinimum)
		if !f(fd_Guild_joinInfusionMinimum, value) {
			return
		}
	}
	if x.JoinInfusionMinimumBypassByRequest != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.JoinInfusionMinimumBypassByRequest))
		if !f(fd_Guild_joinInfusionMinimumBypassByRequest, value) {
			return
		}
	}
	if x.JoinInfusionMinimumBypassByInvite != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.JoinInfusionMinimumBypassByInvite))
		if !f(fd_Guild_joinInfusionMinimumBypassByInvite, value) {
			return
		}
	}
	if x.PrimaryReactorId != "" {
		value := protoreflect.ValueOfString(x.PrimaryReactorId)
		if !f(fd_Guild_primaryReactorId, value) {
			return
		}
	}
	if x.EntrySubstationId != "" {
		value := protoreflect.ValueOfString(x.EntrySubstationId)
		if !f(fd_Guild_entrySubstationId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Guild) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "structs.structs.Guild.id":
		return x.Id != ""
	case "structs.structs.Guild.index":
		return x.Index != uint64(0)
	case "structs.structs.Guild.endpoint":
		return x.Endpoint != ""
	case "structs.structs.Guild.creator":
		return x.Creator != ""
	case "structs.structs.Guild.owner":
		return x.Owner != ""
	case "structs.structs.Guild.joinInfusionMinimum":
		return x.JoinInfusionMinimum != uint64(0)
	case "structs.structs.Guild.joinInfusionMinimumBypassByRequest":
		return x.JoinInfusionMinimumBypassByRequest != 0
	case "structs.structs.Guild.joinInfusionMinimumBypassByInvite":
		return x.JoinInfusionMinimumBypassByInvite != 0
	case "structs.structs.Guild.primaryReactorId":
		return x.PrimaryReactorId != ""
	case "structs.structs.Guild.entrySubstationId":
		return x.EntrySubstationId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.Guild"))
		}
		panic(fmt.Errorf("message structs.structs.Guild does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Guild) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "structs.structs.Guild.id":
		x.Id = ""
	case "structs.structs.Guild.index":
		x.Index = uint64(0)
	case "structs.structs.Guild.endpoint":
		x.Endpoint = ""
	case "structs.structs.Guild.creator":
		x.Creator = ""
	case "structs.structs.Guild.owner":
		x.Owner = ""
	case "structs.structs.Guild.joinInfusionMinimum":
		x.JoinInfusionMinimum = uint64(0)
	case "structs.structs.Guild.joinInfusionMinimumBypassByRequest":
		x.JoinInfusionMinimumBypassByRequest = 0
	case "structs.structs.Guild.joinInfusionMinimumBypassByInvite":
		x.JoinInfusionMinimumBypassByInvite = 0
	case "structs.structs.Guild.primaryReactorId":
		x.PrimaryReactorId = ""
	case "structs.structs.Guild.entrySubstationId":
		x.EntrySubstationId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.Guild"))
		}
		panic(fmt.Errorf("message structs.structs.Guild does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Guild) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "structs.structs.Guild.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "structs.structs.Guild.index":
		value := x.Index
		return protoreflect.ValueOfUint64(value)
	case "structs.structs.Guild.endpoint":
		value := x.Endpoint
		return protoreflect.ValueOfString(value)
	case "structs.structs.Guild.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "structs.structs.Guild.owner":
		value := x.Owner
		return protoreflect.ValueOfString(value)
	case "structs.structs.Guild.joinInfusionMinimum":
		value := x.JoinInfusionMinimum
		return protoreflect.ValueOfUint64(value)
	case "structs.structs.Guild.joinInfusionMinimumBypassByRequest":
		value := x.JoinInfusionMinimumBypassByRequest
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "structs.structs.Guild.joinInfusionMinimumBypassByInvite":
		value := x.JoinInfusionMinimumBypassByInvite
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "structs.structs.Guild.primaryReactorId":
		value := x.PrimaryReactorId
		return protoreflect.ValueOfString(value)
	case "structs.structs.Guild.entrySubstationId":
		value := x.EntrySubstationId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.Guild"))
		}
		panic(fmt.Errorf("message structs.structs.Guild does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Guild) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "structs.structs.Guild.id":
		x.Id = value.Interface().(string)
	case "structs.structs.Guild.index":
		x.Index = value.Uint()
	case "structs.structs.Guild.endpoint":
		x.Endpoint = value.Interface().(string)
	case "structs.structs.Guild.creator":
		x.Creator = value.Interface().(string)
	case "structs.structs.Guild.owner":
		x.Owner = value.Interface().(string)
	case "structs.structs.Guild.joinInfusionMinimum":
		x.JoinInfusionMinimum = value.Uint()
	case "structs.structs.Guild.joinInfusionMinimumBypassByRequest":
		x.JoinInfusionMinimumBypassByRequest = (GuildJoinBypassLevel)(value.Enum())
	case "structs.structs.Guild.joinInfusionMinimumBypassByInvite":
		x.JoinInfusionMinimumBypassByInvite = (GuildJoinBypassLevel)(value.Enum())
	case "structs.structs.Guild.primaryReactorId":
		x.PrimaryReactorId = value.Interface().(string)
	case "structs.structs.Guild.entrySubstationId":
		x.EntrySubstationId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.Guild"))
		}
		panic(fmt.Errorf("message structs.structs.Guild does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Guild) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "structs.structs.Guild.id":
		panic(fmt.Errorf("field id of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.index":
		panic(fmt.Errorf("field index of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.endpoint":
		panic(fmt.Errorf("field endpoint of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.creator":
		panic(fmt.Errorf("field creator of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.owner":
		panic(fmt.Errorf("field owner of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.joinInfusionMinimum":
		panic(fmt.Errorf("field joinInfusionMinimum of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.joinInfusionMinimumBypassByRequest":
		panic(fmt.Errorf("field joinInfusionMinimumBypassByRequest of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.joinInfusionMinimumBypassByInvite":
		panic(fmt.Errorf("field joinInfusionMinimumBypassByInvite of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.primaryReactorId":
		panic(fmt.Errorf("field primaryReactorId of message structs.structs.Guild is not mutable"))
	case "structs.structs.Guild.entrySubstationId":
		panic(fmt.Errorf("field entrySubstationId of message structs.structs.Guild is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.Guild"))
		}
		panic(fmt.Errorf("message structs.structs.Guild does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Guild) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "structs.structs.Guild.id":
		return protoreflect.ValueOfString("")
	case "structs.structs.Guild.index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "structs.structs.Guild.endpoint":
		return protoreflect.ValueOfString("")
	case "structs.structs.Guild.creator":
		return protoreflect.ValueOfString("")
	case "structs.structs.Guild.owner":
		return protoreflect.ValueOfString("")
	case "structs.structs.Guild.joinInfusionMinimum":
		return protoreflect.ValueOfUint64(uint64(0))
	case "structs.structs.Guild.joinInfusionMinimumBypassByRequest":
		return protoreflect.ValueOfEnum(0)
	case "structs.structs.Guild.joinInfusionMinimumBypassByInvite":
		return protoreflect.ValueOfEnum(0)
	case "structs.structs.Guild.primaryReactorId":
		return protoreflect.ValueOfString("")
	case "structs.structs.Guild.entrySubstationId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.Guild"))
		}
		panic(fmt.Errorf("message structs.structs.Guild does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Guild) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in structs.structs.Guild", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Guild) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Guild) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Guild) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Guild) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Guild)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Index != 0 {
			n += 1 + runtime.Sov(uint64(x.Index))
		}
		l = len(x.Endpoint)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Owner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.JoinInfusionMinimum != 0 {
			n += 1 + runtime.Sov(uint64(x.JoinInfusionMinimum))
		}
		if x.JoinInfusionMinimumBypassByRequest != 0 {
			n += 1 + runtime.Sov(uint64(x.JoinInfusionMinimumBypassByRequest))
		}
		if x.JoinInfusionMinimumBypassByInvite != 0 {
			n += 1 + runtime.Sov(uint64(x.JoinInfusionMinimumBypassByInvite))
		}
		l = len(x.PrimaryReactorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EntrySubstationId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Guild)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EntrySubstationId) > 0 {
			i -= len(x.EntrySubstationId)
			copy(dAtA[i:], x.EntrySubstationId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EntrySubstationId)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.PrimaryReactorId) > 0 {
			i -= len(x.PrimaryReactorId)
			copy(dAtA[i:], x.PrimaryReactorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PrimaryReactorId)))
			i--
			dAtA[i] = 0x4a
		}
		if x.JoinInfusionMinimumBypassByInvite != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.JoinInfusionMinimumBypassByInvite))
			i--
			dAtA[i] = 0x40
		}
		if x.JoinInfusionMinimumBypassByRequest != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.JoinInfusionMinimumBypassByRequest))
			i--
			dAtA[i] = 0x38
		}
		if x.JoinInfusionMinimum != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.JoinInfusionMinimum))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Owner) > 0 {
			i -= len(x.Owner)
			copy(dAtA[i:], x.Owner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Owner)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Endpoint) > 0 {
			i -= len(x.Endpoint)
			copy(dAtA[i:], x.Endpoint)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Endpoint)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Index != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Index))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Guild)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Guild: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Guild: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				x.Index = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Index |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Endpoint = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Owner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JoinInfusionMinimum", wireType)
				}
				x.JoinInfusionMinimum = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.JoinInfusionMinimum |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JoinInfusionMinimumBypassByRequest", wireType)
				}
				x.JoinInfusionMinimumBypassByRequest = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.JoinInfusionMinimumBypassByRequest |= GuildJoinBypassLevel(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JoinInfusionMinimumBypassByInvite", wireType)
				}
				x.JoinInfusionMinimumBypassByInvite = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.JoinInfusionMinimumBypassByInvite |= GuildJoinBypassLevel(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PrimaryReactorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PrimaryReactorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EntrySubstationId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EntrySubstationId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GuildMembershipApplication                    protoreflect.MessageDescriptor
	fd_GuildMembershipApplication_guildId            protoreflect.FieldDescriptor
	fd_GuildMembershipApplication_playerId           protoreflect.FieldDescriptor
	fd_GuildMembershipApplication_joinType           protoreflect.FieldDescriptor
	fd_GuildMembershipApplication_registrationStatus protoreflect.FieldDescriptor
	fd_GuildMembershipApplication_proposer           protoreflect.FieldDescriptor
	fd_GuildMembershipApplication_substationId       protoreflect.FieldDescriptor
)

func init() {
	file_structs_structs_guild_proto_init()
	md_GuildMembershipApplication = File_structs_structs_guild_proto.Messages().ByName("GuildMembershipApplication")
	fd_GuildMembershipApplication_guildId = md_GuildMembershipApplication.Fields().ByName("guildId")
	fd_GuildMembershipApplication_playerId = md_GuildMembershipApplication.Fields().ByName("playerId")
	fd_GuildMembershipApplication_joinType = md_GuildMembershipApplication.Fields().ByName("joinType")
	fd_GuildMembershipApplication_registrationStatus = md_GuildMembershipApplication.Fields().ByName("registrationStatus")
	fd_GuildMembershipApplication_proposer = md_GuildMembershipApplication.Fields().ByName("proposer")
	fd_GuildMembershipApplication_substationId = md_GuildMembershipApplication.Fields().ByName("substationId")
}

var _ protoreflect.Message = (*fastReflection_GuildMembershipApplication)(nil)

type fastReflection_GuildMembershipApplication GuildMembershipApplication

func (x *GuildMembershipApplication) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GuildMembershipApplication)(x)
}

func (x *GuildMembershipApplication) slowProtoReflect() protoreflect.Message {
	mi := &file_structs_structs_guild_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GuildMembershipApplication_messageType fastReflection_GuildMembershipApplication_messageType
var _ protoreflect.MessageType = fastReflection_GuildMembershipApplication_messageType{}

type fastReflection_GuildMembershipApplication_messageType struct{}

func (x fastReflection_GuildMembershipApplication_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GuildMembershipApplication)(nil)
}
func (x fastReflection_GuildMembershipApplication_messageType) New() protoreflect.Message {
	return new(fastReflection_GuildMembershipApplication)
}
func (x fastReflection_GuildMembershipApplication_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GuildMembershipApplication
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GuildMembershipApplication) Descriptor() protoreflect.MessageDescriptor {
	return md_GuildMembershipApplication
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GuildMembershipApplication) Type() protoreflect.MessageType {
	return _fastReflection_GuildMembershipApplication_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GuildMembershipApplication) New() protoreflect.Message {
	return new(fastReflection_GuildMembershipApplication)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GuildMembershipApplication) Interface() protoreflect.ProtoMessage {
	return (*GuildMembershipApplication)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GuildMembershipApplication) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.GuildId != "" {
		value := protoreflect.ValueOfString(x.GuildId)
		if !f(fd_GuildMembershipApplication_guildId, value) {
			return
		}
	}
	if x.PlayerId != "" {
		value := protoreflect.ValueOfString(x.PlayerId)
		if !f(fd_GuildMembershipApplication_playerId, value) {
			return
		}
	}
	if x.JoinType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.JoinType))
		if !f(fd_GuildMembershipApplication_joinType, value) {
			return
		}
	}
	if x.RegistrationStatus != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.RegistrationStatus))
		if !f(fd_GuildMembershipApplication_registrationStatus, value) {
			return
		}
	}
	if x.Proposer != "" {
		value := protoreflect.ValueOfString(x.Proposer)
		if !f(fd_GuildMembershipApplication_proposer, value) {
			return
		}
	}
	if x.SubstationId != "" {
		value := protoreflect.ValueOfString(x.SubstationId)
		if !f(fd_GuildMembershipApplication_substationId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GuildMembershipApplication) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "structs.structs.GuildMembershipApplication.guildId":
		return x.GuildId != ""
	case "structs.structs.GuildMembershipApplication.playerId":
		return x.PlayerId != ""
	case "structs.structs.GuildMembershipApplication.joinType":
		return x.JoinType != 0
	case "structs.structs.GuildMembershipApplication.registrationStatus":
		return x.RegistrationStatus != 0
	case "structs.structs.GuildMembershipApplication.proposer":
		return x.Proposer != ""
	case "structs.structs.GuildMembershipApplication.substationId":
		return x.SubstationId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.GuildMembershipApplication"))
		}
		panic(fmt.Errorf("message structs.structs.GuildMembershipApplication does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GuildMembershipApplication) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "structs.structs.GuildMembershipApplication.guildId":
		x.GuildId = ""
	case "structs.structs.GuildMembershipApplication.playerId":
		x.PlayerId = ""
	case "structs.structs.GuildMembershipApplication.joinType":
		x.JoinType = 0
	case "structs.structs.GuildMembershipApplication.registrationStatus":
		x.RegistrationStatus = 0
	case "structs.structs.GuildMembershipApplication.proposer":
		x.Proposer = ""
	case "structs.structs.GuildMembershipApplication.substationId":
		x.SubstationId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.GuildMembershipApplication"))
		}
		panic(fmt.Errorf("message structs.structs.GuildMembershipApplication does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GuildMembershipApplication) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "structs.structs.GuildMembershipApplication.guildId":
		value := x.GuildId
		return protoreflect.ValueOfString(value)
	case "structs.structs.GuildMembershipApplication.playerId":
		value := x.PlayerId
		return protoreflect.ValueOfString(value)
	case "structs.structs.GuildMembershipApplication.joinType":
		value := x.JoinType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "structs.structs.GuildMembershipApplication.registrationStatus":
		value := x.RegistrationStatus
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "structs.structs.GuildMembershipApplication.proposer":
		value := x.Proposer
		return protoreflect.ValueOfString(value)
	case "structs.structs.GuildMembershipApplication.substationId":
		value := x.SubstationId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.GuildMembershipApplication"))
		}
		panic(fmt.Errorf("message structs.structs.GuildMembershipApplication does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GuildMembershipApplication) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "structs.structs.GuildMembershipApplication.guildId":
		x.GuildId = value.Interface().(string)
	case "structs.structs.GuildMembershipApplication.playerId":
		x.PlayerId = value.Interface().(string)
	case "structs.structs.GuildMembershipApplication.joinType":
		x.JoinType = (GuildJoinType)(value.Enum())
	case "structs.structs.GuildMembershipApplication.registrationStatus":
		x.RegistrationStatus = (RegistrationStatus)(value.Enum())
	case "structs.structs.GuildMembershipApplication.proposer":
		x.Proposer = value.Interface().(string)
	case "structs.structs.GuildMembershipApplication.substationId":
		x.SubstationId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.GuildMembershipApplication"))
		}
		panic(fmt.Errorf("message structs.structs.GuildMembershipApplication does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GuildMembershipApplication) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "structs.structs.GuildMembershipApplication.guildId":
		panic(fmt.Errorf("field guildId of message structs.structs.GuildMembershipApplication is not mutable"))
	case "structs.structs.GuildMembershipApplication.playerId":
		panic(fmt.Errorf("field playerId of message structs.structs.GuildMembershipApplication is not mutable"))
	case "structs.structs.GuildMembershipApplication.joinType":
		panic(fmt.Errorf("field joinType of message structs.structs.GuildMembershipApplication is not mutable"))
	case "structs.structs.GuildMembershipApplication.registrationStatus":
		panic(fmt.Errorf("field registrationStatus of message structs.structs.GuildMembershipApplication is not mutable"))
	case "structs.structs.GuildMembershipApplication.proposer":
		panic(fmt.Errorf("field proposer of message structs.structs.GuildMembershipApplication is not mutable"))
	case "structs.structs.GuildMembershipApplication.substationId":
		panic(fmt.Errorf("field substationId of message structs.structs.GuildMembershipApplication is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.GuildMembershipApplication"))
		}
		panic(fmt.Errorf("message structs.structs.GuildMembershipApplication does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GuildMembershipApplication) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "structs.structs.GuildMembershipApplication.guildId":
		return protoreflect.ValueOfString("")
	case "structs.structs.GuildMembershipApplication.playerId":
		return protoreflect.ValueOfString("")
	case "structs.structs.GuildMembershipApplication.joinType":
		return protoreflect.ValueOfEnum(0)
	case "structs.structs.GuildMembershipApplication.registrationStatus":
		return protoreflect.ValueOfEnum(0)
	case "structs.structs.GuildMembershipApplication.proposer":
		return protoreflect.ValueOfString("")
	case "structs.structs.GuildMembershipApplication.substationId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: structs.structs.GuildMembershipApplication"))
		}
		panic(fmt.Errorf("message structs.structs.GuildMembershipApplication does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GuildMembershipApplication) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in structs.structs.GuildMembershipApplication", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GuildMembershipApplication) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GuildMembershipApplication) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GuildMembershipApplication) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GuildMembershipApplication) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GuildMembershipApplication)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.GuildId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PlayerId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.JoinType != 0 {
			n += 1 + runtime.Sov(uint64(x.JoinType))
		}
		if x.RegistrationStatus != 0 {
			n += 1 + runtime.Sov(uint64(x.RegistrationStatus))
		}
		l = len(x.Proposer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubstationId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GuildMembershipApplication)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubstationId) > 0 {
			i -= len(x.SubstationId)
			copy(dAtA[i:], x.SubstationId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubstationId)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Proposer) > 0 {
			i -= len(x.Proposer)
			copy(dAtA[i:], x.Proposer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Proposer)))
			i--
			dAtA[i] = 0x2a
		}
		if x.RegistrationStatus != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RegistrationStatus))
			i--
			dAtA[i] = 0x20
		}
		if x.JoinType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.JoinType))
			i--
			dAtA[i] = 0x18
		}
		if len(x.PlayerId) > 0 {
			i -= len(x.PlayerId)
			copy(dAtA[i:], x.PlayerId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PlayerId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.GuildId) > 0 {
			i -= len(x.GuildId)
			copy(dAtA[i:], x.GuildId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GuildId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GuildMembershipApplication)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GuildMembershipApplication: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GuildMembershipApplication: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GuildId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GuildId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PlayerId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JoinType", wireType)
				}
				x.JoinType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.JoinType |= GuildJoinType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RegistrationStatus", wireType)
				}
				x.RegistrationStatus = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RegistrationStatus |= RegistrationStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Proposer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubstationId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubstationId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: structs/structs/guild.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Guild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index                              uint64               `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Endpoint                           string               `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Creator                            string               `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner                              string               `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	JoinInfusionMinimum                uint64               `protobuf:"varint,6,opt,name=joinInfusionMinimum,proto3" json:"joinInfusionMinimum,omitempty"`
	JoinInfusionMinimumBypassByRequest GuildJoinBypassLevel `protobuf:"varint,7,opt,name=joinInfusionMinimumBypassByRequest,proto3,enum=structs.structs.GuildJoinBypassLevel" json:"joinInfusionMinimumBypassByRequest,omitempty"`
	JoinInfusionMinimumBypassByInvite  GuildJoinBypassLevel `protobuf:"varint,8,opt,name=joinInfusionMinimumBypassByInvite,proto3,enum=structs.structs.GuildJoinBypassLevel" json:"joinInfusionMinimumBypassByInvite,omitempty"`
	PrimaryReactorId                   string               `protobuf:"bytes,9,opt,name=primaryReactorId,proto3" json:"primaryReactorId,omitempty"`
	EntrySubstationId                  string               `protobuf:"bytes,10,opt,name=entrySubstationId,proto3" json:"entrySubstationId,omitempty"`
}

func (x *Guild) Reset() {
	*x = Guild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_structs_guild_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guild) ProtoMessage() {}

// Deprecated: Use Guild.ProtoReflect.Descriptor instead.
func (*Guild) Descriptor() ([]byte, []int) {
	return file_structs_structs_guild_proto_rawDescGZIP(), []int{0}
}

func (x *Guild) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Guild) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Guild) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Guild) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Guild) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Guild) GetJoinInfusionMinimum() uint64 {
	if x != nil {
		return x.JoinInfusionMinimum
	}
	return 0
}

func (x *Guild) GetJoinInfusionMinimumBypassByRequest() GuildJoinBypassLevel {
	if x != nil {
		return x.JoinInfusionMinimumBypassByRequest
	}
	return GuildJoinBypassLevel_closed
}

func (x *Guild) GetJoinInfusionMinimumBypassByInvite() GuildJoinBypassLevel {
	if x != nil {
		return x.JoinInfusionMinimumBypassByInvite
	}
	return GuildJoinBypassLevel_closed
}

func (x *Guild) GetPrimaryReactorId() string {
	if x != nil {
		return x.PrimaryReactorId
	}
	return ""
}

func (x *Guild) GetEntrySubstationId() string {
	if x != nil {
		return x.EntrySubstationId
	}
	return ""
}

type GuildMembershipApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId            string             `protobuf:"bytes,1,opt,name=guildId,proto3" json:"guildId,omitempty"`
	PlayerId           string             `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	JoinType           GuildJoinType      `protobuf:"varint,3,opt,name=joinType,proto3,enum=structs.structs.GuildJoinType" json:"joinType,omitempty"` // Invite | Request
	RegistrationStatus RegistrationStatus `protobuf:"varint,4,opt,name=registrationStatus,proto3,enum=structs.structs.RegistrationStatus" json:"registrationStatus,omitempty"`
	Proposer           string             `protobuf:"bytes,5,opt,name=proposer,proto3" json:"proposer,omitempty"`
	SubstationId       string             `protobuf:"bytes,6,opt,name=substationId,proto3" json:"substationId,omitempty"`
}

func (x *GuildMembershipApplication) Reset() {
	*x = GuildMembershipApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_structs_guild_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMembershipApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembershipApplication) ProtoMessage() {}

// Deprecated: Use GuildMembershipApplication.ProtoReflect.Descriptor instead.
func (*GuildMembershipApplication) Descriptor() ([]byte, []int) {
	return file_structs_structs_guild_proto_rawDescGZIP(), []int{1}
}

func (x *GuildMembershipApplication) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *GuildMembershipApplication) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GuildMembershipApplication) GetJoinType() GuildJoinType {
	if x != nil {
		return x.JoinType
	}
	return GuildJoinType_invite
}

func (x *GuildMembershipApplication) GetRegistrationStatus() RegistrationStatus {
	if x != nil {
		return x.RegistrationStatus
	}
	return RegistrationStatus_proposed
}

func (x *GuildMembershipApplication) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *GuildMembershipApplication) GetSubstationId() string {
	if x != nil {
		return x.SubstationId
	}
	return ""
}

var File_structs_structs_guild_proto protoreflect.FileDescriptor

var file_structs_structs_guild_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x1a, 0x1a,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e,
	0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x03,
	0x0a, 0x05, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x6a, 0x6f, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6a, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x7c, 0x0a, 0x22, 0x6a,
	0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4a,
	0x6f, 0x69, 0x6e, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x05,
	0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x22, 0x6a, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x21, 0x6a, 0x6f, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x69, 0x6e,
	0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x05, 0xa8, 0xe7, 0xb0,
	0x2a, 0x01, 0x52, 0x21, 0x6a, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xb1, 0x02, 0x0a, 0x1a, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73,
	0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x6a,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52,
	0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x42, 0xa0, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x42, 0x0a, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0xa2, 0x02, 0x03, 0x53, 0x53,
	0x58, 0xaa, 0x02, 0x0f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0xca, 0x02, 0x0f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x5c, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0xe2, 0x02, 0x1b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x5c,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x3a, 0x3a, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_structs_structs_guild_proto_rawDescOnce sync.Once
	file_structs_structs_guild_proto_rawDescData = file_structs_structs_guild_proto_rawDesc
)

func file_structs_structs_guild_proto_rawDescGZIP() []byte {
	file_structs_structs_guild_proto_rawDescOnce.Do(func() {
		file_structs_structs_guild_proto_rawDescData = protoimpl.X.CompressGZIP(file_structs_structs_guild_proto_rawDescData)
	})
	return file_structs_structs_guild_proto_rawDescData
}

var file_structs_structs_guild_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_structs_structs_guild_proto_goTypes = []interface{}{
	(*Guild)(nil),                      // 0: structs.structs.Guild
	(*GuildMembershipApplication)(nil), // 1: structs.structs.GuildMembershipApplication
	(GuildJoinBypassLevel)(0),          // 2: structs.structs.guildJoinBypassLevel
	(GuildJoinType)(0),                 // 3: structs.structs.guildJoinType
	(RegistrationStatus)(0),            // 4: structs.structs.registrationStatus
}
var file_structs_structs_guild_proto_depIdxs = []int32{
	2, // 0: structs.structs.Guild.joinInfusionMinimumBypassByRequest:type_name -> structs.structs.guildJoinBypassLevel
	2, // 1: structs.structs.Guild.joinInfusionMinimumBypassByInvite:type_name -> structs.structs.guildJoinBypassLevel
	3, // 2: structs.structs.GuildMembershipApplication.joinType:type_name -> structs.structs.guildJoinType
	4, // 3: structs.structs.GuildMembershipApplication.registrationStatus:type_name -> structs.structs.registrationStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_structs_structs_guild_proto_init() }
func file_structs_structs_guild_proto_init() {
	if File_structs_structs_guild_proto != nil {
		return
	}
	file_structs_structs_keys_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_structs_structs_guild_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_structs_guild_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMembershipApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_structs_structs_guild_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_structs_structs_guild_proto_goTypes,
		DependencyIndexes: file_structs_structs_guild_proto_depIdxs,
		MessageInfos:      file_structs_structs_guild_proto_msgTypes,
	}.Build()
	File_structs_structs_guild_proto = out.File
	file_structs_structs_guild_proto_rawDesc = nil
	file_structs_structs_guild_proto_goTypes = nil
	file_structs_structs_guild_proto_depIdxs = nil
}
